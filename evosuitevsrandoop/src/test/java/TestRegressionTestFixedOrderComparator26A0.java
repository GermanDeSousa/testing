import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class TestRegressionTestFixedOrderComparator26A0 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test001");
        int i0 = collections.comparators.FixedOrderComparator.UNKNOWN_AFTER;
        org.junit.Assert.assertTrue(i0 == 1);
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test002");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        try {
            fixedOrderComparator7.setUnknownObjectBehavior((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test003");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        boolean b1 = fixedOrderComparator0.isLocked();
        java.lang.Object obj2 = new java.lang.Object();
        collections.comparators.FixedOrderComparator fixedOrderComparator3 = new collections.comparators.FixedOrderComparator();
        boolean b4 = fixedOrderComparator3.isLocked();
        try {
            boolean b5 = fixedOrderComparator0.addAsEqual(obj2, (java.lang.Object) fixedOrderComparator3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b1 == false);
        org.junit.Assert.assertTrue(b4 == false);
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test004");
        int i0 = collections.comparators.FixedOrderComparator.UNKNOWN_BEFORE;
        org.junit.Assert.assertTrue(i0 == 0);
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test005");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        boolean b1 = fixedOrderComparator0.isLocked();
        try {
            fixedOrderComparator0.setUnknownObjectBehavior((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b1 == false);
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test006");
        int i0 = collections.comparators.FixedOrderComparator.UNKNOWN_THROW_EXCEPTION;
        org.junit.Assert.assertTrue(i0 == 2);
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test007");
        java.util.List list0 = null;
        try {
            collections.comparators.FixedOrderComparator fixedOrderComparator1 = new collections.comparators.FixedOrderComparator(list0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test008");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        boolean b17 = fixedOrderComparator15.add((java.lang.Object) (short) 10);
        try {
            int i19 = fixedOrderComparator7.compare((java.lang.Object) b17, (java.lang.Object) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b17 == true);
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test009");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b12 = fixedOrderComparator10.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        boolean b19 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        fixedOrderComparator27.setUnknownObjectBehavior(0);
        boolean b31 = fixedOrderComparator27.add((java.lang.Object) 1.0f);
        try {
            boolean b32 = fixedOrderComparator0.addAsEqual((java.lang.Object) b19, (java.lang.Object) 1.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(b31 == true);
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test010");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator();
        int i10 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b11 = fixedOrderComparator9.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator();
        int i13 = fixedOrderComparator12.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator12.isLocked();
        boolean b15 = fixedOrderComparator9.add((java.lang.Object) b14);
        try {
            boolean b16 = fixedOrderComparator7.addAsEqual((java.lang.Object) 100.0f, (java.lang.Object) b15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i10 == 2);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertTrue(i13 == 2);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertTrue(b15 == true);
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test011");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        boolean b1 = fixedOrderComparator0.isLocked();
        try {
            fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b1 == false);
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test012");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        try {
            boolean b6 = fixedOrderComparator0.addAsEqual((java.lang.Object) (byte) 1, (java.lang.Object) 100.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test013");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        fixedOrderComparator9.setUnknownObjectBehavior(0);
        boolean b13 = fixedOrderComparator9.add((java.lang.Object) 1.0f);
        java.lang.Object obj14 = null;
        java.lang.Object[] obj_array21 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        fixedOrderComparator22.setUnknownObjectBehavior(0);
        boolean b26 = fixedOrderComparator22.add((java.lang.Object) 1.0f);
        int i27 = fixedOrderComparator22.getUnknownObjectBehavior();
        int i28 = fixedOrderComparator9.compare(obj14, (java.lang.Object) i27);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        int i32 = fixedOrderComparator29.getUnknownObjectBehavior();
        fixedOrderComparator29.setUnknownObjectBehavior((int) (byte) 0);
        try {
            int i35 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator9, (java.lang.Object) fixedOrderComparator29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(i28 == (-1));
        org.junit.Assert.assertTrue(i32 == 0);
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test014");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array34 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array34);
        fixedOrderComparator35.setUnknownObjectBehavior(0);
        boolean b39 = fixedOrderComparator35.add((java.lang.Object) 1.0f);
        java.lang.Object obj40 = null;
        java.lang.Object[] obj_array47 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array47);
        fixedOrderComparator48.setUnknownObjectBehavior(0);
        boolean b52 = fixedOrderComparator48.add((java.lang.Object) 1.0f);
        int i53 = fixedOrderComparator48.getUnknownObjectBehavior();
        int i54 = fixedOrderComparator35.compare(obj40, (java.lang.Object) i53);
        java.lang.Object[] obj_array61 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array61);
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array61);
        try {
            boolean b64 = fixedOrderComparator7.addAsEqual(obj40, (java.lang.Object) fixedOrderComparator63);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertNotNull(obj_array34);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertNotNull(obj_array47);
        org.junit.Assert.assertTrue(b52 == true);
        org.junit.Assert.assertTrue(i53 == 0);
        org.junit.Assert.assertTrue(i54 == (-1));
        org.junit.Assert.assertNotNull(obj_array61);
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test015");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        try {
            fixedOrderComparator7.setUnknownObjectBehavior((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test016");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array16 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array16);
        java.lang.Object obj20 = null;
        try {
            boolean b21 = fixedOrderComparator7.addAsEqual((java.lang.Object) obj_array16, obj20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array16);
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test017");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        boolean b1 = fixedOrderComparator0.isLocked();
        try {
            boolean b4 = fixedOrderComparator0.addAsEqual((java.lang.Object) 'a', (java.lang.Object) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b1 == false);
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test018");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array9 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array9);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        int i15 = fixedOrderComparator12.getUnknownObjectBehavior();
        boolean b17 = fixedOrderComparator11.addAsEqual((java.lang.Object) i15, (java.lang.Object) (short) 1);
        try {
            int i19 = fixedOrderComparator0.compare((java.lang.Object) i15, (java.lang.Object) 10.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(i15 == 0);
        org.junit.Assert.assertTrue(b17 == true);
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test019");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator();
        int i9 = fixedOrderComparator8.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        boolean b11 = fixedOrderComparator10.isLocked();
        boolean b13 = fixedOrderComparator10.add((java.lang.Object) 10.0d);
        try {
            boolean b14 = fixedOrderComparator7.addAsEqual((java.lang.Object) fixedOrderComparator8, (java.lang.Object) b13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i9 == 2);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertTrue(b13 == true);
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test020");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        boolean b38 = fixedOrderComparator36.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator39.setUnknownObjectBehavior(0);
        int i42 = fixedOrderComparator39.getUnknownObjectBehavior();
        fixedOrderComparator39.setUnknownObjectBehavior((int) (byte) 0);
        boolean b45 = fixedOrderComparator36.add((java.lang.Object) fixedOrderComparator39);
        java.lang.Object obj47 = null;
        int i48 = fixedOrderComparator39.compare((java.lang.Object) 1.0d, obj47);
        java.lang.Object[] obj_array55 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array55);
        fixedOrderComparator57.setUnknownObjectBehavior((int) (short) 0);
        int i60 = fixedOrderComparator57.getUnknownObjectBehavior();
        try {
            boolean b61 = fixedOrderComparator7.addAsEqual((java.lang.Object) fixedOrderComparator39, (java.lang.Object) i60);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(i42 == 0);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(i48 == 0);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(i60 == 0);
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test021");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        int i21 = fixedOrderComparator8.compare((java.lang.Object) fixedOrderComparator19, (java.lang.Object) (-1.0d));
        try {
            boolean b24 = fixedOrderComparator8.addAsEqual((java.lang.Object) 0L, (java.lang.Object) 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(i21 == 0);
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test022");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator9.setUnknownObjectBehavior(0);
        int i12 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) i12, (java.lang.Object) (short) 1);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        try {
            boolean b27 = fixedOrderComparator8.addAsEqual((java.lang.Object) 10, (java.lang.Object) fixedOrderComparator26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertNotNull(obj_array22);
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test023");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator9.setUnknownObjectBehavior(0);
        int i12 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) i12, (java.lang.Object) (short) 1);
        int i15 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b24 = fixedOrderComparator23.isLocked();
        boolean b25 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator23);
        java.lang.Object obj26 = null;
        try {
            int i28 = fixedOrderComparator8.compare(obj26, (java.lang.Object) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i15 == 2);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(b25 == true);
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test024");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        java.lang.Object[] obj_array28 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array28);
        try {
            boolean b34 = fixedOrderComparator12.addAsEqual((java.lang.Object) (short) 1, (java.lang.Object) fixedOrderComparator33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertNotNull(obj_array28);
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test025");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        try {
            boolean b11 = fixedOrderComparator8.addAsEqual((java.lang.Object) false, (java.lang.Object) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test026");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator();
        int i10 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b11 = fixedOrderComparator9.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator();
        int i13 = fixedOrderComparator12.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator12.isLocked();
        boolean b15 = fixedOrderComparator9.add((java.lang.Object) b14);
        try {
            int i17 = fixedOrderComparator8.compare((java.lang.Object) b15, (java.lang.Object) true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i10 == 2);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertTrue(i13 == 2);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertTrue(b15 == true);
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test027");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        java.lang.Object[] obj_array25 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array25);
        int i27 = fixedOrderComparator26.getUnknownObjectBehavior();
        try {
            boolean b28 = fixedOrderComparator8.addAsEqual((java.lang.Object) fixedOrderComparator18, (java.lang.Object) fixedOrderComparator26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertNotNull(obj_array25);
        org.junit.Assert.assertTrue(i27 == 2);
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test028");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b13 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b14 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        fixedOrderComparator23.setUnknownObjectBehavior(0);
        boolean b27 = fixedOrderComparator23.add((java.lang.Object) 1.0f);
        boolean b29 = fixedOrderComparator23.add((java.lang.Object) 1.0f);
        boolean b30 = fixedOrderComparator23.isLocked();
        try {
            boolean b31 = fixedOrderComparator7.addAsEqual((java.lang.Object) true, (java.lang.Object) b30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertTrue(b30 == false);
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test029");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i8 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array15 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array15);
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array15);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array15);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array15);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array15);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator21.setUnknownObjectBehavior(0);
        try {
            boolean b24 = fixedOrderComparator7.addAsEqual((java.lang.Object) obj_array15, (java.lang.Object) fixedOrderComparator21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i8 == 2);
        org.junit.Assert.assertNotNull(obj_array15);
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test030");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array19 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array19);
        try {
            int i24 = fixedOrderComparator7.compare((java.lang.Object) 0, (java.lang.Object) obj_array19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array19);
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test031");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i8 = fixedOrderComparator7.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        try {
            boolean b16 = fixedOrderComparator7.addAsEqual((java.lang.Object) 1L, (java.lang.Object) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i8 == 2);
        org.junit.Assert.assertTrue(i13 == 0);
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test032");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i11 = fixedOrderComparator10.getUnknownObjectBehavior();
        java.lang.Object obj13 = null;
        try {
            boolean b14 = fixedOrderComparator10.addAsEqual((java.lang.Object) "", obj13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 2);
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test033");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        try {
            fixedOrderComparator9.setUnknownObjectBehavior((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test034");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array10 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        java.lang.Object[] obj_array18 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        fixedOrderComparator19.setUnknownObjectBehavior(0);
        boolean b23 = fixedOrderComparator19.add((java.lang.Object) 1.0f);
        java.lang.Object obj24 = null;
        java.lang.Object[] obj_array31 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        fixedOrderComparator32.setUnknownObjectBehavior(0);
        boolean b36 = fixedOrderComparator32.add((java.lang.Object) 1.0f);
        int i37 = fixedOrderComparator32.getUnknownObjectBehavior();
        int i38 = fixedOrderComparator19.compare(obj24, (java.lang.Object) i37);
        int i39 = fixedOrderComparator19.getUnknownObjectBehavior();
        boolean b40 = fixedOrderComparator19.isLocked();
        java.lang.Object[] obj_array47 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array47);
        fixedOrderComparator49.setUnknownObjectBehavior((int) (short) 0);
        int i52 = fixedOrderComparator49.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator53.setUnknownObjectBehavior(0);
        int i56 = fixedOrderComparator53.getUnknownObjectBehavior();
        int i57 = fixedOrderComparator19.compare((java.lang.Object) i52, (java.lang.Object) fixedOrderComparator53);
        try {
            int i58 = fixedOrderComparator9.compare((java.lang.Object) obj_array10, (java.lang.Object) fixedOrderComparator53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(i37 == 0);
        org.junit.Assert.assertTrue(i38 == (-1));
        org.junit.Assert.assertTrue(i39 == 0);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertNotNull(obj_array47);
        org.junit.Assert.assertTrue(i52 == 0);
        org.junit.Assert.assertTrue(i56 == 0);
        org.junit.Assert.assertTrue(i57 == 1);
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test035");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator13.isLocked();
        boolean b17 = fixedOrderComparator13.isLocked();
        try {
            int i18 = fixedOrderComparator11.compare((java.lang.Object) (short) 1, (java.lang.Object) b17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == false);
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test036");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b8 = fixedOrderComparator7.isLocked();
        try {
            fixedOrderComparator7.setUnknownObjectBehavior((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b8 == false);
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test037");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator9.setUnknownObjectBehavior(0);
        int i12 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) i12, (java.lang.Object) (short) 1);
        int i15 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b24 = fixedOrderComparator23.isLocked();
        boolean b25 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator23);
        java.lang.Object[] obj_array32 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        boolean b44 = fixedOrderComparator33.add((java.lang.Object) 0);
        try {
            int i46 = fixedOrderComparator23.compare((java.lang.Object) 0, (java.lang.Object) 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i15 == 2);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(b44 == false);
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test038");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        java.lang.Object[] obj_array27 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array27);
        boolean b30 = fixedOrderComparator28.add((java.lang.Object) (-1.0f));
        int i31 = fixedOrderComparator28.getUnknownObjectBehavior();
        java.lang.Object[] obj_array38 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array38);
        fixedOrderComparator40.setUnknownObjectBehavior((int) (short) 0);
        int i43 = fixedOrderComparator40.getUnknownObjectBehavior();
        boolean b44 = fixedOrderComparator28.add((java.lang.Object) i43);
        try {
            boolean b45 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator28);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertNotNull(obj_array27);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue(i31 == 2);
        org.junit.Assert.assertNotNull(obj_array38);
        org.junit.Assert.assertTrue(i43 == 0);
        org.junit.Assert.assertTrue(b44 == false);
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test039");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i28 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i29 = fixedOrderComparator7.getUnknownObjectBehavior();
        try {
            boolean b31 = fixedOrderComparator7.add((java.lang.Object) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertTrue(i29 == 0);
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test040");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        fixedOrderComparator11.setUnknownObjectBehavior(0);
        boolean b15 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        boolean b17 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator();
        boolean b19 = fixedOrderComparator18.isLocked();
        boolean b21 = fixedOrderComparator18.add((java.lang.Object) 10.0d);
        int i22 = fixedOrderComparator0.compare((java.lang.Object) b17, (java.lang.Object) fixedOrderComparator18);
        try {
            boolean b24 = fixedOrderComparator0.add((java.lang.Object) 10.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue(i22 == 0);
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test041");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array7 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array7);
        boolean b10 = fixedOrderComparator8.add((java.lang.Object) (-1.0f));
        int i11 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object[] obj_array18 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array18);
        fixedOrderComparator20.setUnknownObjectBehavior((int) (short) 0);
        int i23 = fixedOrderComparator20.getUnknownObjectBehavior();
        boolean b24 = fixedOrderComparator8.add((java.lang.Object) i23);
        boolean b25 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator8);
        java.lang.Object[] obj_array32 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array32);
        try {
            int i38 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator36, (java.lang.Object) 100.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array7);
        org.junit.Assert.assertTrue(b10 == true);
        org.junit.Assert.assertTrue(i11 == 2);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertTrue(i23 == 0);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertNotNull(obj_array32);
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test042");
        java.lang.Object[] obj_array0 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator1 = new collections.comparators.FixedOrderComparator(obj_array0);
        java.lang.Object obj2 = null;
        java.lang.Object[] obj_array9 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array9);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array9);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array9);
        int i14 = fixedOrderComparator13.getUnknownObjectBehavior();
        int i15 = fixedOrderComparator13.getUnknownObjectBehavior();
        try {
            int i16 = fixedOrderComparator1.compare(obj2, (java.lang.Object) fixedOrderComparator13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array0);
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(i14 == 2);
        org.junit.Assert.assertTrue(i15 == 2);
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test043");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        int i12 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b13 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array20 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        fixedOrderComparator21.setUnknownObjectBehavior(0);
        boolean b25 = fixedOrderComparator21.add((java.lang.Object) 1.0f);
        java.lang.Object obj26 = null;
        java.lang.Object[] obj_array33 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        boolean b38 = fixedOrderComparator34.add((java.lang.Object) 1.0f);
        int i39 = fixedOrderComparator34.getUnknownObjectBehavior();
        int i40 = fixedOrderComparator21.compare(obj26, (java.lang.Object) i39);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        fixedOrderComparator41.setUnknownObjectBehavior((int) (byte) 0);
        boolean b48 = fixedOrderComparator41.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array55 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        boolean b58 = fixedOrderComparator56.add((java.lang.Object) (-1.0f));
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator();
        int i60 = fixedOrderComparator59.getUnknownObjectBehavior();
        boolean b61 = fixedOrderComparator59.isLocked();
        fixedOrderComparator59.setUnknownObjectBehavior(0);
        int i64 = fixedOrderComparator41.compare((java.lang.Object) fixedOrderComparator56, (java.lang.Object) 0);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator();
        int i66 = fixedOrderComparator65.getUnknownObjectBehavior();
        boolean b67 = fixedOrderComparator65.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator();
        int i69 = fixedOrderComparator68.getUnknownObjectBehavior();
        boolean b70 = fixedOrderComparator68.isLocked();
        boolean b71 = fixedOrderComparator65.add((java.lang.Object) b70);
        int i73 = fixedOrderComparator41.compare((java.lang.Object) b70, (java.lang.Object) (short) -1);
        try {
            boolean b74 = fixedOrderComparator7.addAsEqual((java.lang.Object) fixedOrderComparator21, (java.lang.Object) fixedOrderComparator41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(i39 == 0);
        org.junit.Assert.assertTrue(i40 == (-1));
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertTrue(i60 == 2);
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertTrue(i64 == 0);
        org.junit.Assert.assertTrue(i66 == 2);
        org.junit.Assert.assertTrue(b67 == false);
        org.junit.Assert.assertTrue(i69 == 2);
        org.junit.Assert.assertTrue(b70 == false);
        org.junit.Assert.assertTrue(b71 == true);
        org.junit.Assert.assertTrue(i73 == 0);
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test044");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        int i10 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        fixedOrderComparator19.setUnknownObjectBehavior((int) (short) 0);
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        boolean b23 = fixedOrderComparator7.add((java.lang.Object) i22);
        java.lang.Object obj24 = null;
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator25.setUnknownObjectBehavior(0);
        boolean b28 = fixedOrderComparator25.isLocked();
        boolean b29 = fixedOrderComparator25.isLocked();
        java.lang.Object[] obj_array36 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        fixedOrderComparator37.setUnknownObjectBehavior(0);
        boolean b41 = fixedOrderComparator37.add((java.lang.Object) 1.0f);
        boolean b43 = fixedOrderComparator37.add((java.lang.Object) 1.0f);
        int i45 = fixedOrderComparator25.compare((java.lang.Object) fixedOrderComparator37, (java.lang.Object) 1.0d);
        try {
            int i46 = fixedOrderComparator7.compare(obj24, (java.lang.Object) 1.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i10 == 2);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertTrue(i45 == 0);
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test045");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b13 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b14 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        try {
            boolean b28 = fixedOrderComparator7.addAsEqual((java.lang.Object) fixedOrderComparator26, (java.lang.Object) 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertNotNull(obj_array21);
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test046");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj18 = null;
        int i19 = fixedOrderComparator10.compare((java.lang.Object) 1.0d, obj18);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        int i32 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b34 = fixedOrderComparator28.addAsEqual((java.lang.Object) i32, (java.lang.Object) (short) 1);
        int i35 = fixedOrderComparator28.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        boolean b44 = fixedOrderComparator43.isLocked();
        boolean b45 = fixedOrderComparator28.add((java.lang.Object) fixedOrderComparator43);
        int i47 = fixedOrderComparator10.compare((java.lang.Object) fixedOrderComparator28, (java.lang.Object) 1L);
        boolean b48 = fixedOrderComparator28.isLocked();
        java.lang.Object obj49 = null;
        java.lang.Object obj50 = null;
        try {
            boolean b51 = fixedOrderComparator28.addAsEqual(obj49, obj50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b48 == false);
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test047");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i28 = fixedOrderComparator7.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        boolean b32 = fixedOrderComparator29.isLocked();
        boolean b33 = fixedOrderComparator29.isLocked();
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        boolean b45 = fixedOrderComparator41.add((java.lang.Object) 1.0f);
        boolean b47 = fixedOrderComparator41.add((java.lang.Object) 1.0f);
        int i49 = fixedOrderComparator29.compare((java.lang.Object) fixedOrderComparator41, (java.lang.Object) 1.0d);
        try {
            boolean b51 = fixedOrderComparator7.addAsEqual((java.lang.Object) fixedOrderComparator29, (java.lang.Object) 1.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(b47 == false);
        org.junit.Assert.assertTrue(i49 == 0);
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test048");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b7 = fixedOrderComparator0.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        boolean b17 = fixedOrderComparator15.add((java.lang.Object) (-1.0f));
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator();
        int i19 = fixedOrderComparator18.getUnknownObjectBehavior();
        boolean b20 = fixedOrderComparator18.isLocked();
        fixedOrderComparator18.setUnknownObjectBehavior(0);
        int i23 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator15, (java.lang.Object) 0);
        java.lang.Object[] obj_array30 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array30);
        int i35 = fixedOrderComparator34.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array42);
        try {
            int i48 = fixedOrderComparator15.compare((java.lang.Object) fixedOrderComparator34, (java.lang.Object) fixedOrderComparator47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(i19 == 2);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertTrue(i23 == 0);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertNotNull(obj_array42);
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test049");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator9.setUnknownObjectBehavior(0);
        int i12 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) i12, (java.lang.Object) (short) 1);
        int i15 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        int i26 = fixedOrderComparator25.getUnknownObjectBehavior();
        java.lang.Object[] obj_array33 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array33);
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        fixedOrderComparator44.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array53 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array53);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array53);
        int i57 = fixedOrderComparator44.compare((java.lang.Object) fixedOrderComparator55, (java.lang.Object) (-1.0d));
        boolean b58 = fixedOrderComparator35.add((java.lang.Object) fixedOrderComparator44);
        try {
            boolean b59 = fixedOrderComparator8.addAsEqual((java.lang.Object) i26, (java.lang.Object) fixedOrderComparator35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i15 == 2);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(i26 == 2);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertNotNull(obj_array53);
        org.junit.Assert.assertTrue(i57 == 0);
        org.junit.Assert.assertTrue(b58 == true);
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test050");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        try {
            fixedOrderComparator7.setUnknownObjectBehavior((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test051");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i10 = fixedOrderComparator9.getUnknownObjectBehavior();
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        fixedOrderComparator18.setUnknownObjectBehavior(0);
        boolean b22 = fixedOrderComparator18.add((java.lang.Object) 1.0f);
        java.lang.Object obj23 = null;
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        fixedOrderComparator31.setUnknownObjectBehavior(0);
        boolean b35 = fixedOrderComparator31.add((java.lang.Object) 1.0f);
        int i36 = fixedOrderComparator31.getUnknownObjectBehavior();
        int i37 = fixedOrderComparator18.compare(obj23, (java.lang.Object) i36);
        boolean b38 = fixedOrderComparator18.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator39.setUnknownObjectBehavior(0);
        int i42 = fixedOrderComparator39.getUnknownObjectBehavior();
        fixedOrderComparator39.setUnknownObjectBehavior((int) (byte) 0);
        boolean b46 = fixedOrderComparator39.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array53 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array53);
        boolean b56 = fixedOrderComparator54.add((java.lang.Object) (-1.0f));
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator();
        int i58 = fixedOrderComparator57.getUnknownObjectBehavior();
        boolean b59 = fixedOrderComparator57.isLocked();
        fixedOrderComparator57.setUnknownObjectBehavior(0);
        int i62 = fixedOrderComparator39.compare((java.lang.Object) fixedOrderComparator54, (java.lang.Object) 0);
        try {
            boolean b63 = fixedOrderComparator9.addAsEqual((java.lang.Object) b38, (java.lang.Object) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i10 == 2);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertTrue(i36 == 0);
        org.junit.Assert.assertTrue(i37 == (-1));
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(i42 == 0);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertNotNull(obj_array53);
        org.junit.Assert.assertTrue(b56 == true);
        org.junit.Assert.assertTrue(i58 == 2);
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertTrue(i62 == 0);
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test052");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        try {
            fixedOrderComparator8.setUnknownObjectBehavior((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test053");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array15 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array15);
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array15);
        fixedOrderComparator17.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array26);
        int i30 = fixedOrderComparator17.compare((java.lang.Object) fixedOrderComparator28, (java.lang.Object) (-1.0d));
        boolean b31 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator17);
        java.lang.Object[] obj_array39 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array39);
        fixedOrderComparator40.setUnknownObjectBehavior(0);
        try {
            int i43 = fixedOrderComparator8.compare((java.lang.Object) false, (java.lang.Object) fixedOrderComparator40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array15);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertNotNull(obj_array39);
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test054");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array18 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array18);
        int i22 = fixedOrderComparator21.getUnknownObjectBehavior();
        boolean b23 = fixedOrderComparator21.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array31 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        boolean b34 = fixedOrderComparator32.add((java.lang.Object) (-1.0f));
        int i35 = fixedOrderComparator32.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        fixedOrderComparator44.setUnknownObjectBehavior((int) (short) 0);
        int i47 = fixedOrderComparator44.getUnknownObjectBehavior();
        boolean b48 = fixedOrderComparator32.add((java.lang.Object) i47);
        boolean b49 = fixedOrderComparator24.add((java.lang.Object) fixedOrderComparator32);
        int i50 = fixedOrderComparator7.compare((java.lang.Object) b23, (java.lang.Object) fixedOrderComparator24);
        try {
            fixedOrderComparator24.setUnknownObjectBehavior((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertTrue(i22 == 2);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(i50 == 0);
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test055");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        java.lang.Object[] obj_array16 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        fixedOrderComparator17.setUnknownObjectBehavior(0);
        boolean b20 = fixedOrderComparator9.add((java.lang.Object) 0);
        fixedOrderComparator9.setUnknownObjectBehavior((int) (short) 0);
        boolean b23 = fixedOrderComparator9.isLocked();
        boolean b24 = fixedOrderComparator9.isLocked();
        try {
            int i26 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator9, (java.lang.Object) 1.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue(b24 == false);
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test056");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        int i10 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array17 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array17);
        java.lang.Object[] obj_array28 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array28);
        try {
            int i35 = fixedOrderComparator7.compare((java.lang.Object) obj_array17, (java.lang.Object) fixedOrderComparator34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i10 == 2);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertNotNull(obj_array28);
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test057");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b7 = fixedOrderComparator0.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        boolean b17 = fixedOrderComparator15.add((java.lang.Object) (-1.0f));
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator();
        int i19 = fixedOrderComparator18.getUnknownObjectBehavior();
        boolean b20 = fixedOrderComparator18.isLocked();
        fixedOrderComparator18.setUnknownObjectBehavior(0);
        int i23 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator15, (java.lang.Object) 0);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator24.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array33 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        boolean b36 = fixedOrderComparator34.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator37.setUnknownObjectBehavior(0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        fixedOrderComparator37.setUnknownObjectBehavior((int) (byte) 0);
        boolean b43 = fixedOrderComparator34.add((java.lang.Object) fixedOrderComparator37);
        java.lang.Object obj45 = null;
        int i46 = fixedOrderComparator37.compare((java.lang.Object) 1.0d, obj45);
        boolean b47 = fixedOrderComparator37.isLocked();
        boolean b48 = fixedOrderComparator24.add((java.lang.Object) fixedOrderComparator37);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array56 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array56);
        boolean b59 = fixedOrderComparator57.add((java.lang.Object) (-1.0f));
        int i60 = fixedOrderComparator57.getUnknownObjectBehavior();
        java.lang.Object[] obj_array67 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array67);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array67);
        fixedOrderComparator69.setUnknownObjectBehavior((int) (short) 0);
        int i72 = fixedOrderComparator69.getUnknownObjectBehavior();
        boolean b73 = fixedOrderComparator57.add((java.lang.Object) i72);
        boolean b74 = fixedOrderComparator49.add((java.lang.Object) fixedOrderComparator57);
        try {
            boolean b75 = fixedOrderComparator15.addAsEqual((java.lang.Object) b48, (java.lang.Object) fixedOrderComparator57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(i19 == 2);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertTrue(i23 == 0);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertNotNull(obj_array56);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertTrue(i60 == 2);
        org.junit.Assert.assertNotNull(obj_array67);
        org.junit.Assert.assertTrue(i72 == 0);
        org.junit.Assert.assertTrue(b73 == false);
        org.junit.Assert.assertTrue(b74 == true);
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test058");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b13 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b14 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        fixedOrderComparator23.setUnknownObjectBehavior(0);
        boolean b27 = fixedOrderComparator23.add((java.lang.Object) 1.0f);
        boolean b29 = fixedOrderComparator23.add((java.lang.Object) 1.0f);
        try {
            boolean b30 = fixedOrderComparator7.addAsEqual((java.lang.Object) (-1.0d), (java.lang.Object) fixedOrderComparator23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertTrue(b29 == false);
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test059");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b7 = fixedOrderComparator0.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        boolean b17 = fixedOrderComparator15.add((java.lang.Object) (-1.0f));
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator();
        int i19 = fixedOrderComparator18.getUnknownObjectBehavior();
        boolean b20 = fixedOrderComparator18.isLocked();
        fixedOrderComparator18.setUnknownObjectBehavior(0);
        int i23 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator15, (java.lang.Object) 0);
        try {
            fixedOrderComparator15.setUnknownObjectBehavior((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(i19 == 2);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertTrue(i23 == 0);
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test060");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        java.lang.Object[] obj_array52 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array52);
        fixedOrderComparator53.setUnknownObjectBehavior(0);
        boolean b57 = fixedOrderComparator53.add((java.lang.Object) 1.0f);
        java.lang.Object obj58 = null;
        java.lang.Object[] obj_array65 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array65);
        fixedOrderComparator66.setUnknownObjectBehavior(0);
        boolean b70 = fixedOrderComparator66.add((java.lang.Object) 1.0f);
        int i71 = fixedOrderComparator66.getUnknownObjectBehavior();
        int i72 = fixedOrderComparator53.compare(obj58, (java.lang.Object) i71);
        int i73 = fixedOrderComparator53.getUnknownObjectBehavior();
        boolean b74 = fixedOrderComparator53.isLocked();
        java.lang.Object[] obj_array81 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array81);
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator(obj_array81);
        fixedOrderComparator83.setUnknownObjectBehavior((int) (short) 0);
        int i86 = fixedOrderComparator83.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator87 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator87.setUnknownObjectBehavior(0);
        int i90 = fixedOrderComparator87.getUnknownObjectBehavior();
        int i91 = fixedOrderComparator53.compare((java.lang.Object) i86, (java.lang.Object) fixedOrderComparator87);
        int i93 = fixedOrderComparator7.compare((java.lang.Object) i86, (java.lang.Object) 2);
        try {
            boolean b95 = fixedOrderComparator7.add((java.lang.Object) 2);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertNotNull(obj_array52);
        org.junit.Assert.assertTrue(b57 == true);
        org.junit.Assert.assertNotNull(obj_array65);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertTrue(i71 == 0);
        org.junit.Assert.assertTrue(i72 == (-1));
        org.junit.Assert.assertTrue(i73 == 0);
        org.junit.Assert.assertTrue(b74 == true);
        org.junit.Assert.assertNotNull(obj_array81);
        org.junit.Assert.assertTrue(i86 == 0);
        org.junit.Assert.assertTrue(i90 == 0);
        org.junit.Assert.assertTrue(i91 == 1);
        org.junit.Assert.assertTrue(i93 == 1);
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test061");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        try {
            fixedOrderComparator12.setUnknownObjectBehavior((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test062");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i8 = fixedOrderComparator7.getUnknownObjectBehavior();
        try {
            fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i8 == 2);
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test063");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator8.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        java.lang.Object[] obj_array20 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        boolean b23 = fixedOrderComparator21.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator24.setUnknownObjectBehavior(0);
        int i27 = fixedOrderComparator24.getUnknownObjectBehavior();
        fixedOrderComparator24.setUnknownObjectBehavior((int) (byte) 0);
        boolean b30 = fixedOrderComparator21.add((java.lang.Object) fixedOrderComparator24);
        try {
            int i31 = fixedOrderComparator8.compare((java.lang.Object) fixedOrderComparator10, (java.lang.Object) b30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b30 == true);
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test064");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b12 = fixedOrderComparator10.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        boolean b19 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object obj21 = null;
        int i22 = fixedOrderComparator13.compare((java.lang.Object) 1.0d, obj21);
        boolean b23 = fixedOrderComparator13.isLocked();
        boolean b24 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator13);
        try {
            fixedOrderComparator0.setUnknownObjectBehavior((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == true);
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test065");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        int i11 = fixedOrderComparator10.getUnknownObjectBehavior();
        boolean b12 = fixedOrderComparator10.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        int i14 = fixedOrderComparator13.getUnknownObjectBehavior();
        boolean b15 = fixedOrderComparator13.isLocked();
        boolean b16 = fixedOrderComparator10.add((java.lang.Object) b15);
        boolean b17 = fixedOrderComparator10.isLocked();
        java.lang.Object[] obj_array24 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array24);
        fixedOrderComparator25.setUnknownObjectBehavior(0);
        boolean b29 = fixedOrderComparator25.add((java.lang.Object) 1.0f);
        java.lang.Object obj30 = null;
        java.lang.Object[] obj_array37 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array37);
        fixedOrderComparator38.setUnknownObjectBehavior(0);
        boolean b42 = fixedOrderComparator38.add((java.lang.Object) 1.0f);
        int i43 = fixedOrderComparator38.getUnknownObjectBehavior();
        int i44 = fixedOrderComparator25.compare(obj30, (java.lang.Object) i43);
        int i45 = fixedOrderComparator25.getUnknownObjectBehavior();
        boolean b46 = fixedOrderComparator25.isLocked();
        java.lang.Object[] obj_array53 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array53);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array53);
        fixedOrderComparator55.setUnknownObjectBehavior((int) (short) 0);
        int i58 = fixedOrderComparator55.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator59.setUnknownObjectBehavior(0);
        int i62 = fixedOrderComparator59.getUnknownObjectBehavior();
        int i63 = fixedOrderComparator25.compare((java.lang.Object) i58, (java.lang.Object) fixedOrderComparator59);
        boolean b64 = fixedOrderComparator25.isLocked();
        try {
            boolean b65 = fixedOrderComparator7.addAsEqual((java.lang.Object) b17, (java.lang.Object) b64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 2);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(i14 == 2);
        org.junit.Assert.assertTrue(b15 == false);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertNotNull(obj_array24);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertNotNull(obj_array37);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertTrue(i43 == 0);
        org.junit.Assert.assertTrue(i44 == (-1));
        org.junit.Assert.assertTrue(i45 == 0);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertNotNull(obj_array53);
        org.junit.Assert.assertTrue(i58 == 0);
        org.junit.Assert.assertTrue(i62 == 0);
        org.junit.Assert.assertTrue(i63 == 1);
        org.junit.Assert.assertTrue(b64 == true);
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test066");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        try {
            boolean b13 = fixedOrderComparator10.addAsEqual((java.lang.Object) (short) -1, (java.lang.Object) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test067");
        java.lang.Object[] obj_array0 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator1 = new collections.comparators.FixedOrderComparator(obj_array0);
        java.lang.Object[] obj_array2 = new java.lang.Object[] { fixedOrderComparator1 };
        collections.comparators.FixedOrderComparator fixedOrderComparator3 = new collections.comparators.FixedOrderComparator(obj_array2);
        try {
            fixedOrderComparator3.setUnknownObjectBehavior((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array0);
        org.junit.Assert.assertNotNull(obj_array2);
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test068");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj18 = null;
        int i19 = fixedOrderComparator10.compare((java.lang.Object) 1.0d, obj18);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        int i32 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b34 = fixedOrderComparator28.addAsEqual((java.lang.Object) i32, (java.lang.Object) (short) 1);
        int i35 = fixedOrderComparator28.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        boolean b44 = fixedOrderComparator43.isLocked();
        boolean b45 = fixedOrderComparator28.add((java.lang.Object) fixedOrderComparator43);
        int i47 = fixedOrderComparator10.compare((java.lang.Object) fixedOrderComparator28, (java.lang.Object) 1L);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array54);
        try {
            boolean b61 = fixedOrderComparator10.add((java.lang.Object) obj_array54);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertNotNull(obj_array54);
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test069");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        fixedOrderComparator11.setUnknownObjectBehavior(0);
        boolean b15 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        boolean b17 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator();
        boolean b19 = fixedOrderComparator18.isLocked();
        boolean b21 = fixedOrderComparator18.add((java.lang.Object) 10.0d);
        int i22 = fixedOrderComparator0.compare((java.lang.Object) b17, (java.lang.Object) fixedOrderComparator18);
        try {
            boolean b25 = fixedOrderComparator18.addAsEqual((java.lang.Object) 100.0d, (java.lang.Object) (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue(i22 == 0);
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test070");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b12 = fixedOrderComparator10.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        boolean b19 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object obj21 = null;
        int i22 = fixedOrderComparator13.compare((java.lang.Object) 1.0d, obj21);
        boolean b23 = fixedOrderComparator13.isLocked();
        boolean b24 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator13);
        boolean b25 = fixedOrderComparator13.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator();
        int i27 = fixedOrderComparator26.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator26.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator();
        int i30 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b31 = fixedOrderComparator29.isLocked();
        boolean b32 = fixedOrderComparator26.add((java.lang.Object) b31);
        try {
            boolean b33 = fixedOrderComparator13.add((java.lang.Object) b31);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(i27 == 2);
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertTrue(i30 == 2);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertTrue(b32 == true);
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test071");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object obj16 = new java.lang.Object();
        try {
            boolean b18 = fixedOrderComparator0.addAsEqual(obj16, (java.lang.Object) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test072");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b12 = fixedOrderComparator10.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        boolean b19 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object obj21 = null;
        int i22 = fixedOrderComparator13.compare((java.lang.Object) 1.0d, obj21);
        boolean b23 = fixedOrderComparator13.isLocked();
        boolean b24 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator13);
        boolean b25 = fixedOrderComparator13.isLocked();
        try {
            fixedOrderComparator13.setUnknownObjectBehavior(10);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(b25 == true);
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test073");
        java.lang.Object[] obj_array0 = null;
        try {
            collections.comparators.FixedOrderComparator fixedOrderComparator1 = new collections.comparators.FixedOrderComparator(obj_array0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test074");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        try {
            fixedOrderComparator7.setUnknownObjectBehavior((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test075");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array15 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array15);
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array15);
        fixedOrderComparator17.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array26);
        int i30 = fixedOrderComparator17.compare((java.lang.Object) fixedOrderComparator28, (java.lang.Object) (-1.0d));
        boolean b31 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator17);
        try {
            fixedOrderComparator17.setUnknownObjectBehavior(2);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array15);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertTrue(b31 == true);
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test076");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b12 = fixedOrderComparator10.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        boolean b19 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object obj21 = null;
        int i22 = fixedOrderComparator13.compare((java.lang.Object) 1.0d, obj21);
        boolean b23 = fixedOrderComparator13.isLocked();
        boolean b24 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator13);
        boolean b25 = fixedOrderComparator13.isLocked();
        int i26 = fixedOrderComparator13.getUnknownObjectBehavior();
        java.lang.Object[] obj_array33 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array33);
        java.lang.Object[] obj_array47 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array47);
        try {
            boolean b52 = fixedOrderComparator13.addAsEqual((java.lang.Object) fixedOrderComparator40, (java.lang.Object) fixedOrderComparator51);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(i26 == 0);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertNotNull(obj_array47);
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test077");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        int i21 = fixedOrderComparator8.compare((java.lang.Object) fixedOrderComparator19, (java.lang.Object) (-1.0d));
        boolean b22 = fixedOrderComparator19.isLocked();
        try {
            fixedOrderComparator19.setUnknownObjectBehavior((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertTrue(b22 == false);
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test078");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj18 = null;
        int i19 = fixedOrderComparator10.compare((java.lang.Object) 1.0d, obj18);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        int i32 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b34 = fixedOrderComparator28.addAsEqual((java.lang.Object) i32, (java.lang.Object) (short) 1);
        int i35 = fixedOrderComparator28.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        boolean b44 = fixedOrderComparator43.isLocked();
        boolean b45 = fixedOrderComparator28.add((java.lang.Object) fixedOrderComparator43);
        int i47 = fixedOrderComparator10.compare((java.lang.Object) fixedOrderComparator28, (java.lang.Object) 1L);
        boolean b48 = fixedOrderComparator10.isLocked();
        java.lang.Object[] obj_array55 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array55);
        try {
            boolean b60 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator59);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertNotNull(obj_array55);
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test079");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i11 = fixedOrderComparator10.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        boolean b14 = fixedOrderComparator13.isLocked();
        boolean b16 = fixedOrderComparator13.add((java.lang.Object) 10.0d);
        boolean b17 = fixedOrderComparator13.isLocked();
        try {
            int i18 = fixedOrderComparator10.compare((java.lang.Object) 'a', (java.lang.Object) b17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 2);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b17 == false);
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test080");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator9.setUnknownObjectBehavior(0);
        int i12 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) i12, (java.lang.Object) (short) 1);
        int i15 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b24 = fixedOrderComparator23.isLocked();
        boolean b25 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator23);
        try {
            int i28 = fixedOrderComparator8.compare((java.lang.Object) true, (java.lang.Object) 2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i15 == 2);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(b25 == true);
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test081");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        boolean b14 = fixedOrderComparator10.add((java.lang.Object) 1.0f);
        java.lang.Object obj15 = null;
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        fixedOrderComparator23.setUnknownObjectBehavior(0);
        boolean b27 = fixedOrderComparator23.add((java.lang.Object) 1.0f);
        int i28 = fixedOrderComparator23.getUnknownObjectBehavior();
        int i29 = fixedOrderComparator10.compare(obj15, (java.lang.Object) i28);
        int i30 = fixedOrderComparator10.getUnknownObjectBehavior();
        boolean b31 = fixedOrderComparator10.isLocked();
        java.lang.Object[] obj_array38 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array38);
        fixedOrderComparator40.setUnknownObjectBehavior((int) (short) 0);
        int i43 = fixedOrderComparator40.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator44.setUnknownObjectBehavior(0);
        int i47 = fixedOrderComparator44.getUnknownObjectBehavior();
        int i48 = fixedOrderComparator10.compare((java.lang.Object) i43, (java.lang.Object) fixedOrderComparator44);
        java.lang.Object[] obj_array55 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        fixedOrderComparator56.setUnknownObjectBehavior(0);
        boolean b60 = fixedOrderComparator56.add((java.lang.Object) 1.0f);
        java.lang.Object obj61 = null;
        java.lang.Object[] obj_array68 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array68);
        fixedOrderComparator69.setUnknownObjectBehavior(0);
        boolean b73 = fixedOrderComparator69.add((java.lang.Object) 1.0f);
        int i74 = fixedOrderComparator69.getUnknownObjectBehavior();
        int i75 = fixedOrderComparator56.compare(obj61, (java.lang.Object) i74);
        int i76 = fixedOrderComparator56.getUnknownObjectBehavior();
        boolean b77 = fixedOrderComparator56.isLocked();
        java.lang.Object[] obj_array84 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array84);
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array84);
        fixedOrderComparator86.setUnknownObjectBehavior((int) (short) 0);
        int i89 = fixedOrderComparator86.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator90 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator90.setUnknownObjectBehavior(0);
        int i93 = fixedOrderComparator90.getUnknownObjectBehavior();
        int i94 = fixedOrderComparator56.compare((java.lang.Object) i89, (java.lang.Object) fixedOrderComparator90);
        int i96 = fixedOrderComparator10.compare((java.lang.Object) i89, (java.lang.Object) 2);
        boolean b97 = fixedOrderComparator0.add((java.lang.Object) 2);
        fixedOrderComparator0.setUnknownObjectBehavior(2);
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertTrue(i29 == (-1));
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertNotNull(obj_array38);
        org.junit.Assert.assertTrue(i43 == 0);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(i48 == 1);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertNotNull(obj_array68);
        org.junit.Assert.assertTrue(b73 == true);
        org.junit.Assert.assertTrue(i74 == 0);
        org.junit.Assert.assertTrue(i75 == (-1));
        org.junit.Assert.assertTrue(i76 == 0);
        org.junit.Assert.assertTrue(b77 == true);
        org.junit.Assert.assertNotNull(obj_array84);
        org.junit.Assert.assertTrue(i89 == 0);
        org.junit.Assert.assertTrue(i93 == 0);
        org.junit.Assert.assertTrue(i94 == 1);
        org.junit.Assert.assertTrue(i96 == 1);
        org.junit.Assert.assertTrue(b97 == true);
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test082");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        boolean b1 = fixedOrderComparator0.isLocked();
        boolean b3 = fixedOrderComparator0.add((java.lang.Object) 10.0d);
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array10);
        java.lang.Object[] obj_array20 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array20);
        fixedOrderComparator22.setUnknownObjectBehavior((int) (short) 0);
        try {
            boolean b25 = fixedOrderComparator0.addAsEqual((java.lang.Object) obj_array10, (java.lang.Object) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b1 == false);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertNotNull(obj_array20);
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test083");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b19 = fixedOrderComparator15.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator15.getUnknownObjectBehavior();
        boolean b21 = fixedOrderComparator15.isLocked();
        java.lang.Object[] obj_array22 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        java.lang.Object[] obj_array24 = new java.lang.Object[] { fixedOrderComparator23 };
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array24);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array24);
        java.lang.Object[] obj_array33 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array33);
        int i36 = fixedOrderComparator15.compare((java.lang.Object) fixedOrderComparator26, (java.lang.Object) obj_array33);
        try {
            boolean b38 = fixedOrderComparator7.addAsEqual((java.lang.Object) obj_array33, (java.lang.Object) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertNotNull(obj_array24);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertTrue(i36 == 0);
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test084");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        int i6 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i7 = fixedOrderComparator0.getUnknownObjectBehavior();
        try {
            fixedOrderComparator0.setUnknownObjectBehavior((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(i6 == 0);
        org.junit.Assert.assertTrue(i7 == 0);
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test085");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i11 = fixedOrderComparator10.getUnknownObjectBehavior();
        int i12 = fixedOrderComparator10.getUnknownObjectBehavior();
        boolean b13 = fixedOrderComparator10.isLocked();
        int i14 = fixedOrderComparator10.getUnknownObjectBehavior();
        try {
            fixedOrderComparator10.setUnknownObjectBehavior((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 2);
        org.junit.Assert.assertTrue(i12 == 2);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(i14 == 2);
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test086");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        java.lang.Object obj46 = null;
        try {
            boolean b47 = fixedOrderComparator7.add(obj46);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test087");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b7 = fixedOrderComparator0.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        boolean b17 = fixedOrderComparator15.add((java.lang.Object) (-1.0f));
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator();
        int i19 = fixedOrderComparator18.getUnknownObjectBehavior();
        boolean b20 = fixedOrderComparator18.isLocked();
        fixedOrderComparator18.setUnknownObjectBehavior(0);
        int i23 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator15, (java.lang.Object) 0);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator24.setUnknownObjectBehavior(0);
        boolean b27 = fixedOrderComparator24.isLocked();
        java.lang.Object[] obj_array34 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array34);
        fixedOrderComparator35.setUnknownObjectBehavior(0);
        boolean b39 = fixedOrderComparator35.add((java.lang.Object) 1.0f);
        boolean b41 = fixedOrderComparator35.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator();
        boolean b43 = fixedOrderComparator42.isLocked();
        boolean b45 = fixedOrderComparator42.add((java.lang.Object) 10.0d);
        int i46 = fixedOrderComparator24.compare((java.lang.Object) b41, (java.lang.Object) fixedOrderComparator42);
        boolean b47 = fixedOrderComparator24.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator48.setUnknownObjectBehavior(0);
        int i51 = fixedOrderComparator48.getUnknownObjectBehavior();
        fixedOrderComparator48.setUnknownObjectBehavior((int) (byte) 0);
        try {
            boolean b54 = fixedOrderComparator0.addAsEqual((java.lang.Object) fixedOrderComparator24, (java.lang.Object) fixedOrderComparator48);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(i19 == 2);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertTrue(i23 == 0);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertNotNull(obj_array34);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertTrue(i51 == 0);
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test088");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator9.setUnknownObjectBehavior(0);
        int i12 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) i12, (java.lang.Object) (short) 1);
        int i15 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b24 = fixedOrderComparator23.isLocked();
        boolean b25 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator23);
        java.lang.Object[] obj_array32 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array32);
        int i36 = fixedOrderComparator35.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator();
        int i38 = fixedOrderComparator37.getUnknownObjectBehavior();
        java.lang.Object[] obj_array45 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array45);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array45);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array45);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array45);
        boolean b50 = fixedOrderComparator37.add((java.lang.Object) fixedOrderComparator49);
        try {
            boolean b51 = fixedOrderComparator23.addAsEqual((java.lang.Object) i36, (java.lang.Object) b50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i15 == 2);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertTrue(i36 == 2);
        org.junit.Assert.assertTrue(i38 == 2);
        org.junit.Assert.assertNotNull(obj_array45);
        org.junit.Assert.assertTrue(b50 == true);
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test089");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array15 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array15);
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array15);
        fixedOrderComparator17.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array26);
        int i30 = fixedOrderComparator17.compare((java.lang.Object) fixedOrderComparator28, (java.lang.Object) (-1.0d));
        boolean b31 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator17);
        try {
            fixedOrderComparator8.setUnknownObjectBehavior((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array15);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertTrue(b31 == true);
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test090");
        java.lang.Object[] obj_array0 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator1 = new collections.comparators.FixedOrderComparator(obj_array0);
        java.lang.Object[] obj_array2 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator3 = new collections.comparators.FixedOrderComparator(obj_array2);
        java.lang.Object[] obj_array4 = new java.lang.Object[] { fixedOrderComparator3 };
        collections.comparators.FixedOrderComparator fixedOrderComparator5 = new collections.comparators.FixedOrderComparator(obj_array4);
        collections.comparators.FixedOrderComparator fixedOrderComparator6 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator6.setUnknownObjectBehavior(0);
        boolean b9 = fixedOrderComparator6.isLocked();
        boolean b10 = fixedOrderComparator6.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b24 = fixedOrderComparator22.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator25.setUnknownObjectBehavior(0);
        int i28 = fixedOrderComparator25.getUnknownObjectBehavior();
        fixedOrderComparator25.setUnknownObjectBehavior((int) (byte) 0);
        boolean b31 = fixedOrderComparator22.add((java.lang.Object) fixedOrderComparator25);
        java.lang.Object obj33 = null;
        int i34 = fixedOrderComparator25.compare((java.lang.Object) 1.0d, obj33);
        boolean b35 = fixedOrderComparator25.isLocked();
        boolean b36 = fixedOrderComparator12.add((java.lang.Object) fixedOrderComparator25);
        java.lang.Object[] obj_array43 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array43);
        fixedOrderComparator45.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array54);
        int i58 = fixedOrderComparator45.compare((java.lang.Object) fixedOrderComparator56, (java.lang.Object) (-1.0d));
        boolean b59 = fixedOrderComparator56.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator60.setUnknownObjectBehavior(0);
        boolean b63 = fixedOrderComparator60.isLocked();
        java.lang.Object[] obj_array70 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array70);
        fixedOrderComparator71.setUnknownObjectBehavior(0);
        boolean b75 = fixedOrderComparator71.add((java.lang.Object) 1.0f);
        boolean b77 = fixedOrderComparator71.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator();
        boolean b79 = fixedOrderComparator78.isLocked();
        boolean b81 = fixedOrderComparator78.add((java.lang.Object) 10.0d);
        int i82 = fixedOrderComparator60.compare((java.lang.Object) b77, (java.lang.Object) fixedOrderComparator78);
        boolean b83 = fixedOrderComparator60.isLocked();
        int i84 = fixedOrderComparator12.compare((java.lang.Object) b59, (java.lang.Object) fixedOrderComparator60);
        int i85 = fixedOrderComparator6.compare((java.lang.Object) 100.0f, (java.lang.Object) fixedOrderComparator12);
        try {
            int i86 = fixedOrderComparator1.compare((java.lang.Object) obj_array4, (java.lang.Object) fixedOrderComparator6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array0);
        org.junit.Assert.assertNotNull(obj_array2);
        org.junit.Assert.assertNotNull(obj_array4);
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertTrue(b10 == false);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(i34 == 0);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertNotNull(obj_array43);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertTrue(i58 == 0);
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertNotNull(obj_array70);
        org.junit.Assert.assertTrue(b75 == true);
        org.junit.Assert.assertTrue(b77 == false);
        org.junit.Assert.assertTrue(b79 == false);
        org.junit.Assert.assertTrue(b81 == true);
        org.junit.Assert.assertTrue(i82 == 0);
        org.junit.Assert.assertTrue(b83 == true);
        org.junit.Assert.assertTrue(i84 == 0);
        org.junit.Assert.assertTrue(i85 == 0);
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test091");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        int i12 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i13 = fixedOrderComparator7.getUnknownObjectBehavior();
        try {
            fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(i13 == 0);
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test092");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        java.lang.Object[] obj_array46 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array54);
        int i58 = fixedOrderComparator57.getUnknownObjectBehavior();
        boolean b59 = fixedOrderComparator57.isLocked();
        int i60 = fixedOrderComparator41.compare((java.lang.Object) fixedOrderComparator47, (java.lang.Object) fixedOrderComparator57);
        java.lang.Object[] obj_array67 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array67);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array67);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator70.setUnknownObjectBehavior(0);
        int i73 = fixedOrderComparator70.getUnknownObjectBehavior();
        boolean b75 = fixedOrderComparator69.addAsEqual((java.lang.Object) i73, (java.lang.Object) (short) 1);
        int i76 = fixedOrderComparator69.getUnknownObjectBehavior();
        java.lang.Object[] obj_array83 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator84 = new collections.comparators.FixedOrderComparator(obj_array83);
        boolean b85 = fixedOrderComparator84.isLocked();
        boolean b86 = fixedOrderComparator69.add((java.lang.Object) fixedOrderComparator84);
        int i87 = fixedOrderComparator69.getUnknownObjectBehavior();
        boolean b88 = fixedOrderComparator69.isLocked();
        boolean b89 = fixedOrderComparator47.add((java.lang.Object) b88);
        int i90 = fixedOrderComparator47.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator91 = new collections.comparators.FixedOrderComparator();
        boolean b92 = fixedOrderComparator91.isLocked();
        boolean b94 = fixedOrderComparator91.add((java.lang.Object) 10.0d);
        java.lang.Object obj95 = null;
        boolean b96 = fixedOrderComparator91.add(obj95);
        boolean b97 = fixedOrderComparator47.add((java.lang.Object) b96);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertTrue(i58 == 2);
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertTrue(i60 == 0);
        org.junit.Assert.assertNotNull(obj_array67);
        org.junit.Assert.assertTrue(i73 == 0);
        org.junit.Assert.assertTrue(b75 == true);
        org.junit.Assert.assertTrue(i76 == 2);
        org.junit.Assert.assertNotNull(obj_array83);
        org.junit.Assert.assertTrue(b85 == false);
        org.junit.Assert.assertTrue(b86 == true);
        org.junit.Assert.assertTrue(i87 == 2);
        org.junit.Assert.assertTrue(b88 == false);
        org.junit.Assert.assertTrue(b89 == true);
        org.junit.Assert.assertTrue(i90 == 2);
        org.junit.Assert.assertTrue(b92 == false);
        org.junit.Assert.assertTrue(b94 == true);
        org.junit.Assert.assertTrue(b96 == true);
        org.junit.Assert.assertTrue(b97 == true);
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test093");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b12 = fixedOrderComparator10.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        boolean b19 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object obj21 = null;
        int i22 = fixedOrderComparator13.compare((java.lang.Object) 1.0d, obj21);
        boolean b23 = fixedOrderComparator13.isLocked();
        boolean b24 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator13);
        boolean b25 = fixedOrderComparator13.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator();
        int i27 = fixedOrderComparator26.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator26.isLocked();
        try {
            boolean b29 = fixedOrderComparator13.add((java.lang.Object) b28);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(i27 == 2);
        org.junit.Assert.assertTrue(b28 == false);
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test094");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        try {
            boolean b3 = fixedOrderComparator0.addAsEqual((java.lang.Object) 1.0d, (java.lang.Object) 2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test095");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        boolean b21 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array28 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        boolean b31 = fixedOrderComparator29.add((java.lang.Object) (-1.0f));
        fixedOrderComparator29.setUnknownObjectBehavior((int) (short) 0);
        boolean b34 = fixedOrderComparator29.isLocked();
        try {
            boolean b35 = fixedOrderComparator0.add((java.lang.Object) b34);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(b34 == false);
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test096");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b11 = fixedOrderComparator9.add((java.lang.Object) 1.0d);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == false);
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test097");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        java.lang.Object[] obj_array46 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array54);
        int i58 = fixedOrderComparator57.getUnknownObjectBehavior();
        boolean b59 = fixedOrderComparator57.isLocked();
        int i60 = fixedOrderComparator41.compare((java.lang.Object) fixedOrderComparator47, (java.lang.Object) fixedOrderComparator57);
        java.lang.Object[] obj_array68 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array68);
        fixedOrderComparator70.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array79 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array79);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array79);
        int i83 = fixedOrderComparator70.compare((java.lang.Object) fixedOrderComparator81, (java.lang.Object) (-1.0d));
        try {
            int i84 = fixedOrderComparator47.compare((java.lang.Object) (short) 0, (java.lang.Object) (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertTrue(i58 == 2);
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertTrue(i60 == 0);
        org.junit.Assert.assertNotNull(obj_array68);
        org.junit.Assert.assertNotNull(obj_array79);
        org.junit.Assert.assertTrue(i83 == 0);
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test098");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        try {
            fixedOrderComparator12.setUnknownObjectBehavior(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test099");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        int i21 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array28 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array28);
        try {
            boolean b31 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator30);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertNotNull(obj_array28);
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test100");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        int i11 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object obj13 = null;
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) 10.0f, obj13);
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        int i18 = fixedOrderComparator15.getUnknownObjectBehavior();
        fixedOrderComparator15.setUnknownObjectBehavior((int) (byte) 0);
        boolean b21 = fixedOrderComparator15.isLocked();
        int i22 = fixedOrderComparator15.getUnknownObjectBehavior();
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array29);
        int i33 = fixedOrderComparator32.getUnknownObjectBehavior();
        int i34 = fixedOrderComparator8.compare((java.lang.Object) fixedOrderComparator15, (java.lang.Object) i33);
        java.lang.Object[] obj_array41 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array41);
        java.lang.Object[] obj_array49 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array49);
        fixedOrderComparator50.setUnknownObjectBehavior(0);
        boolean b53 = fixedOrderComparator42.add((java.lang.Object) 0);
        try {
            boolean b54 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator42);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i18 == 0);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i33 == 2);
        org.junit.Assert.assertTrue(i34 == 0);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertNotNull(obj_array49);
        org.junit.Assert.assertTrue(b53 == false);
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test101");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array19 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator21.setUnknownObjectBehavior((int) (short) 0);
        int i24 = fixedOrderComparator7.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator21);
        try {
            fixedOrderComparator7.setUnknownObjectBehavior((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(i24 == 0);
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test102");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        try {
            fixedOrderComparator0.setUnknownObjectBehavior((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test103");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array18 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array18);
        int i22 = fixedOrderComparator21.getUnknownObjectBehavior();
        boolean b23 = fixedOrderComparator21.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array31 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        boolean b34 = fixedOrderComparator32.add((java.lang.Object) (-1.0f));
        int i35 = fixedOrderComparator32.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        fixedOrderComparator44.setUnknownObjectBehavior((int) (short) 0);
        int i47 = fixedOrderComparator44.getUnknownObjectBehavior();
        boolean b48 = fixedOrderComparator32.add((java.lang.Object) i47);
        boolean b49 = fixedOrderComparator24.add((java.lang.Object) fixedOrderComparator32);
        int i50 = fixedOrderComparator7.compare((java.lang.Object) b23, (java.lang.Object) fixedOrderComparator24);
        int i51 = fixedOrderComparator24.getUnknownObjectBehavior();
        java.lang.Object[] obj_array58 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array58);
        fixedOrderComparator60.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array69 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array69);
        int i73 = fixedOrderComparator60.compare((java.lang.Object) fixedOrderComparator71, (java.lang.Object) (-1.0d));
        java.lang.Object obj74 = null;
        try {
            int i75 = fixedOrderComparator24.compare((java.lang.Object) i73, obj74);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertTrue(i22 == 2);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(i50 == 0);
        org.junit.Assert.assertTrue(i51 == 2);
        org.junit.Assert.assertNotNull(obj_array58);
        org.junit.Assert.assertNotNull(obj_array69);
        org.junit.Assert.assertTrue(i73 == 0);
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test104");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator8.setUnknownObjectBehavior(0);
        int i11 = fixedOrderComparator8.getUnknownObjectBehavior();
        fixedOrderComparator8.setUnknownObjectBehavior((int) (byte) 0);
        fixedOrderComparator8.setUnknownObjectBehavior(1);
        try {
            boolean b17 = fixedOrderComparator7.addAsEqual((java.lang.Object) 1, (java.lang.Object) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 0);
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test105");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        boolean b46 = fixedOrderComparator7.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator47.setUnknownObjectBehavior(0);
        int i50 = fixedOrderComparator47.getUnknownObjectBehavior();
        fixedOrderComparator47.setUnknownObjectBehavior((int) (byte) 0);
        java.lang.Object[] obj_array59 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array59);
        java.lang.Object[] obj_array68 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array68);
        fixedOrderComparator70.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array79 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array79);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array79);
        int i83 = fixedOrderComparator70.compare((java.lang.Object) fixedOrderComparator81, (java.lang.Object) (-1.0d));
        boolean b84 = fixedOrderComparator61.add((java.lang.Object) fixedOrderComparator70);
        boolean b85 = fixedOrderComparator70.isLocked();
        boolean b86 = fixedOrderComparator47.add((java.lang.Object) fixedOrderComparator70);
        boolean b87 = fixedOrderComparator70.isLocked();
        try {
            boolean b88 = fixedOrderComparator7.add((java.lang.Object) b87);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(i50 == 0);
        org.junit.Assert.assertNotNull(obj_array59);
        org.junit.Assert.assertNotNull(obj_array68);
        org.junit.Assert.assertNotNull(obj_array79);
        org.junit.Assert.assertTrue(i83 == 0);
        org.junit.Assert.assertTrue(b84 == true);
        org.junit.Assert.assertTrue(b85 == true);
        org.junit.Assert.assertTrue(b86 == true);
        org.junit.Assert.assertTrue(b87 == true);
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test106");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj18 = null;
        int i19 = fixedOrderComparator10.compare((java.lang.Object) 1.0d, obj18);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        int i32 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b34 = fixedOrderComparator28.addAsEqual((java.lang.Object) i32, (java.lang.Object) (short) 1);
        int i35 = fixedOrderComparator28.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        boolean b44 = fixedOrderComparator43.isLocked();
        boolean b45 = fixedOrderComparator28.add((java.lang.Object) fixedOrderComparator43);
        int i47 = fixedOrderComparator10.compare((java.lang.Object) fixedOrderComparator28, (java.lang.Object) 1L);
        boolean b48 = fixedOrderComparator28.isLocked();
        int i49 = fixedOrderComparator28.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertTrue(i49 == 2);
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test107");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object obj11 = null;
        java.lang.Object[] obj_array18 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        int i20 = fixedOrderComparator19.getUnknownObjectBehavior();
        try {
            boolean b21 = fixedOrderComparator8.addAsEqual(obj11, (java.lang.Object) i20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertTrue(i20 == 2);
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test108");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        java.lang.Object[] obj_array46 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array54);
        int i58 = fixedOrderComparator57.getUnknownObjectBehavior();
        boolean b59 = fixedOrderComparator57.isLocked();
        int i60 = fixedOrderComparator41.compare((java.lang.Object) fixedOrderComparator47, (java.lang.Object) fixedOrderComparator57);
        boolean b61 = fixedOrderComparator41.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertTrue(i58 == 2);
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertTrue(i60 == 0);
        org.junit.Assert.assertTrue(b61 == true);
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test109");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array18 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator21.setUnknownObjectBehavior(0);
        int i24 = fixedOrderComparator21.getUnknownObjectBehavior();
        boolean b26 = fixedOrderComparator20.addAsEqual((java.lang.Object) i24, (java.lang.Object) (short) 1);
        int i27 = fixedOrderComparator20.getUnknownObjectBehavior();
        java.lang.Object[] obj_array34 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array34);
        boolean b36 = fixedOrderComparator35.isLocked();
        boolean b37 = fixedOrderComparator20.add((java.lang.Object) fixedOrderComparator35);
        java.lang.Object[] obj_array44 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array44);
        java.lang.Object[] obj_array52 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array52);
        fixedOrderComparator53.setUnknownObjectBehavior(0);
        boolean b56 = fixedOrderComparator45.add((java.lang.Object) 0);
        try {
            int i57 = fixedOrderComparator11.compare((java.lang.Object) b37, (java.lang.Object) b56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertTrue(i27 == 2);
        org.junit.Assert.assertNotNull(obj_array34);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertNotNull(obj_array44);
        org.junit.Assert.assertNotNull(obj_array52);
        org.junit.Assert.assertTrue(b56 == false);
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test110");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj18 = null;
        int i19 = fixedOrderComparator10.compare((java.lang.Object) 1.0d, obj18);
        boolean b20 = fixedOrderComparator10.isLocked();
        try {
            fixedOrderComparator10.setUnknownObjectBehavior((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertTrue(b20 == true);
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test111");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array16 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array16);
        int i20 = fixedOrderComparator19.getUnknownObjectBehavior();
        boolean b21 = fixedOrderComparator19.isLocked();
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator();
        int i24 = fixedOrderComparator23.getUnknownObjectBehavior();
        boolean b25 = fixedOrderComparator23.isLocked();
        try {
            int i26 = fixedOrderComparator9.compare((java.lang.Object) fixedOrderComparator19, (java.lang.Object) b25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertTrue(i20 == 2);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(i22 == 2);
        org.junit.Assert.assertTrue(i24 == 2);
        org.junit.Assert.assertTrue(b25 == false);
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test112");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator9.setUnknownObjectBehavior(0);
        int i12 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) i12, (java.lang.Object) (short) 1);
        java.lang.Object[] obj_array15 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array15);
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator17.setUnknownObjectBehavior(0);
        int i20 = fixedOrderComparator17.getUnknownObjectBehavior();
        fixedOrderComparator17.setUnknownObjectBehavior((int) (byte) 0);
        int i23 = fixedOrderComparator17.getUnknownObjectBehavior();
        int i24 = fixedOrderComparator17.getUnknownObjectBehavior();
        boolean b25 = fixedOrderComparator17.isLocked();
        try {
            boolean b26 = fixedOrderComparator8.addAsEqual((java.lang.Object) obj_array15, (java.lang.Object) fixedOrderComparator17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertNotNull(obj_array15);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertTrue(i23 == 0);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertTrue(b25 == false);
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test113");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array18 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array18);
        int i22 = fixedOrderComparator21.getUnknownObjectBehavior();
        boolean b23 = fixedOrderComparator21.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array31 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        boolean b34 = fixedOrderComparator32.add((java.lang.Object) (-1.0f));
        int i35 = fixedOrderComparator32.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        fixedOrderComparator44.setUnknownObjectBehavior((int) (short) 0);
        int i47 = fixedOrderComparator44.getUnknownObjectBehavior();
        boolean b48 = fixedOrderComparator32.add((java.lang.Object) i47);
        boolean b49 = fixedOrderComparator24.add((java.lang.Object) fixedOrderComparator32);
        int i50 = fixedOrderComparator7.compare((java.lang.Object) b23, (java.lang.Object) fixedOrderComparator24);
        try {
            fixedOrderComparator7.setUnknownObjectBehavior((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertTrue(i22 == 2);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(i50 == 0);
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test114");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        boolean b19 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array26 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        java.lang.Object[] obj_array34 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array34);
        fixedOrderComparator35.setUnknownObjectBehavior(0);
        boolean b38 = fixedOrderComparator27.add((java.lang.Object) 0);
        fixedOrderComparator27.setUnknownObjectBehavior((int) (short) 0);
        boolean b41 = fixedOrderComparator27.isLocked();
        boolean b42 = fixedOrderComparator27.isLocked();
        boolean b43 = fixedOrderComparator27.isLocked();
        java.lang.Object[] obj_array50 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array50);
        int i55 = fixedOrderComparator54.getUnknownObjectBehavior();
        int i56 = fixedOrderComparator54.getUnknownObjectBehavior();
        boolean b57 = fixedOrderComparator54.isLocked();
        int i58 = fixedOrderComparator54.getUnknownObjectBehavior();
        boolean b59 = fixedOrderComparator27.add((java.lang.Object) fixedOrderComparator54);
        java.lang.Object[] obj_array66 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array66);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array66);
        fixedOrderComparator68.setUnknownObjectBehavior((int) (short) 0);
        int i71 = fixedOrderComparator68.getUnknownObjectBehavior();
        java.lang.Object obj73 = null;
        boolean b74 = fixedOrderComparator68.addAsEqual((java.lang.Object) 10.0f, obj73);
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator();
        int i76 = fixedOrderComparator75.getUnknownObjectBehavior();
        java.lang.Object[] obj_array83 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator84 = new collections.comparators.FixedOrderComparator(obj_array83);
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array83);
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array83);
        collections.comparators.FixedOrderComparator fixedOrderComparator87 = new collections.comparators.FixedOrderComparator(obj_array83);
        boolean b88 = fixedOrderComparator75.add((java.lang.Object) fixedOrderComparator87);
        fixedOrderComparator75.setUnknownObjectBehavior(0);
        boolean b91 = fixedOrderComparator75.isLocked();
        int i93 = fixedOrderComparator68.compare((java.lang.Object) fixedOrderComparator75, (java.lang.Object) 2);
        try {
            boolean b94 = fixedOrderComparator7.addAsEqual((java.lang.Object) fixedOrderComparator54, (java.lang.Object) fixedOrderComparator75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertNotNull(obj_array34);
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertNotNull(obj_array50);
        org.junit.Assert.assertTrue(i55 == 2);
        org.junit.Assert.assertTrue(i56 == 2);
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertTrue(i58 == 2);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertNotNull(obj_array66);
        org.junit.Assert.assertTrue(i71 == 0);
        org.junit.Assert.assertTrue(b74 == true);
        org.junit.Assert.assertTrue(i76 == 2);
        org.junit.Assert.assertNotNull(obj_array83);
        org.junit.Assert.assertTrue(b88 == true);
        org.junit.Assert.assertTrue(b91 == false);
        org.junit.Assert.assertTrue(i93 == 0);
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test115");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object[] obj_array18 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        boolean b21 = fixedOrderComparator19.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator22.setUnknownObjectBehavior(0);
        int i25 = fixedOrderComparator22.getUnknownObjectBehavior();
        fixedOrderComparator22.setUnknownObjectBehavior((int) (byte) 0);
        boolean b28 = fixedOrderComparator19.add((java.lang.Object) fixedOrderComparator22);
        java.lang.Object obj30 = null;
        int i31 = fixedOrderComparator22.compare((java.lang.Object) 1.0d, obj30);
        java.lang.Object[] obj_array38 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        boolean b46 = fixedOrderComparator40.addAsEqual((java.lang.Object) i44, (java.lang.Object) (short) 1);
        int i47 = fixedOrderComparator40.getUnknownObjectBehavior();
        java.lang.Object[] obj_array54 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        boolean b56 = fixedOrderComparator55.isLocked();
        boolean b57 = fixedOrderComparator40.add((java.lang.Object) fixedOrderComparator55);
        int i59 = fixedOrderComparator22.compare((java.lang.Object) fixedOrderComparator40, (java.lang.Object) 1L);
        boolean b60 = fixedOrderComparator40.isLocked();
        java.lang.Object[] obj_array67 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array67);
        boolean b70 = fixedOrderComparator68.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator71.setUnknownObjectBehavior(0);
        int i74 = fixedOrderComparator71.getUnknownObjectBehavior();
        fixedOrderComparator71.setUnknownObjectBehavior((int) (byte) 0);
        boolean b77 = fixedOrderComparator68.add((java.lang.Object) fixedOrderComparator71);
        java.lang.Object obj79 = null;
        int i80 = fixedOrderComparator71.compare((java.lang.Object) 1.0d, obj79);
        try {
            boolean b81 = fixedOrderComparator7.addAsEqual((java.lang.Object) fixedOrderComparator40, (java.lang.Object) i80);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(i31 == 0);
        org.junit.Assert.assertNotNull(obj_array38);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(i47 == 2);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertTrue(b56 == false);
        org.junit.Assert.assertTrue(b57 == true);
        org.junit.Assert.assertTrue(i59 == 0);
        org.junit.Assert.assertTrue(b60 == false);
        org.junit.Assert.assertNotNull(obj_array67);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertTrue(i74 == 0);
        org.junit.Assert.assertTrue(b77 == true);
        org.junit.Assert.assertTrue(i80 == 0);
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test116");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator9.setUnknownObjectBehavior(0);
        int i12 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) i12, (java.lang.Object) (short) 1);
        int i15 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        fixedOrderComparator31.setUnknownObjectBehavior(0);
        boolean b34 = fixedOrderComparator23.add((java.lang.Object) 0);
        java.lang.Object[] obj_array41 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array41);
        java.lang.Object[] obj_array52 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array52);
        fixedOrderComparator53.setUnknownObjectBehavior(0);
        boolean b57 = fixedOrderComparator53.add((java.lang.Object) 1.0f);
        boolean b59 = fixedOrderComparator53.add((java.lang.Object) 1.0f);
        boolean b60 = fixedOrderComparator53.isLocked();
        boolean b61 = fixedOrderComparator45.add((java.lang.Object) fixedOrderComparator53);
        try {
            int i62 = fixedOrderComparator8.compare((java.lang.Object) fixedOrderComparator23, (java.lang.Object) fixedOrderComparator53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i15 == 2);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertNotNull(obj_array52);
        org.junit.Assert.assertTrue(b57 == true);
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertTrue(b60 == false);
        org.junit.Assert.assertTrue(b61 == true);
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test117");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        boolean b19 = fixedOrderComparator7.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator();
        boolean b21 = fixedOrderComparator20.isLocked();
        boolean b23 = fixedOrderComparator20.add((java.lang.Object) 10.0d);
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        fixedOrderComparator31.setUnknownObjectBehavior(0);
        boolean b35 = fixedOrderComparator31.add((java.lang.Object) 1.0f);
        java.lang.Object obj36 = null;
        java.lang.Object[] obj_array43 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array43);
        fixedOrderComparator44.setUnknownObjectBehavior(0);
        boolean b48 = fixedOrderComparator44.add((java.lang.Object) 1.0f);
        int i49 = fixedOrderComparator44.getUnknownObjectBehavior();
        int i50 = fixedOrderComparator31.compare(obj36, (java.lang.Object) i49);
        int i51 = fixedOrderComparator31.getUnknownObjectBehavior();
        boolean b52 = fixedOrderComparator31.isLocked();
        java.lang.Object[] obj_array59 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array59);
        fixedOrderComparator61.setUnknownObjectBehavior((int) (short) 0);
        int i64 = fixedOrderComparator61.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator65.setUnknownObjectBehavior(0);
        int i68 = fixedOrderComparator65.getUnknownObjectBehavior();
        int i69 = fixedOrderComparator31.compare((java.lang.Object) i64, (java.lang.Object) fixedOrderComparator65);
        int i70 = fixedOrderComparator31.getUnknownObjectBehavior();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Object obj72 = null;
        int i73 = fixedOrderComparator31.compare(obj71, obj72);
        try {
            int i74 = fixedOrderComparator7.compare((java.lang.Object) fixedOrderComparator20, obj72);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertNotNull(obj_array43);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertTrue(i50 == (-1));
        org.junit.Assert.assertTrue(i51 == 0);
        org.junit.Assert.assertTrue(b52 == true);
        org.junit.Assert.assertNotNull(obj_array59);
        org.junit.Assert.assertTrue(i64 == 0);
        org.junit.Assert.assertTrue(i68 == 0);
        org.junit.Assert.assertTrue(i69 == 1);
        org.junit.Assert.assertTrue(i70 == 0);
        org.junit.Assert.assertTrue(i73 == 0);
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test118");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array18 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        fixedOrderComparator19.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array28 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator31.setUnknownObjectBehavior(0);
        int i34 = fixedOrderComparator31.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator30.addAsEqual((java.lang.Object) i34, (java.lang.Object) (short) 1);
        int i38 = fixedOrderComparator19.compare((java.lang.Object) fixedOrderComparator30, (java.lang.Object) '#');
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator39.setUnknownObjectBehavior(0);
        int i42 = fixedOrderComparator39.getUnknownObjectBehavior();
        fixedOrderComparator39.setUnknownObjectBehavior((int) (byte) 0);
        boolean b46 = fixedOrderComparator39.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array53 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array53);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array53);
        java.lang.Object[] obj_array56 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array56);
        boolean b58 = fixedOrderComparator55.add((java.lang.Object) obj_array56);
        boolean b59 = fixedOrderComparator39.add((java.lang.Object) fixedOrderComparator55);
        try {
            int i60 = fixedOrderComparator11.compare((java.lang.Object) fixedOrderComparator30, (java.lang.Object) fixedOrderComparator39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(i34 == 0);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(i38 == 0);
        org.junit.Assert.assertTrue(i42 == 0);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertNotNull(obj_array53);
        org.junit.Assert.assertNotNull(obj_array56);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertTrue(b59 == true);
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test119");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        int i46 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Object obj48 = null;
        int i49 = fixedOrderComparator7.compare(obj47, obj48);
        java.lang.Object[] obj_array56 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array56);
        java.lang.Object[] obj_array64 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array64);
        int i68 = fixedOrderComparator7.compare((java.lang.Object) obj_array56, (java.lang.Object) fixedOrderComparator67);
        java.lang.Object[] obj_array75 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array75);
        try {
            boolean b77 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator76);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertNotNull(obj_array56);
        org.junit.Assert.assertNotNull(obj_array64);
        org.junit.Assert.assertTrue(i68 == 0);
        org.junit.Assert.assertNotNull(obj_array75);
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test120");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator9.setUnknownObjectBehavior(0);
        int i12 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) i12, (java.lang.Object) (short) 1);
        int i15 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b24 = fixedOrderComparator23.isLocked();
        boolean b25 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator23);
        fixedOrderComparator8.setUnknownObjectBehavior(1);
        try {
            fixedOrderComparator8.setUnknownObjectBehavior((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i15 == 2);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(b25 == true);
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test121");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i11 = fixedOrderComparator10.getUnknownObjectBehavior();
        int i12 = fixedOrderComparator10.getUnknownObjectBehavior();
        boolean b13 = fixedOrderComparator10.isLocked();
        int i14 = fixedOrderComparator10.getUnknownObjectBehavior();
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b27 = fixedOrderComparator10.add((java.lang.Object) obj_array21);
        java.lang.Object[] obj_array34 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array34);
        fixedOrderComparator35.setUnknownObjectBehavior(0);
        boolean b39 = fixedOrderComparator35.add((java.lang.Object) 1.0f);
        boolean b41 = fixedOrderComparator35.add((java.lang.Object) 1.0f);
        boolean b42 = fixedOrderComparator35.isLocked();
        boolean b43 = fixedOrderComparator35.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator();
        int i45 = fixedOrderComparator44.getUnknownObjectBehavior();
        boolean b46 = fixedOrderComparator44.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator();
        int i48 = fixedOrderComparator47.getUnknownObjectBehavior();
        boolean b49 = fixedOrderComparator47.isLocked();
        boolean b50 = fixedOrderComparator44.add((java.lang.Object) b49);
        try {
            int i51 = fixedOrderComparator10.compare((java.lang.Object) b43, (java.lang.Object) fixedOrderComparator44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 2);
        org.junit.Assert.assertTrue(i12 == 2);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(i14 == 2);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertNotNull(obj_array34);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertTrue(i45 == 2);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue(i48 == 2);
        org.junit.Assert.assertTrue(b49 == false);
        org.junit.Assert.assertTrue(b50 == true);
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test122");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        java.lang.Object[] obj_array46 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array54);
        int i58 = fixedOrderComparator57.getUnknownObjectBehavior();
        boolean b59 = fixedOrderComparator57.isLocked();
        int i60 = fixedOrderComparator41.compare((java.lang.Object) fixedOrderComparator47, (java.lang.Object) fixedOrderComparator57);
        try {
            fixedOrderComparator41.setUnknownObjectBehavior((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertTrue(i58 == 2);
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertTrue(i60 == 0);
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test123");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        boolean b1 = fixedOrderComparator0.isLocked();
        boolean b3 = fixedOrderComparator0.add((java.lang.Object) 10.0d);
        boolean b4 = fixedOrderComparator0.isLocked();
        try {
            fixedOrderComparator0.setUnknownObjectBehavior((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b1 == false);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue(b4 == false);
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test124");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj18 = null;
        int i19 = fixedOrderComparator10.compare((java.lang.Object) 1.0d, obj18);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array26);
        try {
            boolean b34 = fixedOrderComparator10.addAsEqual((java.lang.Object) obj_array26, (java.lang.Object) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertNotNull(obj_array26);
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test125");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        boolean b1 = fixedOrderComparator0.isLocked();
        boolean b3 = fixedOrderComparator0.add((java.lang.Object) 10.0d);
        java.lang.Object obj4 = null;
        boolean b5 = fixedOrderComparator0.add(obj4);
        boolean b6 = fixedOrderComparator0.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        int i10 = fixedOrderComparator7.getUnknownObjectBehavior();
        fixedOrderComparator7.setUnknownObjectBehavior((int) (byte) 0);
        boolean b13 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array20 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array20);
        int i25 = fixedOrderComparator24.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator24.getUnknownObjectBehavior();
        boolean b27 = fixedOrderComparator24.isLocked();
        int i28 = fixedOrderComparator24.getUnknownObjectBehavior();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array35);
        boolean b41 = fixedOrderComparator24.add((java.lang.Object) obj_array35);
        try {
            boolean b42 = fixedOrderComparator0.addAsEqual((java.lang.Object) b13, (java.lang.Object) obj_array35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b1 == false);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue(b5 == true);
        org.junit.Assert.assertTrue(b6 == false);
        org.junit.Assert.assertTrue(i10 == 0);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertTrue(i25 == 2);
        org.junit.Assert.assertTrue(i26 == 2);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertTrue(i28 == 2);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(b41 == true);
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test126");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator9.setUnknownObjectBehavior(0);
        int i12 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) i12, (java.lang.Object) (short) 1);
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        int i18 = fixedOrderComparator15.getUnknownObjectBehavior();
        fixedOrderComparator15.setUnknownObjectBehavior((int) (byte) 0);
        fixedOrderComparator15.setUnknownObjectBehavior(1);
        boolean b23 = fixedOrderComparator8.add((java.lang.Object) 1);
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        fixedOrderComparator31.setUnknownObjectBehavior(0);
        boolean b35 = fixedOrderComparator31.add((java.lang.Object) 1.0f);
        int i36 = fixedOrderComparator31.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator();
        boolean b38 = fixedOrderComparator37.isLocked();
        java.lang.Object obj39 = null;
        boolean b40 = fixedOrderComparator37.add(obj39);
        try {
            int i41 = fixedOrderComparator8.compare((java.lang.Object) fixedOrderComparator31, (java.lang.Object) fixedOrderComparator37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i18 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertTrue(i36 == 0);
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertTrue(b40 == true);
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test127");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array20 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        fixedOrderComparator21.setUnknownObjectBehavior(0);
        boolean b25 = fixedOrderComparator21.add((java.lang.Object) 1.0f);
        java.lang.Object obj26 = null;
        java.lang.Object[] obj_array33 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        boolean b38 = fixedOrderComparator34.add((java.lang.Object) 1.0f);
        int i39 = fixedOrderComparator34.getUnknownObjectBehavior();
        int i40 = fixedOrderComparator21.compare(obj26, (java.lang.Object) i39);
        boolean b41 = fixedOrderComparator21.isLocked();
        java.lang.Object[] obj_array48 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array48);
        java.lang.Object[] obj_array56 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array56);
        fixedOrderComparator57.setUnknownObjectBehavior(0);
        boolean b60 = fixedOrderComparator49.add((java.lang.Object) 0);
        boolean b61 = fixedOrderComparator49.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator();
        int i63 = fixedOrderComparator62.getUnknownObjectBehavior();
        boolean b64 = fixedOrderComparator49.add((java.lang.Object) i63);
        try {
            boolean b65 = fixedOrderComparator13.addAsEqual((java.lang.Object) b41, (java.lang.Object) i63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(i39 == 0);
        org.junit.Assert.assertTrue(i40 == (-1));
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertNotNull(obj_array48);
        org.junit.Assert.assertNotNull(obj_array56);
        org.junit.Assert.assertTrue(b60 == false);
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertTrue(i63 == 2);
        org.junit.Assert.assertTrue(b64 == true);
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test128");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator2 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b12 = fixedOrderComparator10.add((java.lang.Object) (-1.0f));
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        java.lang.Object[] obj_array20 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array20);
        fixedOrderComparator22.setUnknownObjectBehavior((int) (short) 0);
        int i25 = fixedOrderComparator22.getUnknownObjectBehavior();
        boolean b26 = fixedOrderComparator10.add((java.lang.Object) i25);
        boolean b27 = fixedOrderComparator2.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object[] obj_array34 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array34);
        java.lang.Object[] obj_array37 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array37);
        boolean b39 = fixedOrderComparator36.add((java.lang.Object) obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array37);
        try {
            int i43 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator10, (java.lang.Object) fixedOrderComparator42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(i13 == 2);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertNotNull(obj_array34);
        org.junit.Assert.assertNotNull(obj_array37);
        org.junit.Assert.assertTrue(b39 == true);
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test129");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        int i12 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b13 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array14 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        java.lang.Object[] obj_array16 = new java.lang.Object[] { fixedOrderComparator15 };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array16);
        java.lang.Object[] obj_array25 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array25);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array25);
        int i28 = fixedOrderComparator7.compare((java.lang.Object) fixedOrderComparator18, (java.lang.Object) obj_array25);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array25);
        java.lang.Object[] obj_array37 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array37);
        try {
            boolean b45 = fixedOrderComparator29.addAsEqual((java.lang.Object) (byte) 1, (java.lang.Object) fixedOrderComparator44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertNotNull(obj_array25);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertNotNull(obj_array37);
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test130");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array16 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator19.setUnknownObjectBehavior(0);
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        boolean b24 = fixedOrderComparator18.addAsEqual((java.lang.Object) i22, (java.lang.Object) (short) 1);
        int i25 = fixedOrderComparator18.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator();
        boolean b27 = fixedOrderComparator26.isLocked();
        boolean b29 = fixedOrderComparator26.add((java.lang.Object) 10.0d);
        try {
            boolean b30 = fixedOrderComparator9.addAsEqual((java.lang.Object) i25, (java.lang.Object) b29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 2);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertTrue(b29 == true);
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test131");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        boolean b21 = fixedOrderComparator7.isLocked();
        boolean b22 = fixedOrderComparator7.isLocked();
        try {
            fixedOrderComparator7.setUnknownObjectBehavior((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == false);
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test132");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        java.lang.Object[] obj_array52 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array52);
        boolean b55 = fixedOrderComparator53.add((java.lang.Object) (-1.0f));
        int i56 = fixedOrderComparator53.getUnknownObjectBehavior();
        java.lang.Object[] obj_array63 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array63);
        fixedOrderComparator65.setUnknownObjectBehavior((int) (short) 0);
        int i68 = fixedOrderComparator65.getUnknownObjectBehavior();
        boolean b69 = fixedOrderComparator53.add((java.lang.Object) i68);
        int i70 = fixedOrderComparator53.getUnknownObjectBehavior();
        try {
            boolean b72 = fixedOrderComparator41.addAsEqual((java.lang.Object) fixedOrderComparator53, (java.lang.Object) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertNotNull(obj_array52);
        org.junit.Assert.assertTrue(b55 == true);
        org.junit.Assert.assertTrue(i56 == 2);
        org.junit.Assert.assertNotNull(obj_array63);
        org.junit.Assert.assertTrue(i68 == 0);
        org.junit.Assert.assertTrue(b69 == false);
        org.junit.Assert.assertTrue(i70 == 2);
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test133");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator3 = new collections.comparators.FixedOrderComparator();
        int i4 = fixedOrderComparator3.getUnknownObjectBehavior();
        boolean b5 = fixedOrderComparator3.isLocked();
        boolean b6 = fixedOrderComparator0.add((java.lang.Object) b5);
        boolean b7 = fixedOrderComparator0.isLocked();
        int i8 = fixedOrderComparator0.getUnknownObjectBehavior();
        try {
            fixedOrderComparator0.setUnknownObjectBehavior(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(i4 == 2);
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertTrue(i8 == 2);
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test134");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator8.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        boolean b13 = fixedOrderComparator10.isLocked();
        boolean b14 = fixedOrderComparator10.isLocked();
        java.lang.Object[] obj_array21 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        fixedOrderComparator22.setUnknownObjectBehavior(0);
        boolean b26 = fixedOrderComparator22.add((java.lang.Object) 1.0f);
        boolean b28 = fixedOrderComparator22.add((java.lang.Object) 1.0f);
        int i30 = fixedOrderComparator10.compare((java.lang.Object) fixedOrderComparator22, (java.lang.Object) 1.0d);
        try {
            int i32 = fixedOrderComparator8.compare((java.lang.Object) i30, (java.lang.Object) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertTrue(i30 == 0);
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test135");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator14.setUnknownObjectBehavior(0);
        boolean b17 = fixedOrderComparator14.isLocked();
        boolean b18 = fixedOrderComparator14.isLocked();
        java.lang.Object[] obj_array25 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array25);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array25);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array25);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array25);
        try {
            int i30 = fixedOrderComparator12.compare((java.lang.Object) b18, (java.lang.Object) fixedOrderComparator29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(obj_array25);
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test136");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        boolean b21 = fixedOrderComparator7.isLocked();
        boolean b22 = fixedOrderComparator7.isLocked();
        boolean b23 = fixedOrderComparator7.isLocked();
        java.lang.Object obj24 = null;
        java.lang.Object[] obj_array31 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        fixedOrderComparator32.setUnknownObjectBehavior(0);
        boolean b36 = fixedOrderComparator32.add((java.lang.Object) 1.0f);
        boolean b38 = fixedOrderComparator32.add((java.lang.Object) 1.0f);
        fixedOrderComparator32.setUnknownObjectBehavior(1);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        fixedOrderComparator41.setUnknownObjectBehavior((int) (byte) 0);
        fixedOrderComparator41.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array55 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        fixedOrderComparator56.setUnknownObjectBehavior(0);
        boolean b60 = fixedOrderComparator56.add((java.lang.Object) 1.0f);
        java.lang.Object obj61 = null;
        java.lang.Object[] obj_array68 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array68);
        fixedOrderComparator69.setUnknownObjectBehavior(0);
        boolean b73 = fixedOrderComparator69.add((java.lang.Object) 1.0f);
        int i74 = fixedOrderComparator69.getUnknownObjectBehavior();
        int i75 = fixedOrderComparator56.compare(obj61, (java.lang.Object) i74);
        boolean b76 = fixedOrderComparator56.isLocked();
        int i77 = fixedOrderComparator32.compare((java.lang.Object) 1, (java.lang.Object) b76);
        try {
            boolean b78 = fixedOrderComparator7.addAsEqual(obj24, (java.lang.Object) fixedOrderComparator32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertNotNull(obj_array68);
        org.junit.Assert.assertTrue(b73 == true);
        org.junit.Assert.assertTrue(i74 == 0);
        org.junit.Assert.assertTrue(i75 == (-1));
        org.junit.Assert.assertTrue(b76 == true);
        org.junit.Assert.assertTrue(i77 == 0);
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test137");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array18 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        fixedOrderComparator19.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array28 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator31.setUnknownObjectBehavior(0);
        int i34 = fixedOrderComparator31.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator30.addAsEqual((java.lang.Object) i34, (java.lang.Object) (short) 1);
        int i38 = fixedOrderComparator19.compare((java.lang.Object) fixedOrderComparator30, (java.lang.Object) '#');
        java.lang.Object[] obj_array45 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array45);
        boolean b48 = fixedOrderComparator46.add((java.lang.Object) (-1.0f));
        fixedOrderComparator46.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array57 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array57);
        int i61 = fixedOrderComparator60.getUnknownObjectBehavior();
        boolean b62 = fixedOrderComparator60.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array70 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array70);
        boolean b73 = fixedOrderComparator71.add((java.lang.Object) (-1.0f));
        int i74 = fixedOrderComparator71.getUnknownObjectBehavior();
        java.lang.Object[] obj_array81 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array81);
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator(obj_array81);
        fixedOrderComparator83.setUnknownObjectBehavior((int) (short) 0);
        int i86 = fixedOrderComparator83.getUnknownObjectBehavior();
        boolean b87 = fixedOrderComparator71.add((java.lang.Object) i86);
        boolean b88 = fixedOrderComparator63.add((java.lang.Object) fixedOrderComparator71);
        int i89 = fixedOrderComparator46.compare((java.lang.Object) b62, (java.lang.Object) fixedOrderComparator63);
        int i90 = fixedOrderComparator7.compare((java.lang.Object) '#', (java.lang.Object) i89);
        java.lang.Object[] obj_array91 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator92 = new collections.comparators.FixedOrderComparator(obj_array91);
        java.lang.Object[] obj_array93 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator94 = new collections.comparators.FixedOrderComparator(obj_array93);
        try {
            boolean b95 = fixedOrderComparator7.addAsEqual((java.lang.Object) fixedOrderComparator92, (java.lang.Object) fixedOrderComparator94);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(i34 == 0);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(i38 == 0);
        org.junit.Assert.assertNotNull(obj_array45);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertNotNull(obj_array57);
        org.junit.Assert.assertTrue(i61 == 2);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertNotNull(obj_array70);
        org.junit.Assert.assertTrue(b73 == true);
        org.junit.Assert.assertTrue(i74 == 2);
        org.junit.Assert.assertNotNull(obj_array81);
        org.junit.Assert.assertTrue(i86 == 0);
        org.junit.Assert.assertTrue(b87 == false);
        org.junit.Assert.assertTrue(b88 == true);
        org.junit.Assert.assertTrue(i89 == 0);
        org.junit.Assert.assertTrue(i90 == (-1));
        org.junit.Assert.assertNotNull(obj_array91);
        org.junit.Assert.assertNotNull(obj_array93);
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test138");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        int i12 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b13 = fixedOrderComparator7.isLocked();
        try {
            fixedOrderComparator7.setUnknownObjectBehavior((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b13 == false);
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test139");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i10 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b11 = fixedOrderComparator9.isLocked();
        java.lang.Object[] obj_array18 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array18);
        boolean b21 = fixedOrderComparator20.isLocked();
        try {
            boolean b23 = fixedOrderComparator9.addAsEqual((java.lang.Object) b21, (java.lang.Object) 100.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i10 == 2);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertTrue(b21 == false);
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test140");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        boolean b21 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array28 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator31.setUnknownObjectBehavior(0);
        int i34 = fixedOrderComparator31.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator30.addAsEqual((java.lang.Object) i34, (java.lang.Object) (short) 1);
        int i37 = fixedOrderComparator30.getUnknownObjectBehavior();
        java.lang.Object[] obj_array44 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array44);
        boolean b46 = fixedOrderComparator45.isLocked();
        boolean b47 = fixedOrderComparator30.add((java.lang.Object) fixedOrderComparator45);
        int i48 = fixedOrderComparator30.getUnknownObjectBehavior();
        java.lang.Object[] obj_array55 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        fixedOrderComparator56.setUnknownObjectBehavior(0);
        boolean b60 = fixedOrderComparator56.add((java.lang.Object) 1.0f);
        int i61 = fixedOrderComparator56.getUnknownObjectBehavior();
        boolean b62 = fixedOrderComparator56.isLocked();
        int i63 = fixedOrderComparator0.compare((java.lang.Object) i48, (java.lang.Object) fixedOrderComparator56);
        try {
            fixedOrderComparator0.setUnknownObjectBehavior((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(i34 == 0);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(i37 == 2);
        org.junit.Assert.assertNotNull(obj_array44);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertTrue(i48 == 2);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertTrue(i61 == 0);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertTrue(i63 == 0);
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test141");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        collections.comparators.FixedOrderComparator fixedOrderComparator5 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator5.setUnknownObjectBehavior(0);
        boolean b8 = fixedOrderComparator5.isLocked();
        java.lang.Object[] obj_array15 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array15);
        fixedOrderComparator16.setUnknownObjectBehavior(0);
        boolean b20 = fixedOrderComparator16.add((java.lang.Object) 1.0f);
        boolean b22 = fixedOrderComparator16.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator();
        boolean b24 = fixedOrderComparator23.isLocked();
        boolean b26 = fixedOrderComparator23.add((java.lang.Object) 10.0d);
        int i27 = fixedOrderComparator5.compare((java.lang.Object) b22, (java.lang.Object) fixedOrderComparator23);
        boolean b28 = fixedOrderComparator0.add((java.lang.Object) i27);
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator();
        int i38 = fixedOrderComparator37.getUnknownObjectBehavior();
        java.lang.Object[] obj_array45 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array45);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array45);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array45);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array45);
        boolean b50 = fixedOrderComparator37.add((java.lang.Object) fixedOrderComparator49);
        fixedOrderComparator37.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array59 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array59);
        java.lang.Object[] obj_array66 = new java.lang.Object[] { fixedOrderComparator37, obj_array59 };
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array59);
        boolean b69 = fixedOrderComparator68.isLocked();
        try {
            boolean b70 = fixedOrderComparator0.addAsEqual((java.lang.Object) fixedOrderComparator36, (java.lang.Object) b69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(obj_array15);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i38 == 2);
        org.junit.Assert.assertNotNull(obj_array45);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertNotNull(obj_array59);
        org.junit.Assert.assertNotNull(obj_array66);
        org.junit.Assert.assertTrue(b69 == false);
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test142");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i28 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        java.lang.Object obj42 = null;
        boolean b43 = fixedOrderComparator37.addAsEqual((java.lang.Object) 10.0f, obj42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator44.setUnknownObjectBehavior(0);
        int i47 = fixedOrderComparator44.getUnknownObjectBehavior();
        fixedOrderComparator44.setUnknownObjectBehavior((int) (byte) 0);
        boolean b50 = fixedOrderComparator44.isLocked();
        int i51 = fixedOrderComparator44.getUnknownObjectBehavior();
        java.lang.Object[] obj_array58 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array58);
        int i62 = fixedOrderComparator61.getUnknownObjectBehavior();
        int i63 = fixedOrderComparator37.compare((java.lang.Object) fixedOrderComparator44, (java.lang.Object) i62);
        try {
            boolean b64 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator44);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b50 == false);
        org.junit.Assert.assertTrue(i51 == 0);
        org.junit.Assert.assertNotNull(obj_array58);
        org.junit.Assert.assertTrue(i62 == 2);
        org.junit.Assert.assertTrue(i63 == 0);
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test143");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        int i11 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object obj13 = null;
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) 10.0f, obj13);
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        int i18 = fixedOrderComparator15.getUnknownObjectBehavior();
        fixedOrderComparator15.setUnknownObjectBehavior((int) (byte) 0);
        boolean b21 = fixedOrderComparator15.isLocked();
        int i22 = fixedOrderComparator15.getUnknownObjectBehavior();
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array29);
        int i33 = fixedOrderComparator32.getUnknownObjectBehavior();
        int i34 = fixedOrderComparator8.compare((java.lang.Object) fixedOrderComparator15, (java.lang.Object) i33);
        try {
            boolean b36 = fixedOrderComparator8.add((java.lang.Object) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i18 == 0);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i33 == 2);
        org.junit.Assert.assertTrue(i34 == 0);
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test144");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        fixedOrderComparator0.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        fixedOrderComparator23.setUnknownObjectBehavior(0);
        boolean b26 = fixedOrderComparator15.add((java.lang.Object) 0);
        boolean b27 = fixedOrderComparator15.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator();
        int i29 = fixedOrderComparator28.getUnknownObjectBehavior();
        boolean b30 = fixedOrderComparator15.add((java.lang.Object) i29);
        int i32 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator15, (java.lang.Object) 100);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator33.setUnknownObjectBehavior(0);
        boolean b36 = fixedOrderComparator33.isLocked();
        boolean b37 = fixedOrderComparator33.isLocked();
        java.lang.Object[] obj_array44 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array44);
        fixedOrderComparator45.setUnknownObjectBehavior(0);
        boolean b49 = fixedOrderComparator45.add((java.lang.Object) 1.0f);
        boolean b51 = fixedOrderComparator45.add((java.lang.Object) 1.0f);
        int i53 = fixedOrderComparator33.compare((java.lang.Object) fixedOrderComparator45, (java.lang.Object) 1.0d);
        try {
            boolean b54 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator33);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertTrue(i29 == 2);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertNotNull(obj_array44);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertTrue(i53 == 0);
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test145");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        boolean b21 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array28 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator31.setUnknownObjectBehavior(0);
        int i34 = fixedOrderComparator31.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator30.addAsEqual((java.lang.Object) i34, (java.lang.Object) (short) 1);
        int i37 = fixedOrderComparator30.getUnknownObjectBehavior();
        java.lang.Object[] obj_array44 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array44);
        boolean b46 = fixedOrderComparator45.isLocked();
        boolean b47 = fixedOrderComparator30.add((java.lang.Object) fixedOrderComparator45);
        int i48 = fixedOrderComparator30.getUnknownObjectBehavior();
        java.lang.Object[] obj_array55 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        fixedOrderComparator56.setUnknownObjectBehavior(0);
        boolean b60 = fixedOrderComparator56.add((java.lang.Object) 1.0f);
        int i61 = fixedOrderComparator56.getUnknownObjectBehavior();
        boolean b62 = fixedOrderComparator56.isLocked();
        int i63 = fixedOrderComparator0.compare((java.lang.Object) i48, (java.lang.Object) fixedOrderComparator56);
        try {
            fixedOrderComparator0.setUnknownObjectBehavior((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(i34 == 0);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(i37 == 2);
        org.junit.Assert.assertNotNull(obj_array44);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertTrue(i48 == 2);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertTrue(i61 == 0);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertTrue(i63 == 0);
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test146");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array15 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array15);
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array15);
        fixedOrderComparator17.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array26);
        int i30 = fixedOrderComparator17.compare((java.lang.Object) fixedOrderComparator28, (java.lang.Object) (-1.0d));
        boolean b31 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator17);
        boolean b32 = fixedOrderComparator17.isLocked();
        int i33 = fixedOrderComparator17.getUnknownObjectBehavior();
        try {
            fixedOrderComparator17.setUnknownObjectBehavior((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array15);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertTrue(i33 == 0);
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test147");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b12 = fixedOrderComparator10.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        boolean b19 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object obj21 = null;
        int i22 = fixedOrderComparator13.compare((java.lang.Object) 1.0d, obj21);
        boolean b23 = fixedOrderComparator13.isLocked();
        boolean b24 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator13);
        boolean b25 = fixedOrderComparator13.isLocked();
        boolean b26 = fixedOrderComparator13.isLocked();
        int i27 = fixedOrderComparator13.getUnknownObjectBehavior();
        int i30 = fixedOrderComparator13.compare((java.lang.Object) ' ', (java.lang.Object) 10L);
        try {
            fixedOrderComparator13.setUnknownObjectBehavior((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(i30 == 0);
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test148");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b12 = fixedOrderComparator10.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        boolean b19 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object obj21 = null;
        int i22 = fixedOrderComparator13.compare((java.lang.Object) 1.0d, obj21);
        boolean b23 = fixedOrderComparator13.isLocked();
        boolean b24 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator13);
        boolean b25 = fixedOrderComparator13.isLocked();
        java.lang.Object[] obj_array32 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array32);
        java.lang.Object[] obj_array41 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array41);
        fixedOrderComparator43.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array52 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array52);
        int i56 = fixedOrderComparator43.compare((java.lang.Object) fixedOrderComparator54, (java.lang.Object) (-1.0d));
        boolean b57 = fixedOrderComparator34.add((java.lang.Object) fixedOrderComparator43);
        int i58 = fixedOrderComparator43.getUnknownObjectBehavior();
        try {
            boolean b59 = fixedOrderComparator13.add((java.lang.Object) fixedOrderComparator43);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertNotNull(obj_array52);
        org.junit.Assert.assertTrue(i56 == 0);
        org.junit.Assert.assertTrue(b57 == true);
        org.junit.Assert.assertTrue(i58 == 0);
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test149");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i9 = fixedOrderComparator8.getUnknownObjectBehavior();
        try {
            fixedOrderComparator8.setUnknownObjectBehavior((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i9 == 2);
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test150");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj17 = null;
        boolean b18 = fixedOrderComparator7.add(obj17);
        java.lang.Object[] obj_array25 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array25);
        fixedOrderComparator26.setUnknownObjectBehavior(0);
        boolean b30 = fixedOrderComparator26.add((java.lang.Object) 1.0f);
        boolean b32 = fixedOrderComparator26.add((java.lang.Object) 1.0f);
        boolean b33 = fixedOrderComparator26.isLocked();
        boolean b34 = fixedOrderComparator26.isLocked();
        boolean b35 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator26);
        java.lang.Object[] obj_array42 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        boolean b45 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator44);
        java.lang.Object obj46 = null;
        java.lang.Object[] obj_array53 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array53);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array53);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array53);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array53);
        java.lang.Object[] obj_array64 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array64);
        fixedOrderComparator66.setUnknownObjectBehavior((int) (short) 0);
        int i69 = fixedOrderComparator66.getUnknownObjectBehavior();
        java.lang.Object obj71 = null;
        boolean b72 = fixedOrderComparator66.addAsEqual((java.lang.Object) 10.0f, obj71);
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator();
        int i74 = fixedOrderComparator73.getUnknownObjectBehavior();
        java.lang.Object[] obj_array81 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array81);
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator(obj_array81);
        collections.comparators.FixedOrderComparator fixedOrderComparator84 = new collections.comparators.FixedOrderComparator(obj_array81);
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array81);
        boolean b86 = fixedOrderComparator73.add((java.lang.Object) fixedOrderComparator85);
        fixedOrderComparator73.setUnknownObjectBehavior(0);
        boolean b89 = fixedOrderComparator73.isLocked();
        int i91 = fixedOrderComparator66.compare((java.lang.Object) fixedOrderComparator73, (java.lang.Object) 2);
        boolean b92 = fixedOrderComparator57.add((java.lang.Object) fixedOrderComparator73);
        try {
            boolean b93 = fixedOrderComparator44.addAsEqual(obj46, (java.lang.Object) fixedOrderComparator57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertNotNull(obj_array25);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertNotNull(obj_array53);
        org.junit.Assert.assertNotNull(obj_array64);
        org.junit.Assert.assertTrue(i69 == 0);
        org.junit.Assert.assertTrue(b72 == true);
        org.junit.Assert.assertTrue(i74 == 2);
        org.junit.Assert.assertNotNull(obj_array81);
        org.junit.Assert.assertTrue(b86 == true);
        org.junit.Assert.assertTrue(b89 == false);
        org.junit.Assert.assertTrue(i91 == 0);
        org.junit.Assert.assertTrue(b92 == true);
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test151");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array14);
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array14);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array14);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array14);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array14);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array14);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array14);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        fixedOrderComparator30.setUnknownObjectBehavior(0);
        boolean b34 = fixedOrderComparator30.add((java.lang.Object) 1.0f);
        java.lang.Object obj35 = null;
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        fixedOrderComparator43.setUnknownObjectBehavior(0);
        boolean b47 = fixedOrderComparator43.add((java.lang.Object) 1.0f);
        int i48 = fixedOrderComparator43.getUnknownObjectBehavior();
        int i49 = fixedOrderComparator30.compare(obj35, (java.lang.Object) i48);
        int i50 = fixedOrderComparator30.getUnknownObjectBehavior();
        boolean b51 = fixedOrderComparator30.isLocked();
        java.lang.Object[] obj_array58 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array58);
        fixedOrderComparator60.setUnknownObjectBehavior((int) (short) 0);
        int i63 = fixedOrderComparator60.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator64.setUnknownObjectBehavior(0);
        int i67 = fixedOrderComparator64.getUnknownObjectBehavior();
        int i68 = fixedOrderComparator30.compare((java.lang.Object) i63, (java.lang.Object) fixedOrderComparator64);
        int i69 = fixedOrderComparator30.getUnknownObjectBehavior();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Object obj71 = null;
        int i72 = fixedOrderComparator30.compare(obj70, obj71);
        try {
            boolean b73 = fixedOrderComparator7.addAsEqual((java.lang.Object) fixedOrderComparator22, obj70);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertTrue(i48 == 0);
        org.junit.Assert.assertTrue(i49 == (-1));
        org.junit.Assert.assertTrue(i50 == 0);
        org.junit.Assert.assertTrue(b51 == true);
        org.junit.Assert.assertNotNull(obj_array58);
        org.junit.Assert.assertTrue(i63 == 0);
        org.junit.Assert.assertTrue(i67 == 0);
        org.junit.Assert.assertTrue(i68 == 1);
        org.junit.Assert.assertTrue(i69 == 0);
        org.junit.Assert.assertTrue(i72 == 0);
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test152");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b6 = fixedOrderComparator0.isLocked();
        int i7 = fixedOrderComparator0.getUnknownObjectBehavior();
        try {
            fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b6 == false);
        org.junit.Assert.assertTrue(i7 == 0);
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test153");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b13 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        fixedOrderComparator7.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b31 = fixedOrderComparator7.add((java.lang.Object) obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b33 = fixedOrderComparator32.isLocked();
        try {
            fixedOrderComparator32.setUnknownObjectBehavior((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(b33 == false);
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test154");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        int i10 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        fixedOrderComparator19.setUnknownObjectBehavior((int) (short) 0);
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        boolean b23 = fixedOrderComparator7.add((java.lang.Object) i22);
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        fixedOrderComparator31.setUnknownObjectBehavior(0);
        boolean b35 = fixedOrderComparator31.add((java.lang.Object) 1.0f);
        boolean b37 = fixedOrderComparator31.add((java.lang.Object) 1.0f);
        fixedOrderComparator31.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array46 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array46);
        boolean b55 = fixedOrderComparator31.add((java.lang.Object) obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array46);
        boolean b57 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator56);
        java.lang.Object[] obj_array64 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array64);
        java.lang.Object[] obj_array73 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator74 = new collections.comparators.FixedOrderComparator(obj_array73);
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array73);
        fixedOrderComparator75.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array84 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array84);
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array84);
        int i88 = fixedOrderComparator75.compare((java.lang.Object) fixedOrderComparator86, (java.lang.Object) (-1.0d));
        boolean b89 = fixedOrderComparator66.add((java.lang.Object) fixedOrderComparator75);
        java.lang.Object obj90 = null;
        try {
            int i91 = fixedOrderComparator56.compare((java.lang.Object) fixedOrderComparator66, obj90);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i10 == 2);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertTrue(b55 == true);
        org.junit.Assert.assertTrue(b57 == true);
        org.junit.Assert.assertNotNull(obj_array64);
        org.junit.Assert.assertNotNull(obj_array73);
        org.junit.Assert.assertNotNull(obj_array84);
        org.junit.Assert.assertTrue(i88 == 0);
        org.junit.Assert.assertTrue(b89 == true);
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test155");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        int i27 = fixedOrderComparator26.getUnknownObjectBehavior();
        int i28 = fixedOrderComparator26.getUnknownObjectBehavior();
        boolean b29 = fixedOrderComparator26.isLocked();
        int i30 = fixedOrderComparator26.getUnknownObjectBehavior();
        int i32 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator26, (java.lang.Object) 1L);
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        boolean b45 = fixedOrderComparator41.add((java.lang.Object) 1.0f);
        int i46 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i47 = fixedOrderComparator41.getUnknownObjectBehavior();
        boolean b48 = fixedOrderComparator41.isLocked();
        try {
            int i49 = fixedOrderComparator26.compare((java.lang.Object) "hi!", (java.lang.Object) fixedOrderComparator41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(i27 == 2);
        org.junit.Assert.assertTrue(i28 == 2);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertTrue(i30 == 2);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b48 == false);
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test156");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        boolean b27 = fixedOrderComparator7.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        boolean b32 = fixedOrderComparator29.isLocked();
        boolean b33 = fixedOrderComparator29.isLocked();
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        boolean b45 = fixedOrderComparator41.add((java.lang.Object) 1.0f);
        boolean b47 = fixedOrderComparator41.add((java.lang.Object) 1.0f);
        int i49 = fixedOrderComparator29.compare((java.lang.Object) fixedOrderComparator41, (java.lang.Object) 1.0d);
        int i50 = fixedOrderComparator29.getUnknownObjectBehavior();
        try {
            boolean b51 = fixedOrderComparator7.addAsEqual((java.lang.Object) (byte) -1, (java.lang.Object) i50);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(b47 == false);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertTrue(i50 == 0);
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test157");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        int i27 = fixedOrderComparator26.getUnknownObjectBehavior();
        int i28 = fixedOrderComparator26.getUnknownObjectBehavior();
        boolean b29 = fixedOrderComparator26.isLocked();
        int i30 = fixedOrderComparator26.getUnknownObjectBehavior();
        int i32 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator26, (java.lang.Object) 1L);
        java.lang.Object[] obj_array39 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array39);
        boolean b42 = fixedOrderComparator40.add((java.lang.Object) (-1.0f));
        fixedOrderComparator40.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array51 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array51);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array51);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array51);
        int i55 = fixedOrderComparator54.getUnknownObjectBehavior();
        boolean b56 = fixedOrderComparator54.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array64 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array64);
        boolean b67 = fixedOrderComparator65.add((java.lang.Object) (-1.0f));
        int i68 = fixedOrderComparator65.getUnknownObjectBehavior();
        java.lang.Object[] obj_array75 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array75);
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array75);
        fixedOrderComparator77.setUnknownObjectBehavior((int) (short) 0);
        int i80 = fixedOrderComparator77.getUnknownObjectBehavior();
        boolean b81 = fixedOrderComparator65.add((java.lang.Object) i80);
        boolean b82 = fixedOrderComparator57.add((java.lang.Object) fixedOrderComparator65);
        int i83 = fixedOrderComparator40.compare((java.lang.Object) b56, (java.lang.Object) fixedOrderComparator57);
        java.lang.Object[] obj_array91 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator92 = new collections.comparators.FixedOrderComparator(obj_array91);
        collections.comparators.FixedOrderComparator fixedOrderComparator93 = new collections.comparators.FixedOrderComparator(obj_array91);
        collections.comparators.FixedOrderComparator fixedOrderComparator94 = new collections.comparators.FixedOrderComparator(obj_array91);
        collections.comparators.FixedOrderComparator fixedOrderComparator95 = new collections.comparators.FixedOrderComparator(obj_array91);
        java.lang.Object[] obj_array96 = new java.lang.Object[] { fixedOrderComparator57, (byte) 10, obj_array91 };
        collections.comparators.FixedOrderComparator fixedOrderComparator97 = new collections.comparators.FixedOrderComparator(obj_array91);
        collections.comparators.FixedOrderComparator fixedOrderComparator98 = new collections.comparators.FixedOrderComparator(obj_array91);
        boolean b99 = fixedOrderComparator26.add((java.lang.Object) fixedOrderComparator98);
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(i27 == 2);
        org.junit.Assert.assertTrue(i28 == 2);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertTrue(i30 == 2);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertNotNull(obj_array39);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertNotNull(obj_array51);
        org.junit.Assert.assertTrue(i55 == 2);
        org.junit.Assert.assertTrue(b56 == false);
        org.junit.Assert.assertNotNull(obj_array64);
        org.junit.Assert.assertTrue(b67 == true);
        org.junit.Assert.assertTrue(i68 == 2);
        org.junit.Assert.assertNotNull(obj_array75);
        org.junit.Assert.assertTrue(i80 == 0);
        org.junit.Assert.assertTrue(b81 == false);
        org.junit.Assert.assertTrue(b82 == true);
        org.junit.Assert.assertTrue(i83 == 0);
        org.junit.Assert.assertNotNull(obj_array91);
        org.junit.Assert.assertNotNull(obj_array96);
        org.junit.Assert.assertTrue(b99 == true);
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test158");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        fixedOrderComparator31.setUnknownObjectBehavior((int) (short) 0);
        int i34 = fixedOrderComparator31.getUnknownObjectBehavior();
        int i35 = fixedOrderComparator31.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        fixedOrderComparator43.setUnknownObjectBehavior(0);
        boolean b47 = fixedOrderComparator43.add((java.lang.Object) 1.0f);
        int i48 = fixedOrderComparator43.getUnknownObjectBehavior();
        boolean b49 = fixedOrderComparator43.isLocked();
        java.lang.Object[] obj_array50 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array50);
        java.lang.Object[] obj_array52 = new java.lang.Object[] { fixedOrderComparator51 };
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array52);
        java.lang.Object[] obj_array61 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array61);
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array61);
        int i64 = fixedOrderComparator43.compare((java.lang.Object) fixedOrderComparator54, (java.lang.Object) obj_array61);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array61);
        try {
            boolean b66 = fixedOrderComparator12.addAsEqual((java.lang.Object) fixedOrderComparator31, (java.lang.Object) obj_array61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i34 == 0);
        org.junit.Assert.assertTrue(i35 == 0);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertTrue(i48 == 0);
        org.junit.Assert.assertTrue(b49 == false);
        org.junit.Assert.assertNotNull(obj_array50);
        org.junit.Assert.assertNotNull(obj_array52);
        org.junit.Assert.assertNotNull(obj_array61);
        org.junit.Assert.assertTrue(i64 == 0);
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test159");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj18 = null;
        int i19 = fixedOrderComparator10.compare((java.lang.Object) 1.0d, obj18);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        int i32 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b34 = fixedOrderComparator28.addAsEqual((java.lang.Object) i32, (java.lang.Object) (short) 1);
        int i35 = fixedOrderComparator28.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        boolean b44 = fixedOrderComparator43.isLocked();
        boolean b45 = fixedOrderComparator28.add((java.lang.Object) fixedOrderComparator43);
        int i47 = fixedOrderComparator10.compare((java.lang.Object) fixedOrderComparator28, (java.lang.Object) 1L);
        boolean b48 = fixedOrderComparator10.isLocked();
        java.lang.Object[] obj_array56 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array56);
        java.lang.Object[] obj_array67 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array67);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array67);
        fixedOrderComparator69.setUnknownObjectBehavior((int) (short) 0);
        int i72 = fixedOrderComparator69.getUnknownObjectBehavior();
        java.lang.Object obj74 = null;
        boolean b75 = fixedOrderComparator69.addAsEqual((java.lang.Object) 10.0f, obj74);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator();
        int i77 = fixedOrderComparator76.getUnknownObjectBehavior();
        java.lang.Object[] obj_array84 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array84);
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array84);
        collections.comparators.FixedOrderComparator fixedOrderComparator87 = new collections.comparators.FixedOrderComparator(obj_array84);
        collections.comparators.FixedOrderComparator fixedOrderComparator88 = new collections.comparators.FixedOrderComparator(obj_array84);
        boolean b89 = fixedOrderComparator76.add((java.lang.Object) fixedOrderComparator88);
        fixedOrderComparator76.setUnknownObjectBehavior(0);
        boolean b92 = fixedOrderComparator76.isLocked();
        int i94 = fixedOrderComparator69.compare((java.lang.Object) fixedOrderComparator76, (java.lang.Object) 2);
        boolean b95 = fixedOrderComparator60.add((java.lang.Object) fixedOrderComparator76);
        int i96 = fixedOrderComparator76.getUnknownObjectBehavior();
        try {
            boolean b97 = fixedOrderComparator10.addAsEqual((java.lang.Object) (-1), (java.lang.Object) i96);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertNotNull(obj_array56);
        org.junit.Assert.assertNotNull(obj_array67);
        org.junit.Assert.assertTrue(i72 == 0);
        org.junit.Assert.assertTrue(b75 == true);
        org.junit.Assert.assertTrue(i77 == 2);
        org.junit.Assert.assertNotNull(obj_array84);
        org.junit.Assert.assertTrue(b89 == true);
        org.junit.Assert.assertTrue(b92 == false);
        org.junit.Assert.assertTrue(i94 == 0);
        org.junit.Assert.assertTrue(b95 == true);
        org.junit.Assert.assertTrue(i96 == 0);
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test160");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        int i46 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Object obj48 = null;
        int i49 = fixedOrderComparator7.compare(obj47, obj48);
        java.lang.Object[] obj_array56 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array56);
        java.lang.Object[] obj_array64 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array64);
        int i68 = fixedOrderComparator7.compare((java.lang.Object) obj_array56, (java.lang.Object) fixedOrderComparator67);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator();
        int i70 = fixedOrderComparator69.getUnknownObjectBehavior();
        java.lang.Object[] obj_array77 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator(obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array77);
        boolean b82 = fixedOrderComparator69.add((java.lang.Object) fixedOrderComparator81);
        boolean b83 = fixedOrderComparator81.isLocked();
        try {
            boolean b84 = fixedOrderComparator7.add((java.lang.Object) b83);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertNotNull(obj_array56);
        org.junit.Assert.assertNotNull(obj_array64);
        org.junit.Assert.assertTrue(i68 == 0);
        org.junit.Assert.assertTrue(i70 == 2);
        org.junit.Assert.assertNotNull(obj_array77);
        org.junit.Assert.assertTrue(b82 == true);
        org.junit.Assert.assertTrue(b83 == false);
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test161");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj17 = null;
        boolean b18 = fixedOrderComparator7.add(obj17);
        java.lang.Object[] obj_array25 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array25);
        fixedOrderComparator26.setUnknownObjectBehavior(0);
        boolean b30 = fixedOrderComparator26.add((java.lang.Object) 1.0f);
        boolean b32 = fixedOrderComparator26.add((java.lang.Object) 1.0f);
        boolean b33 = fixedOrderComparator26.isLocked();
        boolean b34 = fixedOrderComparator26.isLocked();
        boolean b35 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator26);
        java.lang.Object[] obj_array42 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        boolean b45 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator44);
        java.lang.Object[] obj_array52 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator55.setUnknownObjectBehavior(0);
        int i58 = fixedOrderComparator55.getUnknownObjectBehavior();
        boolean b60 = fixedOrderComparator54.addAsEqual((java.lang.Object) i58, (java.lang.Object) (short) 1);
        int i61 = fixedOrderComparator54.getUnknownObjectBehavior();
        fixedOrderComparator54.setUnknownObjectBehavior((int) (byte) 0);
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator();
        int i65 = fixedOrderComparator64.getUnknownObjectBehavior();
        java.lang.Object[] obj_array72 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator(obj_array72);
        collections.comparators.FixedOrderComparator fixedOrderComparator74 = new collections.comparators.FixedOrderComparator(obj_array72);
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array72);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array72);
        boolean b77 = fixedOrderComparator64.add((java.lang.Object) fixedOrderComparator76);
        fixedOrderComparator64.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array86 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator87 = new collections.comparators.FixedOrderComparator(obj_array86);
        collections.comparators.FixedOrderComparator fixedOrderComparator88 = new collections.comparators.FixedOrderComparator(obj_array86);
        collections.comparators.FixedOrderComparator fixedOrderComparator89 = new collections.comparators.FixedOrderComparator(obj_array86);
        collections.comparators.FixedOrderComparator fixedOrderComparator90 = new collections.comparators.FixedOrderComparator(obj_array86);
        collections.comparators.FixedOrderComparator fixedOrderComparator91 = new collections.comparators.FixedOrderComparator(obj_array86);
        collections.comparators.FixedOrderComparator fixedOrderComparator92 = new collections.comparators.FixedOrderComparator(obj_array86);
        java.lang.Object[] obj_array93 = new java.lang.Object[] { fixedOrderComparator64, obj_array86 };
        collections.comparators.FixedOrderComparator fixedOrderComparator94 = new collections.comparators.FixedOrderComparator(obj_array86);
        collections.comparators.FixedOrderComparator fixedOrderComparator95 = new collections.comparators.FixedOrderComparator(obj_array86);
        collections.comparators.FixedOrderComparator fixedOrderComparator96 = new collections.comparators.FixedOrderComparator(obj_array86);
        collections.comparators.FixedOrderComparator fixedOrderComparator97 = new collections.comparators.FixedOrderComparator(obj_array86);
        try {
            boolean b98 = fixedOrderComparator44.addAsEqual((java.lang.Object) fixedOrderComparator54, (java.lang.Object) fixedOrderComparator97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertNotNull(obj_array25);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertNotNull(obj_array52);
        org.junit.Assert.assertTrue(i58 == 0);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertTrue(i61 == 2);
        org.junit.Assert.assertTrue(i65 == 2);
        org.junit.Assert.assertNotNull(obj_array72);
        org.junit.Assert.assertTrue(b77 == true);
        org.junit.Assert.assertNotNull(obj_array86);
        org.junit.Assert.assertNotNull(obj_array93);
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test162");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        try {
            fixedOrderComparator7.setUnknownObjectBehavior(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test163");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array18 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        fixedOrderComparator19.setUnknownObjectBehavior(0);
        boolean b23 = fixedOrderComparator19.add((java.lang.Object) 1.0f);
        java.lang.Object obj24 = null;
        java.lang.Object[] obj_array31 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        fixedOrderComparator32.setUnknownObjectBehavior(0);
        boolean b36 = fixedOrderComparator32.add((java.lang.Object) 1.0f);
        int i37 = fixedOrderComparator32.getUnknownObjectBehavior();
        int i38 = fixedOrderComparator19.compare(obj24, (java.lang.Object) i37);
        boolean b39 = fixedOrderComparator19.isLocked();
        java.lang.Object[] obj_array40 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        java.lang.Object[] obj_array42 = new java.lang.Object[] { fixedOrderComparator41 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array42);
        try {
            int i48 = fixedOrderComparator11.compare((java.lang.Object) b39, (java.lang.Object) fixedOrderComparator47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(i37 == 0);
        org.junit.Assert.assertTrue(i38 == (-1));
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertNotNull(obj_array42);
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test164");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b13 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        fixedOrderComparator7.setUnknownObjectBehavior(1);
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator16.setUnknownObjectBehavior(0);
        int i19 = fixedOrderComparator16.getUnknownObjectBehavior();
        fixedOrderComparator16.setUnknownObjectBehavior((int) (byte) 0);
        fixedOrderComparator16.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        fixedOrderComparator31.setUnknownObjectBehavior(0);
        boolean b35 = fixedOrderComparator31.add((java.lang.Object) 1.0f);
        java.lang.Object obj36 = null;
        java.lang.Object[] obj_array43 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array43);
        fixedOrderComparator44.setUnknownObjectBehavior(0);
        boolean b48 = fixedOrderComparator44.add((java.lang.Object) 1.0f);
        int i49 = fixedOrderComparator44.getUnknownObjectBehavior();
        int i50 = fixedOrderComparator31.compare(obj36, (java.lang.Object) i49);
        boolean b51 = fixedOrderComparator31.isLocked();
        int i52 = fixedOrderComparator7.compare((java.lang.Object) 1, (java.lang.Object) b51);
        java.lang.Object[] obj_array59 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array59);
        fixedOrderComparator60.setUnknownObjectBehavior(0);
        boolean b64 = fixedOrderComparator60.add((java.lang.Object) 1.0f);
        int i65 = fixedOrderComparator60.getUnknownObjectBehavior();
        boolean b66 = fixedOrderComparator60.isLocked();
        java.lang.Object[] obj_array73 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator74 = new collections.comparators.FixedOrderComparator(obj_array73);
        fixedOrderComparator74.setUnknownObjectBehavior(0);
        boolean b78 = fixedOrderComparator74.add((java.lang.Object) 1.0f);
        int i79 = fixedOrderComparator74.getUnknownObjectBehavior();
        boolean b81 = fixedOrderComparator74.add((java.lang.Object) 10L);
        try {
            boolean b82 = fixedOrderComparator7.addAsEqual((java.lang.Object) b66, (java.lang.Object) 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertNotNull(obj_array43);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertTrue(i50 == (-1));
        org.junit.Assert.assertTrue(b51 == true);
        org.junit.Assert.assertTrue(i52 == 0);
        org.junit.Assert.assertNotNull(obj_array59);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue(i65 == 0);
        org.junit.Assert.assertTrue(b66 == false);
        org.junit.Assert.assertNotNull(obj_array73);
        org.junit.Assert.assertTrue(b78 == true);
        org.junit.Assert.assertTrue(i79 == 0);
        org.junit.Assert.assertTrue(b81 == true);
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test165");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        boolean b14 = fixedOrderComparator10.add((java.lang.Object) 1.0f);
        java.lang.Object obj15 = null;
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        fixedOrderComparator23.setUnknownObjectBehavior(0);
        boolean b27 = fixedOrderComparator23.add((java.lang.Object) 1.0f);
        int i28 = fixedOrderComparator23.getUnknownObjectBehavior();
        int i29 = fixedOrderComparator10.compare(obj15, (java.lang.Object) i28);
        int i30 = fixedOrderComparator10.getUnknownObjectBehavior();
        boolean b31 = fixedOrderComparator10.isLocked();
        java.lang.Object[] obj_array38 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array38);
        fixedOrderComparator40.setUnknownObjectBehavior((int) (short) 0);
        int i43 = fixedOrderComparator40.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator44.setUnknownObjectBehavior(0);
        int i47 = fixedOrderComparator44.getUnknownObjectBehavior();
        int i48 = fixedOrderComparator10.compare((java.lang.Object) i43, (java.lang.Object) fixedOrderComparator44);
        java.lang.Object[] obj_array55 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        fixedOrderComparator56.setUnknownObjectBehavior(0);
        boolean b60 = fixedOrderComparator56.add((java.lang.Object) 1.0f);
        java.lang.Object obj61 = null;
        java.lang.Object[] obj_array68 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array68);
        fixedOrderComparator69.setUnknownObjectBehavior(0);
        boolean b73 = fixedOrderComparator69.add((java.lang.Object) 1.0f);
        int i74 = fixedOrderComparator69.getUnknownObjectBehavior();
        int i75 = fixedOrderComparator56.compare(obj61, (java.lang.Object) i74);
        int i76 = fixedOrderComparator56.getUnknownObjectBehavior();
        boolean b77 = fixedOrderComparator56.isLocked();
        java.lang.Object[] obj_array84 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array84);
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array84);
        fixedOrderComparator86.setUnknownObjectBehavior((int) (short) 0);
        int i89 = fixedOrderComparator86.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator90 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator90.setUnknownObjectBehavior(0);
        int i93 = fixedOrderComparator90.getUnknownObjectBehavior();
        int i94 = fixedOrderComparator56.compare((java.lang.Object) i89, (java.lang.Object) fixedOrderComparator90);
        int i96 = fixedOrderComparator10.compare((java.lang.Object) i89, (java.lang.Object) 2);
        boolean b97 = fixedOrderComparator0.add((java.lang.Object) 2);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertTrue(i29 == (-1));
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertNotNull(obj_array38);
        org.junit.Assert.assertTrue(i43 == 0);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(i48 == 1);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertNotNull(obj_array68);
        org.junit.Assert.assertTrue(b73 == true);
        org.junit.Assert.assertTrue(i74 == 0);
        org.junit.Assert.assertTrue(i75 == (-1));
        org.junit.Assert.assertTrue(i76 == 0);
        org.junit.Assert.assertTrue(b77 == true);
        org.junit.Assert.assertNotNull(obj_array84);
        org.junit.Assert.assertTrue(i89 == 0);
        org.junit.Assert.assertTrue(i93 == 0);
        org.junit.Assert.assertTrue(i94 == 1);
        org.junit.Assert.assertTrue(i96 == 1);
        org.junit.Assert.assertTrue(b97 == true);
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test166");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b13 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b14 = fixedOrderComparator7.isLocked();
        boolean b15 = fixedOrderComparator7.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator();
        int i18 = fixedOrderComparator17.getUnknownObjectBehavior();
        boolean b19 = fixedOrderComparator17.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator();
        int i21 = fixedOrderComparator20.getUnknownObjectBehavior();
        boolean b22 = fixedOrderComparator20.isLocked();
        boolean b23 = fixedOrderComparator17.add((java.lang.Object) b22);
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        fixedOrderComparator31.setUnknownObjectBehavior(0);
        boolean b35 = fixedOrderComparator31.add((java.lang.Object) 1.0f);
        java.lang.Object obj36 = null;
        java.lang.Object[] obj_array43 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array43);
        fixedOrderComparator44.setUnknownObjectBehavior(0);
        boolean b48 = fixedOrderComparator44.add((java.lang.Object) 1.0f);
        int i49 = fixedOrderComparator44.getUnknownObjectBehavior();
        int i50 = fixedOrderComparator31.compare(obj36, (java.lang.Object) i49);
        int i51 = fixedOrderComparator31.getUnknownObjectBehavior();
        boolean b52 = fixedOrderComparator31.isLocked();
        java.lang.Object[] obj_array59 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array59);
        fixedOrderComparator61.setUnknownObjectBehavior((int) (short) 0);
        int i64 = fixedOrderComparator61.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator65.setUnknownObjectBehavior(0);
        int i68 = fixedOrderComparator65.getUnknownObjectBehavior();
        int i69 = fixedOrderComparator31.compare((java.lang.Object) i64, (java.lang.Object) fixedOrderComparator65);
        java.lang.Object[] obj_array70 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array70);
        java.lang.Object[] obj_array78 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array78);
        int i82 = fixedOrderComparator81.getUnknownObjectBehavior();
        boolean b83 = fixedOrderComparator81.isLocked();
        int i84 = fixedOrderComparator65.compare((java.lang.Object) fixedOrderComparator71, (java.lang.Object) fixedOrderComparator81);
        boolean b85 = fixedOrderComparator17.add((java.lang.Object) i84);
        int i86 = fixedOrderComparator7.compare((java.lang.Object) (-1.0f), (java.lang.Object) fixedOrderComparator17);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertTrue(b15 == false);
        org.junit.Assert.assertTrue(i18 == 2);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(i21 == 2);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertNotNull(obj_array43);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertTrue(i50 == (-1));
        org.junit.Assert.assertTrue(i51 == 0);
        org.junit.Assert.assertTrue(b52 == true);
        org.junit.Assert.assertNotNull(obj_array59);
        org.junit.Assert.assertTrue(i64 == 0);
        org.junit.Assert.assertTrue(i68 == 0);
        org.junit.Assert.assertTrue(i69 == 1);
        org.junit.Assert.assertNotNull(obj_array70);
        org.junit.Assert.assertNotNull(obj_array78);
        org.junit.Assert.assertTrue(i82 == 2);
        org.junit.Assert.assertTrue(b83 == false);
        org.junit.Assert.assertTrue(i84 == 0);
        org.junit.Assert.assertTrue(b85 == true);
        org.junit.Assert.assertTrue(i86 == 0);
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test167");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator8.isLocked();
        java.lang.Object[] obj_array16 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array16);
        fixedOrderComparator18.setUnknownObjectBehavior((int) (short) 0);
        int i21 = fixedOrderComparator18.getUnknownObjectBehavior();
        int i22 = fixedOrderComparator18.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator23.setUnknownObjectBehavior(0);
        int i26 = fixedOrderComparator23.getUnknownObjectBehavior();
        fixedOrderComparator23.setUnknownObjectBehavior((int) (byte) 0);
        int i29 = fixedOrderComparator23.getUnknownObjectBehavior();
        boolean b30 = fixedOrderComparator18.add((java.lang.Object) i29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator();
        boolean b32 = fixedOrderComparator31.isLocked();
        try {
            int i33 = fixedOrderComparator8.compare((java.lang.Object) i29, (java.lang.Object) fixedOrderComparator31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(i26 == 0);
        org.junit.Assert.assertTrue(i29 == 0);
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertTrue(b32 == false);
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test168");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array9 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b11 = fixedOrderComparator8.add((java.lang.Object) obj_array9);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array9);
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        java.lang.Object[] obj_array27 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array27);
        fixedOrderComparator28.setUnknownObjectBehavior(0);
        boolean b31 = fixedOrderComparator20.add((java.lang.Object) 0);
        fixedOrderComparator20.setUnknownObjectBehavior((int) (short) 0);
        boolean b34 = fixedOrderComparator20.isLocked();
        java.lang.Object[] obj_array41 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array41);
        fixedOrderComparator43.setUnknownObjectBehavior((int) (short) 0);
        int i46 = fixedOrderComparator43.getUnknownObjectBehavior();
        java.lang.Object obj48 = null;
        boolean b49 = fixedOrderComparator43.addAsEqual((java.lang.Object) 10.0f, obj48);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator50.setUnknownObjectBehavior(0);
        int i53 = fixedOrderComparator50.getUnknownObjectBehavior();
        fixedOrderComparator50.setUnknownObjectBehavior((int) (byte) 0);
        boolean b56 = fixedOrderComparator50.isLocked();
        int i57 = fixedOrderComparator50.getUnknownObjectBehavior();
        java.lang.Object[] obj_array64 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array64);
        int i68 = fixedOrderComparator67.getUnknownObjectBehavior();
        int i69 = fixedOrderComparator43.compare((java.lang.Object) fixedOrderComparator50, (java.lang.Object) i68);
        boolean b70 = fixedOrderComparator20.add((java.lang.Object) i69);
        java.lang.Object[] obj_array77 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator(obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array77);
        boolean b80 = fixedOrderComparator79.isLocked();
        boolean b81 = fixedOrderComparator79.isLocked();
        int i82 = fixedOrderComparator79.getUnknownObjectBehavior();
        try {
            boolean b83 = fixedOrderComparator12.addAsEqual((java.lang.Object) b70, (java.lang.Object) i82);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertNotNull(obj_array27);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(i53 == 0);
        org.junit.Assert.assertTrue(b56 == false);
        org.junit.Assert.assertTrue(i57 == 0);
        org.junit.Assert.assertNotNull(obj_array64);
        org.junit.Assert.assertTrue(i68 == 2);
        org.junit.Assert.assertTrue(i69 == 0);
        org.junit.Assert.assertTrue(b70 == false);
        org.junit.Assert.assertNotNull(obj_array77);
        org.junit.Assert.assertTrue(b80 == false);
        org.junit.Assert.assertTrue(b81 == false);
        org.junit.Assert.assertTrue(i82 == 2);
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test169");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b28 = fixedOrderComparator14.add((java.lang.Object) obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array21);
        try {
            fixedOrderComparator30.setUnknownObjectBehavior((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b28 == true);
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test170");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array10);
        java.lang.Object[] obj_array20 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array20);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        fixedOrderComparator31.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array40);
        int i44 = fixedOrderComparator31.compare((java.lang.Object) fixedOrderComparator42, (java.lang.Object) (-1.0d));
        boolean b45 = fixedOrderComparator22.add((java.lang.Object) fixedOrderComparator31);
        boolean b46 = fixedOrderComparator31.isLocked();
        int i47 = fixedOrderComparator31.getUnknownObjectBehavior();
        int i48 = fixedOrderComparator0.compare((java.lang.Object) obj_array10, (java.lang.Object) fixedOrderComparator31);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator49.setUnknownObjectBehavior(0);
        int i52 = fixedOrderComparator49.getUnknownObjectBehavior();
        fixedOrderComparator49.setUnknownObjectBehavior((int) (byte) 0);
        fixedOrderComparator49.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array63 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array63);
        java.lang.Object[] obj_array71 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array71);
        fixedOrderComparator72.setUnknownObjectBehavior(0);
        boolean b75 = fixedOrderComparator64.add((java.lang.Object) 0);
        boolean b76 = fixedOrderComparator64.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator();
        int i78 = fixedOrderComparator77.getUnknownObjectBehavior();
        boolean b79 = fixedOrderComparator64.add((java.lang.Object) i78);
        int i81 = fixedOrderComparator49.compare((java.lang.Object) fixedOrderComparator64, (java.lang.Object) 100);
        try {
            boolean b82 = fixedOrderComparator31.add((java.lang.Object) i81);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(i48 == 0);
        org.junit.Assert.assertTrue(i52 == 0);
        org.junit.Assert.assertNotNull(obj_array63);
        org.junit.Assert.assertNotNull(obj_array71);
        org.junit.Assert.assertTrue(b75 == false);
        org.junit.Assert.assertTrue(b76 == false);
        org.junit.Assert.assertTrue(i78 == 2);
        org.junit.Assert.assertTrue(b79 == true);
        org.junit.Assert.assertTrue(i81 == 0);
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test171");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        java.lang.Object[] obj_array16 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array16);
        java.lang.Object[] obj_array19 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        boolean b21 = fixedOrderComparator18.add((java.lang.Object) obj_array19);
        java.lang.Object[] obj_array28 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        boolean b31 = fixedOrderComparator29.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator32.setUnknownObjectBehavior(0);
        int i35 = fixedOrderComparator32.getUnknownObjectBehavior();
        fixedOrderComparator32.setUnknownObjectBehavior((int) (byte) 0);
        boolean b38 = fixedOrderComparator29.add((java.lang.Object) fixedOrderComparator32);
        try {
            int i39 = fixedOrderComparator7.compare((java.lang.Object) fixedOrderComparator18, (java.lang.Object) fixedOrderComparator29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(i35 == 0);
        org.junit.Assert.assertTrue(b38 == true);
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test172");
        java.lang.Object[] obj_array0 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator1 = new collections.comparators.FixedOrderComparator(obj_array0);
        collections.comparators.FixedOrderComparator fixedOrderComparator2 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator2.setUnknownObjectBehavior(0);
        int i5 = fixedOrderComparator2.getUnknownObjectBehavior();
        java.lang.Object obj6 = null;
        try {
            boolean b7 = fixedOrderComparator1.addAsEqual((java.lang.Object) i5, obj6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array0);
        org.junit.Assert.assertTrue(i5 == 0);
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test173");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i28 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i29 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b30 = fixedOrderComparator7.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertTrue(i29 == 0);
        org.junit.Assert.assertTrue(b30 == true);
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test174");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i11 = fixedOrderComparator10.getUnknownObjectBehavior();
        int i12 = fixedOrderComparator10.getUnknownObjectBehavior();
        boolean b13 = fixedOrderComparator10.isLocked();
        int i14 = fixedOrderComparator10.getUnknownObjectBehavior();
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b27 = fixedOrderComparator10.add((java.lang.Object) obj_array21);
        java.lang.Object[] obj_array34 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array34);
        boolean b37 = fixedOrderComparator35.add((java.lang.Object) (-1.0f));
        fixedOrderComparator35.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array46 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array46);
        int i50 = fixedOrderComparator49.getUnknownObjectBehavior();
        boolean b51 = fixedOrderComparator49.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array59 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array59);
        boolean b62 = fixedOrderComparator60.add((java.lang.Object) (-1.0f));
        int i63 = fixedOrderComparator60.getUnknownObjectBehavior();
        java.lang.Object[] obj_array70 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array70);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array70);
        fixedOrderComparator72.setUnknownObjectBehavior((int) (short) 0);
        int i75 = fixedOrderComparator72.getUnknownObjectBehavior();
        boolean b76 = fixedOrderComparator60.add((java.lang.Object) i75);
        boolean b77 = fixedOrderComparator52.add((java.lang.Object) fixedOrderComparator60);
        int i78 = fixedOrderComparator35.compare((java.lang.Object) b51, (java.lang.Object) fixedOrderComparator52);
        int i79 = fixedOrderComparator52.getUnknownObjectBehavior();
        java.lang.Object[] obj_array86 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator87 = new collections.comparators.FixedOrderComparator(obj_array86);
        collections.comparators.FixedOrderComparator fixedOrderComparator88 = new collections.comparators.FixedOrderComparator(obj_array86);
        collections.comparators.FixedOrderComparator fixedOrderComparator89 = new collections.comparators.FixedOrderComparator(obj_array86);
        collections.comparators.FixedOrderComparator fixedOrderComparator90 = new collections.comparators.FixedOrderComparator(obj_array86);
        int i91 = fixedOrderComparator90.getUnknownObjectBehavior();
        int i92 = fixedOrderComparator90.getUnknownObjectBehavior();
        int i93 = fixedOrderComparator90.getUnknownObjectBehavior();
        try {
            boolean b94 = fixedOrderComparator10.addAsEqual((java.lang.Object) fixedOrderComparator52, (java.lang.Object) fixedOrderComparator90);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 2);
        org.junit.Assert.assertTrue(i12 == 2);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(i14 == 2);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertNotNull(obj_array34);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertTrue(i50 == 2);
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertNotNull(obj_array59);
        org.junit.Assert.assertTrue(b62 == true);
        org.junit.Assert.assertTrue(i63 == 2);
        org.junit.Assert.assertNotNull(obj_array70);
        org.junit.Assert.assertTrue(i75 == 0);
        org.junit.Assert.assertTrue(b76 == false);
        org.junit.Assert.assertTrue(b77 == true);
        org.junit.Assert.assertTrue(i78 == 0);
        org.junit.Assert.assertTrue(i79 == 2);
        org.junit.Assert.assertNotNull(obj_array86);
        org.junit.Assert.assertTrue(i91 == 2);
        org.junit.Assert.assertTrue(i92 == 2);
        org.junit.Assert.assertTrue(i93 == 2);
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test175");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj18 = null;
        int i19 = fixedOrderComparator10.compare((java.lang.Object) 1.0d, obj18);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        int i32 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b34 = fixedOrderComparator28.addAsEqual((java.lang.Object) i32, (java.lang.Object) (short) 1);
        int i35 = fixedOrderComparator28.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        boolean b44 = fixedOrderComparator43.isLocked();
        boolean b45 = fixedOrderComparator28.add((java.lang.Object) fixedOrderComparator43);
        int i47 = fixedOrderComparator10.compare((java.lang.Object) fixedOrderComparator28, (java.lang.Object) 1L);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array54);
        try {
            boolean b59 = fixedOrderComparator10.add((java.lang.Object) obj_array54);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertNotNull(obj_array54);
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test176");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array16 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        fixedOrderComparator17.setUnknownObjectBehavior(0);
        boolean b21 = fixedOrderComparator17.add((java.lang.Object) 1.0f);
        int i22 = fixedOrderComparator17.getUnknownObjectBehavior();
        int i23 = fixedOrderComparator17.getUnknownObjectBehavior();
        boolean b24 = fixedOrderComparator17.isLocked();
        java.lang.Object[] obj_array31 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array31);
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        fixedOrderComparator44.setUnknownObjectBehavior((int) (short) 0);
        int i47 = fixedOrderComparator44.getUnknownObjectBehavior();
        java.lang.Object obj49 = null;
        boolean b50 = fixedOrderComparator44.addAsEqual((java.lang.Object) 10.0f, obj49);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator();
        int i52 = fixedOrderComparator51.getUnknownObjectBehavior();
        java.lang.Object[] obj_array59 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array59);
        boolean b64 = fixedOrderComparator51.add((java.lang.Object) fixedOrderComparator63);
        fixedOrderComparator51.setUnknownObjectBehavior(0);
        boolean b67 = fixedOrderComparator51.isLocked();
        int i69 = fixedOrderComparator44.compare((java.lang.Object) fixedOrderComparator51, (java.lang.Object) 2);
        boolean b70 = fixedOrderComparator35.add((java.lang.Object) fixedOrderComparator51);
        try {
            boolean b71 = fixedOrderComparator7.addAsEqual((java.lang.Object) fixedOrderComparator17, (java.lang.Object) fixedOrderComparator35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(i23 == 0);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertTrue(i52 == 2);
        org.junit.Assert.assertNotNull(obj_array59);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue(b67 == false);
        org.junit.Assert.assertTrue(i69 == 0);
        org.junit.Assert.assertTrue(b70 == true);
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test177");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        int i11 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object obj13 = null;
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) 10.0f, obj13);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        fixedOrderComparator22.setUnknownObjectBehavior(0);
        boolean b26 = fixedOrderComparator22.add((java.lang.Object) 1.0f);
        java.lang.Object obj27 = null;
        java.lang.Object[] obj_array34 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array34);
        fixedOrderComparator35.setUnknownObjectBehavior(0);
        boolean b39 = fixedOrderComparator35.add((java.lang.Object) 1.0f);
        int i40 = fixedOrderComparator35.getUnknownObjectBehavior();
        int i41 = fixedOrderComparator22.compare(obj27, (java.lang.Object) i40);
        int i42 = fixedOrderComparator22.getUnknownObjectBehavior();
        boolean b43 = fixedOrderComparator22.isLocked();
        java.lang.Object[] obj_array50 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array50);
        fixedOrderComparator52.setUnknownObjectBehavior((int) (short) 0);
        int i55 = fixedOrderComparator52.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator56.setUnknownObjectBehavior(0);
        int i59 = fixedOrderComparator56.getUnknownObjectBehavior();
        int i60 = fixedOrderComparator22.compare((java.lang.Object) i55, (java.lang.Object) fixedOrderComparator56);
        int i61 = fixedOrderComparator22.getUnknownObjectBehavior();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Object obj63 = null;
        int i64 = fixedOrderComparator22.compare(obj62, obj63);
        java.lang.Object[] obj_array71 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array71);
        java.lang.Object[] obj_array79 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array79);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array79);
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array79);
        int i83 = fixedOrderComparator22.compare((java.lang.Object) obj_array71, (java.lang.Object) fixedOrderComparator82);
        boolean b84 = fixedOrderComparator8.add((java.lang.Object) i83);
        int i85 = fixedOrderComparator8.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertNotNull(obj_array34);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i41 == (-1));
        org.junit.Assert.assertTrue(i42 == 0);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertNotNull(obj_array50);
        org.junit.Assert.assertTrue(i55 == 0);
        org.junit.Assert.assertTrue(i59 == 0);
        org.junit.Assert.assertTrue(i60 == 1);
        org.junit.Assert.assertTrue(i61 == 0);
        org.junit.Assert.assertTrue(i64 == 0);
        org.junit.Assert.assertNotNull(obj_array71);
        org.junit.Assert.assertNotNull(obj_array79);
        org.junit.Assert.assertTrue(i83 == 0);
        org.junit.Assert.assertTrue(b84 == false);
        org.junit.Assert.assertTrue(i85 == 0);
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test178");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b12 = fixedOrderComparator10.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        boolean b19 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object obj21 = null;
        int i22 = fixedOrderComparator13.compare((java.lang.Object) 1.0d, obj21);
        boolean b23 = fixedOrderComparator13.isLocked();
        boolean b24 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator13);
        boolean b25 = fixedOrderComparator13.isLocked();
        boolean b26 = fixedOrderComparator13.isLocked();
        int i27 = fixedOrderComparator13.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator28.setUnknownObjectBehavior(0);
        int i31 = fixedOrderComparator28.getUnknownObjectBehavior();
        fixedOrderComparator28.setUnknownObjectBehavior((int) (byte) 0);
        int i34 = fixedOrderComparator28.getUnknownObjectBehavior();
        int i35 = fixedOrderComparator28.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array42);
        int i46 = fixedOrderComparator45.getUnknownObjectBehavior();
        boolean b47 = fixedOrderComparator45.isLocked();
        try {
            boolean b48 = fixedOrderComparator13.addAsEqual((java.lang.Object) i35, (java.lang.Object) b47);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(i31 == 0);
        org.junit.Assert.assertTrue(i34 == 0);
        org.junit.Assert.assertTrue(i35 == 0);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(i46 == 2);
        org.junit.Assert.assertTrue(b47 == false);
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test179");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj18 = null;
        int i19 = fixedOrderComparator10.compare((java.lang.Object) 1.0d, obj18);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        int i32 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b34 = fixedOrderComparator28.addAsEqual((java.lang.Object) i32, (java.lang.Object) (short) 1);
        int i35 = fixedOrderComparator28.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        boolean b44 = fixedOrderComparator43.isLocked();
        boolean b45 = fixedOrderComparator28.add((java.lang.Object) fixedOrderComparator43);
        int i47 = fixedOrderComparator10.compare((java.lang.Object) fixedOrderComparator28, (java.lang.Object) 1L);
        boolean b48 = fixedOrderComparator10.isLocked();
        try {
            fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b48 == true);
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test180");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object[] obj_array23 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator25.setUnknownObjectBehavior(0);
        int i28 = fixedOrderComparator25.getUnknownObjectBehavior();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array35);
        java.lang.Object[] obj_array45 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array45);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array45);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array54);
        fixedOrderComparator56.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array65 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array65);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array65);
        int i69 = fixedOrderComparator56.compare((java.lang.Object) fixedOrderComparator67, (java.lang.Object) (-1.0d));
        boolean b70 = fixedOrderComparator47.add((java.lang.Object) fixedOrderComparator56);
        boolean b71 = fixedOrderComparator56.isLocked();
        int i72 = fixedOrderComparator56.getUnknownObjectBehavior();
        int i73 = fixedOrderComparator25.compare((java.lang.Object) obj_array35, (java.lang.Object) fixedOrderComparator56);
        try {
            int i74 = fixedOrderComparator7.compare((java.lang.Object) fixedOrderComparator24, (java.lang.Object) fixedOrderComparator25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertNotNull(obj_array23);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertNotNull(obj_array45);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertNotNull(obj_array65);
        org.junit.Assert.assertTrue(i69 == 0);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertTrue(b71 == true);
        org.junit.Assert.assertTrue(i72 == 0);
        org.junit.Assert.assertTrue(i73 == 0);
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test181");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        boolean b21 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array28 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator31.setUnknownObjectBehavior(0);
        int i34 = fixedOrderComparator31.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator30.addAsEqual((java.lang.Object) i34, (java.lang.Object) (short) 1);
        int i37 = fixedOrderComparator30.getUnknownObjectBehavior();
        java.lang.Object[] obj_array44 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array44);
        boolean b46 = fixedOrderComparator45.isLocked();
        boolean b47 = fixedOrderComparator30.add((java.lang.Object) fixedOrderComparator45);
        int i48 = fixedOrderComparator30.getUnknownObjectBehavior();
        java.lang.Object[] obj_array55 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        fixedOrderComparator56.setUnknownObjectBehavior(0);
        boolean b60 = fixedOrderComparator56.add((java.lang.Object) 1.0f);
        int i61 = fixedOrderComparator56.getUnknownObjectBehavior();
        boolean b62 = fixedOrderComparator56.isLocked();
        int i63 = fixedOrderComparator0.compare((java.lang.Object) i48, (java.lang.Object) fixedOrderComparator56);
        java.lang.Object[] obj_array70 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array70);
        fixedOrderComparator71.setUnknownObjectBehavior(0);
        boolean b75 = fixedOrderComparator71.add((java.lang.Object) 1.0f);
        int i76 = fixedOrderComparator71.getUnknownObjectBehavior();
        boolean b78 = fixedOrderComparator71.add((java.lang.Object) 10L);
        java.lang.Object[] obj_array85 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array85);
        collections.comparators.FixedOrderComparator fixedOrderComparator87 = new collections.comparators.FixedOrderComparator(obj_array85);
        collections.comparators.FixedOrderComparator fixedOrderComparator88 = new collections.comparators.FixedOrderComparator(obj_array85);
        collections.comparators.FixedOrderComparator fixedOrderComparator89 = new collections.comparators.FixedOrderComparator(obj_array85);
        int i90 = fixedOrderComparator89.getUnknownObjectBehavior();
        try {
            boolean b91 = fixedOrderComparator0.addAsEqual((java.lang.Object) 10L, (java.lang.Object) fixedOrderComparator89);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(i34 == 0);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(i37 == 2);
        org.junit.Assert.assertNotNull(obj_array44);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertTrue(i48 == 2);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertTrue(i61 == 0);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertTrue(i63 == 0);
        org.junit.Assert.assertNotNull(obj_array70);
        org.junit.Assert.assertTrue(b75 == true);
        org.junit.Assert.assertTrue(i76 == 0);
        org.junit.Assert.assertTrue(b78 == true);
        org.junit.Assert.assertNotNull(obj_array85);
        org.junit.Assert.assertTrue(i90 == 2);
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test182");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        boolean b14 = fixedOrderComparator12.isLocked();
        fixedOrderComparator12.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array23 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array23);
        int i27 = fixedOrderComparator26.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator26.isLocked();
        int i29 = fixedOrderComparator26.getUnknownObjectBehavior();
        java.lang.Object[] obj_array36 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        fixedOrderComparator37.setUnknownObjectBehavior(0);
        boolean b41 = fixedOrderComparator37.add((java.lang.Object) 1.0f);
        java.lang.Object obj42 = null;
        java.lang.Object[] obj_array49 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array49);
        fixedOrderComparator50.setUnknownObjectBehavior(0);
        boolean b54 = fixedOrderComparator50.add((java.lang.Object) 1.0f);
        int i55 = fixedOrderComparator50.getUnknownObjectBehavior();
        int i56 = fixedOrderComparator37.compare(obj42, (java.lang.Object) i55);
        int i57 = fixedOrderComparator37.getUnknownObjectBehavior();
        boolean b58 = fixedOrderComparator37.isLocked();
        java.lang.Object[] obj_array65 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array65);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array65);
        fixedOrderComparator67.setUnknownObjectBehavior((int) (short) 0);
        int i70 = fixedOrderComparator67.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator71.setUnknownObjectBehavior(0);
        int i74 = fixedOrderComparator71.getUnknownObjectBehavior();
        int i75 = fixedOrderComparator37.compare((java.lang.Object) i70, (java.lang.Object) fixedOrderComparator71);
        try {
            boolean b76 = fixedOrderComparator12.addAsEqual((java.lang.Object) fixedOrderComparator26, (java.lang.Object) fixedOrderComparator71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertNotNull(obj_array23);
        org.junit.Assert.assertTrue(i27 == 2);
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertTrue(i29 == 2);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertNotNull(obj_array49);
        org.junit.Assert.assertTrue(b54 == true);
        org.junit.Assert.assertTrue(i55 == 0);
        org.junit.Assert.assertTrue(i56 == (-1));
        org.junit.Assert.assertTrue(i57 == 0);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertNotNull(obj_array65);
        org.junit.Assert.assertTrue(i70 == 0);
        org.junit.Assert.assertTrue(i74 == 0);
        org.junit.Assert.assertTrue(i75 == 1);
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test183");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b6 = fixedOrderComparator0.isLocked();
        int i7 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i8 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i9 = fixedOrderComparator0.getUnknownObjectBehavior();
        try {
            fixedOrderComparator0.setUnknownObjectBehavior((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b6 == false);
        org.junit.Assert.assertTrue(i7 == 0);
        org.junit.Assert.assertTrue(i8 == 0);
        org.junit.Assert.assertTrue(i9 == 0);
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test184");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator8.isLocked();
        java.lang.Object[] obj_array16 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        java.lang.Object[] obj_array24 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array24);
        fixedOrderComparator25.setUnknownObjectBehavior(0);
        boolean b28 = fixedOrderComparator17.add((java.lang.Object) 0);
        fixedOrderComparator17.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array31 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        java.lang.Object[] obj_array33 = new java.lang.Object[] { fixedOrderComparator32 };
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array33);
        try {
            int i37 = fixedOrderComparator8.compare((java.lang.Object) (short) 0, (java.lang.Object) fixedOrderComparator36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertNotNull(obj_array24);
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertNotNull(obj_array33);
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test185");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array9 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b11 = fixedOrderComparator8.add((java.lang.Object) obj_array9);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array9);
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        java.lang.Object[] obj_array27 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array27);
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator36.setUnknownObjectBehavior(0);
        boolean b39 = fixedOrderComparator28.add((java.lang.Object) 0);
        boolean b40 = fixedOrderComparator28.isLocked();
        boolean b41 = fixedOrderComparator28.isLocked();
        try {
            int i42 = fixedOrderComparator12.compare((java.lang.Object) fixedOrderComparator20, (java.lang.Object) fixedOrderComparator28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertNotNull(obj_array27);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertTrue(b41 == false);
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test186");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i28 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i29 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array36 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        boolean b39 = fixedOrderComparator37.add((java.lang.Object) (-1.0f));
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array48 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array48);
        int i52 = fixedOrderComparator51.getUnknownObjectBehavior();
        boolean b53 = fixedOrderComparator51.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array61 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array61);
        boolean b64 = fixedOrderComparator62.add((java.lang.Object) (-1.0f));
        int i65 = fixedOrderComparator62.getUnknownObjectBehavior();
        java.lang.Object[] obj_array72 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator(obj_array72);
        collections.comparators.FixedOrderComparator fixedOrderComparator74 = new collections.comparators.FixedOrderComparator(obj_array72);
        fixedOrderComparator74.setUnknownObjectBehavior((int) (short) 0);
        int i77 = fixedOrderComparator74.getUnknownObjectBehavior();
        boolean b78 = fixedOrderComparator62.add((java.lang.Object) i77);
        boolean b79 = fixedOrderComparator54.add((java.lang.Object) fixedOrderComparator62);
        int i80 = fixedOrderComparator37.compare((java.lang.Object) b53, (java.lang.Object) fixedOrderComparator54);
        java.lang.Object[] obj_array88 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator89 = new collections.comparators.FixedOrderComparator(obj_array88);
        collections.comparators.FixedOrderComparator fixedOrderComparator90 = new collections.comparators.FixedOrderComparator(obj_array88);
        collections.comparators.FixedOrderComparator fixedOrderComparator91 = new collections.comparators.FixedOrderComparator(obj_array88);
        collections.comparators.FixedOrderComparator fixedOrderComparator92 = new collections.comparators.FixedOrderComparator(obj_array88);
        java.lang.Object[] obj_array93 = new java.lang.Object[] { fixedOrderComparator54, (byte) 10, obj_array88 };
        collections.comparators.FixedOrderComparator fixedOrderComparator94 = new collections.comparators.FixedOrderComparator(obj_array88);
        try {
            boolean b95 = fixedOrderComparator7.add((java.lang.Object) obj_array88);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertTrue(i29 == 0);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertNotNull(obj_array48);
        org.junit.Assert.assertTrue(i52 == 2);
        org.junit.Assert.assertTrue(b53 == false);
        org.junit.Assert.assertNotNull(obj_array61);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue(i65 == 2);
        org.junit.Assert.assertNotNull(obj_array72);
        org.junit.Assert.assertTrue(i77 == 0);
        org.junit.Assert.assertTrue(b78 == false);
        org.junit.Assert.assertTrue(b79 == true);
        org.junit.Assert.assertTrue(i80 == 0);
        org.junit.Assert.assertNotNull(obj_array88);
        org.junit.Assert.assertNotNull(obj_array93);
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test187");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        boolean b21 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array28 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array28);
        fixedOrderComparator30.setUnknownObjectBehavior((int) (short) 0);
        int i33 = fixedOrderComparator30.getUnknownObjectBehavior();
        java.lang.Object obj35 = null;
        boolean b36 = fixedOrderComparator30.addAsEqual((java.lang.Object) 10.0f, obj35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator37.setUnknownObjectBehavior(0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        fixedOrderComparator37.setUnknownObjectBehavior((int) (byte) 0);
        boolean b43 = fixedOrderComparator37.isLocked();
        int i44 = fixedOrderComparator37.getUnknownObjectBehavior();
        java.lang.Object[] obj_array51 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array51);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array51);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array51);
        int i55 = fixedOrderComparator54.getUnknownObjectBehavior();
        int i56 = fixedOrderComparator30.compare((java.lang.Object) fixedOrderComparator37, (java.lang.Object) i55);
        boolean b57 = fixedOrderComparator7.add((java.lang.Object) i56);
        try {
            fixedOrderComparator7.setUnknownObjectBehavior((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(i33 == 0);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertNotNull(obj_array51);
        org.junit.Assert.assertTrue(i55 == 2);
        org.junit.Assert.assertTrue(i56 == 0);
        org.junit.Assert.assertTrue(b57 == false);
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test188");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        try {
            fixedOrderComparator7.setUnknownObjectBehavior((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test189");
        java.lang.Object[] obj_array0 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator1 = new collections.comparators.FixedOrderComparator(obj_array0);
        java.lang.Object[] obj_array2 = new java.lang.Object[] { fixedOrderComparator1 };
        collections.comparators.FixedOrderComparator fixedOrderComparator3 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator4 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator5 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator6 = new collections.comparators.FixedOrderComparator(obj_array2);
        java.lang.Object[] obj_array13 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array13);
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array13);
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator16.setUnknownObjectBehavior(0);
        int i19 = fixedOrderComparator16.getUnknownObjectBehavior();
        boolean b21 = fixedOrderComparator15.addAsEqual((java.lang.Object) i19, (java.lang.Object) (short) 1);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator22.setUnknownObjectBehavior(0);
        boolean b25 = fixedOrderComparator22.isLocked();
        java.lang.Object[] obj_array32 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        fixedOrderComparator33.setUnknownObjectBehavior(0);
        boolean b37 = fixedOrderComparator33.add((java.lang.Object) 1.0f);
        boolean b39 = fixedOrderComparator33.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator();
        boolean b41 = fixedOrderComparator40.isLocked();
        boolean b43 = fixedOrderComparator40.add((java.lang.Object) 10.0d);
        int i44 = fixedOrderComparator22.compare((java.lang.Object) b39, (java.lang.Object) fixedOrderComparator40);
        try {
            int i45 = fixedOrderComparator6.compare((java.lang.Object) fixedOrderComparator15, (java.lang.Object) fixedOrderComparator22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array0);
        org.junit.Assert.assertNotNull(obj_array2);
        org.junit.Assert.assertNotNull(obj_array13);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertTrue(i44 == 0);
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test190");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator19.setUnknownObjectBehavior(0);
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        fixedOrderComparator19.setUnknownObjectBehavior((int) (byte) 0);
        boolean b26 = fixedOrderComparator19.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array33 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array33);
        java.lang.Object[] obj_array36 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        boolean b38 = fixedOrderComparator35.add((java.lang.Object) obj_array36);
        boolean b39 = fixedOrderComparator19.add((java.lang.Object) fixedOrderComparator35);
        int i40 = fixedOrderComparator19.getUnknownObjectBehavior();
        java.lang.Object[] obj_array47 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array47);
        fixedOrderComparator48.setUnknownObjectBehavior(0);
        boolean b52 = fixedOrderComparator48.add((java.lang.Object) 1.0f);
        java.lang.Object obj53 = null;
        java.lang.Object[] obj_array60 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array60);
        fixedOrderComparator61.setUnknownObjectBehavior(0);
        boolean b65 = fixedOrderComparator61.add((java.lang.Object) 1.0f);
        int i66 = fixedOrderComparator61.getUnknownObjectBehavior();
        int i67 = fixedOrderComparator48.compare(obj53, (java.lang.Object) i66);
        int i68 = fixedOrderComparator48.getUnknownObjectBehavior();
        int i69 = fixedOrderComparator48.getUnknownObjectBehavior();
        int i70 = fixedOrderComparator48.getUnknownObjectBehavior();
        int i71 = fixedOrderComparator0.compare((java.lang.Object) i40, (java.lang.Object) i70);
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertNotNull(obj_array47);
        org.junit.Assert.assertTrue(b52 == true);
        org.junit.Assert.assertNotNull(obj_array60);
        org.junit.Assert.assertTrue(b65 == true);
        org.junit.Assert.assertTrue(i66 == 0);
        org.junit.Assert.assertTrue(i67 == (-1));
        org.junit.Assert.assertTrue(i68 == 0);
        org.junit.Assert.assertTrue(i69 == 0);
        org.junit.Assert.assertTrue(i70 == 0);
        org.junit.Assert.assertTrue(i71 == 0);
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test191");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj18 = null;
        int i19 = fixedOrderComparator10.compare((java.lang.Object) 1.0d, obj18);
        boolean b20 = fixedOrderComparator10.isLocked();
        try {
            fixedOrderComparator10.setUnknownObjectBehavior((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertTrue(b20 == true);
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test192");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator6 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator6.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array15 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array15);
        boolean b18 = fixedOrderComparator16.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator19.setUnknownObjectBehavior(0);
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        fixedOrderComparator19.setUnknownObjectBehavior((int) (byte) 0);
        boolean b25 = fixedOrderComparator16.add((java.lang.Object) fixedOrderComparator19);
        java.lang.Object obj27 = null;
        int i28 = fixedOrderComparator19.compare((java.lang.Object) 1.0d, obj27);
        boolean b29 = fixedOrderComparator19.isLocked();
        boolean b30 = fixedOrderComparator6.add((java.lang.Object) fixedOrderComparator19);
        java.lang.Object[] obj_array37 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array37);
        fixedOrderComparator39.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array48 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array48);
        int i52 = fixedOrderComparator39.compare((java.lang.Object) fixedOrderComparator50, (java.lang.Object) (-1.0d));
        boolean b53 = fixedOrderComparator50.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator54.setUnknownObjectBehavior(0);
        boolean b57 = fixedOrderComparator54.isLocked();
        java.lang.Object[] obj_array64 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array64);
        fixedOrderComparator65.setUnknownObjectBehavior(0);
        boolean b69 = fixedOrderComparator65.add((java.lang.Object) 1.0f);
        boolean b71 = fixedOrderComparator65.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator();
        boolean b73 = fixedOrderComparator72.isLocked();
        boolean b75 = fixedOrderComparator72.add((java.lang.Object) 10.0d);
        int i76 = fixedOrderComparator54.compare((java.lang.Object) b71, (java.lang.Object) fixedOrderComparator72);
        boolean b77 = fixedOrderComparator54.isLocked();
        int i78 = fixedOrderComparator6.compare((java.lang.Object) b53, (java.lang.Object) fixedOrderComparator54);
        int i79 = fixedOrderComparator0.compare((java.lang.Object) 100.0f, (java.lang.Object) fixedOrderComparator6);
        try {
            fixedOrderComparator0.setUnknownObjectBehavior((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array15);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertNotNull(obj_array37);
        org.junit.Assert.assertNotNull(obj_array48);
        org.junit.Assert.assertTrue(i52 == 0);
        org.junit.Assert.assertTrue(b53 == false);
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertNotNull(obj_array64);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertTrue(b71 == false);
        org.junit.Assert.assertTrue(b73 == false);
        org.junit.Assert.assertTrue(b75 == true);
        org.junit.Assert.assertTrue(i76 == 0);
        org.junit.Assert.assertTrue(b77 == true);
        org.junit.Assert.assertTrue(i78 == 0);
        org.junit.Assert.assertTrue(i79 == 0);
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test193");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        int i11 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object obj13 = null;
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) 10.0f, obj13);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        fixedOrderComparator22.setUnknownObjectBehavior(0);
        boolean b26 = fixedOrderComparator22.add((java.lang.Object) 1.0f);
        java.lang.Object obj27 = null;
        java.lang.Object[] obj_array34 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array34);
        fixedOrderComparator35.setUnknownObjectBehavior(0);
        boolean b39 = fixedOrderComparator35.add((java.lang.Object) 1.0f);
        int i40 = fixedOrderComparator35.getUnknownObjectBehavior();
        int i41 = fixedOrderComparator22.compare(obj27, (java.lang.Object) i40);
        int i42 = fixedOrderComparator22.getUnknownObjectBehavior();
        boolean b43 = fixedOrderComparator22.isLocked();
        java.lang.Object[] obj_array50 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array50);
        fixedOrderComparator52.setUnknownObjectBehavior((int) (short) 0);
        int i55 = fixedOrderComparator52.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator56.setUnknownObjectBehavior(0);
        int i59 = fixedOrderComparator56.getUnknownObjectBehavior();
        int i60 = fixedOrderComparator22.compare((java.lang.Object) i55, (java.lang.Object) fixedOrderComparator56);
        int i61 = fixedOrderComparator22.getUnknownObjectBehavior();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Object obj63 = null;
        int i64 = fixedOrderComparator22.compare(obj62, obj63);
        java.lang.Object[] obj_array71 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array71);
        java.lang.Object[] obj_array79 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array79);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array79);
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array79);
        int i83 = fixedOrderComparator22.compare((java.lang.Object) obj_array71, (java.lang.Object) fixedOrderComparator82);
        boolean b84 = fixedOrderComparator8.add((java.lang.Object) i83);
        boolean b85 = fixedOrderComparator8.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertNotNull(obj_array34);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i41 == (-1));
        org.junit.Assert.assertTrue(i42 == 0);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertNotNull(obj_array50);
        org.junit.Assert.assertTrue(i55 == 0);
        org.junit.Assert.assertTrue(i59 == 0);
        org.junit.Assert.assertTrue(i60 == 1);
        org.junit.Assert.assertTrue(i61 == 0);
        org.junit.Assert.assertTrue(i64 == 0);
        org.junit.Assert.assertNotNull(obj_array71);
        org.junit.Assert.assertNotNull(obj_array79);
        org.junit.Assert.assertTrue(i83 == 0);
        org.junit.Assert.assertTrue(b84 == false);
        org.junit.Assert.assertTrue(b85 == false);
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test194");
        java.lang.Object[] obj_array0 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator1 = new collections.comparators.FixedOrderComparator(obj_array0);
        try {
            fixedOrderComparator1.setUnknownObjectBehavior((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array0);
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test195");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator9.setUnknownObjectBehavior(0);
        int i12 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) i12, (java.lang.Object) (short) 1);
        int i15 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b24 = fixedOrderComparator23.isLocked();
        boolean b25 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator23);
        try {
            fixedOrderComparator23.setUnknownObjectBehavior(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i15 == 2);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(b25 == true);
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test196");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array15 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array15);
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array15);
        fixedOrderComparator17.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array26);
        int i30 = fixedOrderComparator17.compare((java.lang.Object) fixedOrderComparator28, (java.lang.Object) (-1.0d));
        boolean b31 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator17);
        java.lang.Object[] obj_array38 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array38);
        boolean b41 = fixedOrderComparator39.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator42.setUnknownObjectBehavior(0);
        int i45 = fixedOrderComparator42.getUnknownObjectBehavior();
        fixedOrderComparator42.setUnknownObjectBehavior((int) (byte) 0);
        boolean b48 = fixedOrderComparator39.add((java.lang.Object) fixedOrderComparator42);
        java.lang.Object obj49 = null;
        boolean b50 = fixedOrderComparator39.add(obj49);
        java.lang.Object[] obj_array57 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array57);
        fixedOrderComparator58.setUnknownObjectBehavior(0);
        boolean b62 = fixedOrderComparator58.add((java.lang.Object) 1.0f);
        boolean b64 = fixedOrderComparator58.add((java.lang.Object) 1.0f);
        boolean b65 = fixedOrderComparator58.isLocked();
        boolean b66 = fixedOrderComparator58.isLocked();
        boolean b67 = fixedOrderComparator39.add((java.lang.Object) fixedOrderComparator58);
        try {
            boolean b69 = fixedOrderComparator17.addAsEqual((java.lang.Object) fixedOrderComparator58, (java.lang.Object) "");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array15);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertNotNull(obj_array38);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertTrue(i45 == 0);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertNotNull(obj_array57);
        org.junit.Assert.assertTrue(b62 == true);
        org.junit.Assert.assertTrue(b64 == false);
        org.junit.Assert.assertTrue(b65 == false);
        org.junit.Assert.assertTrue(b66 == false);
        org.junit.Assert.assertTrue(b67 == true);
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test197");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i11 = fixedOrderComparator10.getUnknownObjectBehavior();
        int i12 = fixedOrderComparator10.getUnknownObjectBehavior();
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        java.lang.Object[] obj_array20 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        boolean b23 = fixedOrderComparator21.add((java.lang.Object) (-1.0f));
        fixedOrderComparator21.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array33 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array33);
        fixedOrderComparator35.setUnknownObjectBehavior((int) (short) 0);
        int i38 = fixedOrderComparator21.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator35);
        int i39 = fixedOrderComparator35.getUnknownObjectBehavior();
        boolean b40 = fixedOrderComparator35.isLocked();
        java.lang.Object[] obj_array47 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array47);
        boolean b50 = fixedOrderComparator48.add((java.lang.Object) (-1.0f));
        try {
            int i51 = fixedOrderComparator10.compare((java.lang.Object) b40, (java.lang.Object) fixedOrderComparator48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 2);
        org.junit.Assert.assertTrue(i12 == 2);
        org.junit.Assert.assertTrue(i13 == 2);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertTrue(i38 == 0);
        org.junit.Assert.assertTrue(i39 == 0);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertNotNull(obj_array47);
        org.junit.Assert.assertTrue(b50 == true);
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test198");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i28 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i29 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array36 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        boolean b39 = fixedOrderComparator37.add((java.lang.Object) (-1.0f));
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array49 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array49);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array49);
        fixedOrderComparator51.setUnknownObjectBehavior((int) (short) 0);
        int i54 = fixedOrderComparator37.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator51);
        int i55 = fixedOrderComparator51.getUnknownObjectBehavior();
        boolean b56 = fixedOrderComparator51.isLocked();
        try {
            boolean b57 = fixedOrderComparator7.add((java.lang.Object) b56);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertTrue(i29 == 0);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertNotNull(obj_array49);
        org.junit.Assert.assertTrue(i54 == 0);
        org.junit.Assert.assertTrue(i55 == 0);
        org.junit.Assert.assertTrue(b56 == false);
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test199");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b12 = fixedOrderComparator10.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        boolean b19 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object obj21 = null;
        int i22 = fixedOrderComparator13.compare((java.lang.Object) 1.0d, obj21);
        boolean b23 = fixedOrderComparator13.isLocked();
        boolean b24 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object[] obj_array31 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array31);
        fixedOrderComparator33.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        int i46 = fixedOrderComparator33.compare((java.lang.Object) fixedOrderComparator44, (java.lang.Object) (-1.0d));
        boolean b47 = fixedOrderComparator44.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator48.setUnknownObjectBehavior(0);
        boolean b51 = fixedOrderComparator48.isLocked();
        java.lang.Object[] obj_array58 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array58);
        fixedOrderComparator59.setUnknownObjectBehavior(0);
        boolean b63 = fixedOrderComparator59.add((java.lang.Object) 1.0f);
        boolean b65 = fixedOrderComparator59.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator();
        boolean b67 = fixedOrderComparator66.isLocked();
        boolean b69 = fixedOrderComparator66.add((java.lang.Object) 10.0d);
        int i70 = fixedOrderComparator48.compare((java.lang.Object) b65, (java.lang.Object) fixedOrderComparator66);
        boolean b71 = fixedOrderComparator48.isLocked();
        int i72 = fixedOrderComparator0.compare((java.lang.Object) b47, (java.lang.Object) fixedOrderComparator48);
        try {
            fixedOrderComparator0.setUnknownObjectBehavior(10);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertTrue(b47 == false);
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertNotNull(obj_array58);
        org.junit.Assert.assertTrue(b63 == true);
        org.junit.Assert.assertTrue(b65 == false);
        org.junit.Assert.assertTrue(b67 == false);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertTrue(i70 == 0);
        org.junit.Assert.assertTrue(b71 == true);
        org.junit.Assert.assertTrue(i72 == 0);
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test200");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        boolean b21 = fixedOrderComparator7.isLocked();
        boolean b22 = fixedOrderComparator7.isLocked();
        boolean b23 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array30 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array30);
        int i35 = fixedOrderComparator34.getUnknownObjectBehavior();
        int i36 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b37 = fixedOrderComparator34.isLocked();
        int i38 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b39 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator34);
        boolean b40 = fixedOrderComparator34.isLocked();
        java.lang.Object[] obj_array47 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array47);
        java.lang.Object[] obj_array56 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array56);
        int i63 = fixedOrderComparator62.getUnknownObjectBehavior();
        try {
            int i64 = fixedOrderComparator34.compare((java.lang.Object) fixedOrderComparator49, (java.lang.Object) fixedOrderComparator62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(i36 == 2);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(i38 == 2);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertNotNull(obj_array47);
        org.junit.Assert.assertNotNull(obj_array56);
        org.junit.Assert.assertTrue(i63 == 2);
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test201");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b28 = fixedOrderComparator14.add((java.lang.Object) obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array21);
        fixedOrderComparator29.setUnknownObjectBehavior((int) (byte) 0);
        fixedOrderComparator29.setUnknownObjectBehavior((int) (short) 1);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b28 == true);
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test202");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array19 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator21.setUnknownObjectBehavior((int) (short) 0);
        int i24 = fixedOrderComparator7.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator21);
        fixedOrderComparator21.setUnknownObjectBehavior((int) (byte) 0);
        boolean b27 = fixedOrderComparator21.isLocked();
        try {
            fixedOrderComparator21.setUnknownObjectBehavior((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertTrue(b27 == false);
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test203");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        boolean b14 = fixedOrderComparator12.isLocked();
        fixedOrderComparator12.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array23 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array23);
        fixedOrderComparator24.setUnknownObjectBehavior(0);
        boolean b28 = fixedOrderComparator24.add((java.lang.Object) 1.0f);
        int i29 = fixedOrderComparator24.getUnknownObjectBehavior();
        int i30 = fixedOrderComparator24.getUnknownObjectBehavior();
        boolean b31 = fixedOrderComparator24.isLocked();
        java.lang.Object[] obj_array38 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array38);
        java.lang.Object[] obj_array46 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        fixedOrderComparator47.setUnknownObjectBehavior(0);
        boolean b50 = fixedOrderComparator39.add((java.lang.Object) 0);
        fixedOrderComparator39.setUnknownObjectBehavior((int) (short) 0);
        boolean b53 = fixedOrderComparator39.isLocked();
        boolean b54 = fixedOrderComparator39.isLocked();
        boolean b55 = fixedOrderComparator39.isLocked();
        java.lang.Object[] obj_array62 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array62);
        int i67 = fixedOrderComparator66.getUnknownObjectBehavior();
        int i68 = fixedOrderComparator66.getUnknownObjectBehavior();
        boolean b69 = fixedOrderComparator66.isLocked();
        int i70 = fixedOrderComparator66.getUnknownObjectBehavior();
        boolean b71 = fixedOrderComparator39.add((java.lang.Object) fixedOrderComparator66);
        boolean b72 = fixedOrderComparator66.isLocked();
        try {
            boolean b73 = fixedOrderComparator12.addAsEqual((java.lang.Object) b31, (java.lang.Object) fixedOrderComparator66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertNotNull(obj_array23);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(i29 == 0);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertNotNull(obj_array38);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertTrue(b50 == false);
        org.junit.Assert.assertTrue(b53 == false);
        org.junit.Assert.assertTrue(b54 == false);
        org.junit.Assert.assertTrue(b55 == false);
        org.junit.Assert.assertNotNull(obj_array62);
        org.junit.Assert.assertTrue(i67 == 2);
        org.junit.Assert.assertTrue(i68 == 2);
        org.junit.Assert.assertTrue(b69 == false);
        org.junit.Assert.assertTrue(i70 == 2);
        org.junit.Assert.assertTrue(b71 == true);
        org.junit.Assert.assertTrue(b72 == false);
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test204");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator9.setUnknownObjectBehavior(0);
        int i12 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) i12, (java.lang.Object) (short) 1);
        int i15 = fixedOrderComparator8.getUnknownObjectBehavior();
        fixedOrderComparator8.setUnknownObjectBehavior((int) (byte) 0);
        try {
            fixedOrderComparator8.setUnknownObjectBehavior((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i15 == 2);
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test205");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b7 = fixedOrderComparator0.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array14);
        java.lang.Object[] obj_array17 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        boolean b19 = fixedOrderComparator16.add((java.lang.Object) obj_array17);
        boolean b20 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator16);
        int i21 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b22 = fixedOrderComparator0.isLocked();
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertTrue(b22 == false);
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test206");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        fixedOrderComparator11.setUnknownObjectBehavior(0);
        boolean b15 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        boolean b17 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator();
        boolean b19 = fixedOrderComparator18.isLocked();
        boolean b21 = fixedOrderComparator18.add((java.lang.Object) 10.0d);
        int i22 = fixedOrderComparator0.compare((java.lang.Object) b17, (java.lang.Object) fixedOrderComparator18);
        int i23 = fixedOrderComparator0.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator();
        boolean b25 = fixedOrderComparator24.isLocked();
        boolean b27 = fixedOrderComparator24.add((java.lang.Object) 10.0d);
        java.lang.Object obj28 = null;
        boolean b29 = fixedOrderComparator24.add(obj28);
        boolean b30 = fixedOrderComparator24.isLocked();
        java.lang.Object[] obj_array37 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array37);
        fixedOrderComparator38.setUnknownObjectBehavior(0);
        boolean b42 = fixedOrderComparator38.add((java.lang.Object) 1.0f);
        java.lang.Object obj43 = null;
        java.lang.Object[] obj_array50 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array50);
        fixedOrderComparator51.setUnknownObjectBehavior(0);
        boolean b55 = fixedOrderComparator51.add((java.lang.Object) 1.0f);
        int i56 = fixedOrderComparator51.getUnknownObjectBehavior();
        int i57 = fixedOrderComparator38.compare(obj43, (java.lang.Object) i56);
        int i58 = fixedOrderComparator38.getUnknownObjectBehavior();
        boolean b59 = fixedOrderComparator38.isLocked();
        java.lang.Object[] obj_array66 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array66);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array66);
        fixedOrderComparator68.setUnknownObjectBehavior((int) (short) 0);
        int i71 = fixedOrderComparator68.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator72.setUnknownObjectBehavior(0);
        int i75 = fixedOrderComparator72.getUnknownObjectBehavior();
        int i76 = fixedOrderComparator38.compare((java.lang.Object) i71, (java.lang.Object) fixedOrderComparator72);
        java.lang.Object[] obj_array84 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array84);
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array84);
        fixedOrderComparator86.setUnknownObjectBehavior((int) (short) 0);
        int i89 = fixedOrderComparator86.getUnknownObjectBehavior();
        int i90 = fixedOrderComparator72.compare((java.lang.Object) (byte) 100, (java.lang.Object) fixedOrderComparator86);
        int i91 = fixedOrderComparator72.getUnknownObjectBehavior();
        try {
            boolean b92 = fixedOrderComparator0.addAsEqual((java.lang.Object) b30, (java.lang.Object) i91);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(i23 == 0);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertNotNull(obj_array37);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertNotNull(obj_array50);
        org.junit.Assert.assertTrue(b55 == true);
        org.junit.Assert.assertTrue(i56 == 0);
        org.junit.Assert.assertTrue(i57 == (-1));
        org.junit.Assert.assertTrue(i58 == 0);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertNotNull(obj_array66);
        org.junit.Assert.assertTrue(i71 == 0);
        org.junit.Assert.assertTrue(i75 == 0);
        org.junit.Assert.assertTrue(i76 == 1);
        org.junit.Assert.assertNotNull(obj_array84);
        org.junit.Assert.assertTrue(i89 == 0);
        org.junit.Assert.assertTrue(i90 == 0);
        org.junit.Assert.assertTrue(i91 == 0);
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test207");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        int i27 = fixedOrderComparator26.getUnknownObjectBehavior();
        int i28 = fixedOrderComparator26.getUnknownObjectBehavior();
        boolean b29 = fixedOrderComparator26.isLocked();
        int i30 = fixedOrderComparator26.getUnknownObjectBehavior();
        int i32 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator26, (java.lang.Object) 1L);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator();
        int i35 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator34.isLocked();
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        boolean b40 = fixedOrderComparator34.add((java.lang.Object) 10L);
        try {
            int i41 = fixedOrderComparator26.compare((java.lang.Object) 2, (java.lang.Object) b40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(i27 == 2);
        org.junit.Assert.assertTrue(i28 == 2);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertTrue(i30 == 2);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(b40 == true);
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test208");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array19 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator21.setUnknownObjectBehavior((int) (short) 0);
        int i24 = fixedOrderComparator7.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator25.setUnknownObjectBehavior(0);
        int i28 = fixedOrderComparator25.getUnknownObjectBehavior();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array35);
        java.lang.Object[] obj_array45 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array45);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array45);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array54);
        fixedOrderComparator56.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array65 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array65);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array65);
        int i69 = fixedOrderComparator56.compare((java.lang.Object) fixedOrderComparator67, (java.lang.Object) (-1.0d));
        boolean b70 = fixedOrderComparator47.add((java.lang.Object) fixedOrderComparator56);
        boolean b71 = fixedOrderComparator56.isLocked();
        int i72 = fixedOrderComparator56.getUnknownObjectBehavior();
        int i73 = fixedOrderComparator25.compare((java.lang.Object) obj_array35, (java.lang.Object) fixedOrderComparator56);
        collections.comparators.FixedOrderComparator fixedOrderComparator74 = new collections.comparators.FixedOrderComparator(obj_array35);
        int i75 = fixedOrderComparator74.getUnknownObjectBehavior();
        java.lang.Object[] obj_array82 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator(obj_array82);
        java.lang.Object[] obj_array90 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator91 = new collections.comparators.FixedOrderComparator(obj_array90);
        fixedOrderComparator91.setUnknownObjectBehavior(0);
        boolean b94 = fixedOrderComparator83.add((java.lang.Object) 0);
        fixedOrderComparator83.setUnknownObjectBehavior((int) (short) 0);
        boolean b97 = fixedOrderComparator83.isLocked();
        try {
            boolean b98 = fixedOrderComparator7.addAsEqual((java.lang.Object) fixedOrderComparator74, (java.lang.Object) fixedOrderComparator83);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertNotNull(obj_array45);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertNotNull(obj_array65);
        org.junit.Assert.assertTrue(i69 == 0);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertTrue(b71 == true);
        org.junit.Assert.assertTrue(i72 == 0);
        org.junit.Assert.assertTrue(i73 == 0);
        org.junit.Assert.assertTrue(i75 == 2);
        org.junit.Assert.assertNotNull(obj_array82);
        org.junit.Assert.assertNotNull(obj_array90);
        org.junit.Assert.assertTrue(b94 == false);
        org.junit.Assert.assertTrue(b97 == false);
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test209");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator();
        int i35 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator34.isLocked();
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        int i39 = fixedOrderComparator12.compare((java.lang.Object) obj_array29, (java.lang.Object) fixedOrderComparator34);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array29);
        boolean b41 = fixedOrderComparator40.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator42.setUnknownObjectBehavior(0);
        int i45 = fixedOrderComparator42.getUnknownObjectBehavior();
        fixedOrderComparator42.setUnknownObjectBehavior((int) (byte) 0);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array54);
        java.lang.Object[] obj_array63 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array63);
        fixedOrderComparator65.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array74 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array74);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array74);
        int i78 = fixedOrderComparator65.compare((java.lang.Object) fixedOrderComparator76, (java.lang.Object) (-1.0d));
        boolean b79 = fixedOrderComparator56.add((java.lang.Object) fixedOrderComparator65);
        boolean b80 = fixedOrderComparator65.isLocked();
        boolean b81 = fixedOrderComparator42.add((java.lang.Object) fixedOrderComparator65);
        boolean b82 = fixedOrderComparator40.add((java.lang.Object) fixedOrderComparator42);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(i39 == 0);
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertTrue(i45 == 0);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertNotNull(obj_array63);
        org.junit.Assert.assertNotNull(obj_array74);
        org.junit.Assert.assertTrue(i78 == 0);
        org.junit.Assert.assertTrue(b79 == true);
        org.junit.Assert.assertTrue(b80 == true);
        org.junit.Assert.assertTrue(b81 == true);
        org.junit.Assert.assertTrue(b82 == true);
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test210");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator8.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array19 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator22.setUnknownObjectBehavior(0);
        int i25 = fixedOrderComparator22.getUnknownObjectBehavior();
        boolean b27 = fixedOrderComparator21.addAsEqual((java.lang.Object) i25, (java.lang.Object) (short) 1);
        int i28 = fixedOrderComparator21.getUnknownObjectBehavior();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        boolean b37 = fixedOrderComparator36.isLocked();
        boolean b38 = fixedOrderComparator21.add((java.lang.Object) fixedOrderComparator36);
        boolean b39 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator21);
        try {
            fixedOrderComparator21.setUnknownObjectBehavior((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertTrue(i28 == 2);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b39 == true);
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test211");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        boolean b11 = fixedOrderComparator8.isLocked();
        java.lang.Object[] obj_array18 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array18);
        fixedOrderComparator20.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        int i33 = fixedOrderComparator20.compare((java.lang.Object) fixedOrderComparator31, (java.lang.Object) (-1.0d));
        boolean b34 = fixedOrderComparator31.isLocked();
        java.lang.Object[] obj_array41 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array41);
        java.lang.Object[] obj_array44 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array44);
        boolean b46 = fixedOrderComparator43.add((java.lang.Object) obj_array44);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array44);
        try {
            boolean b48 = fixedOrderComparator8.addAsEqual((java.lang.Object) fixedOrderComparator31, (java.lang.Object) obj_array44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i33 == 0);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertNotNull(obj_array44);
        org.junit.Assert.assertTrue(b46 == true);
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test212");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        boolean b1 = fixedOrderComparator0.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator2 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b12 = fixedOrderComparator10.add((java.lang.Object) (-1.0f));
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        java.lang.Object[] obj_array20 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array20);
        fixedOrderComparator22.setUnknownObjectBehavior((int) (short) 0);
        int i25 = fixedOrderComparator22.getUnknownObjectBehavior();
        boolean b26 = fixedOrderComparator10.add((java.lang.Object) i25);
        boolean b27 = fixedOrderComparator2.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object[] obj_array34 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator37.setUnknownObjectBehavior(0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        boolean b42 = fixedOrderComparator36.addAsEqual((java.lang.Object) i40, (java.lang.Object) (short) 1);
        int i43 = fixedOrderComparator36.getUnknownObjectBehavior();
        java.lang.Object[] obj_array50 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array50);
        boolean b52 = fixedOrderComparator51.isLocked();
        boolean b53 = fixedOrderComparator36.add((java.lang.Object) fixedOrderComparator51);
        try {
            int i54 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator10, (java.lang.Object) fixedOrderComparator51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b1 == false);
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(i13 == 2);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertNotNull(obj_array34);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertTrue(i43 == 2);
        org.junit.Assert.assertNotNull(obj_array50);
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertTrue(b53 == true);
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test213");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj18 = null;
        int i19 = fixedOrderComparator10.compare((java.lang.Object) 1.0d, obj18);
        boolean b20 = fixedOrderComparator10.isLocked();
        java.lang.Object[] obj_array27 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array27);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array27);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array27);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array27);
        java.lang.Object[] obj_array38 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array38);
        fixedOrderComparator39.setUnknownObjectBehavior(0);
        boolean b43 = fixedOrderComparator39.add((java.lang.Object) 1.0f);
        boolean b45 = fixedOrderComparator39.add((java.lang.Object) 1.0f);
        boolean b46 = fixedOrderComparator39.isLocked();
        boolean b47 = fixedOrderComparator31.add((java.lang.Object) fixedOrderComparator39);
        try {
            boolean b48 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator39);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertNotNull(obj_array27);
        org.junit.Assert.assertNotNull(obj_array38);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertTrue(b45 == false);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue(b47 == true);
    }

    @Test
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test214");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b13 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj14 = null;
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator24.setUnknownObjectBehavior(0);
        int i27 = fixedOrderComparator24.getUnknownObjectBehavior();
        boolean b29 = fixedOrderComparator23.addAsEqual((java.lang.Object) i27, (java.lang.Object) (short) 1);
        int i30 = fixedOrderComparator23.getUnknownObjectBehavior();
        java.lang.Object[] obj_array37 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array37);
        boolean b39 = fixedOrderComparator38.isLocked();
        boolean b40 = fixedOrderComparator23.add((java.lang.Object) fixedOrderComparator38);
        try {
            boolean b41 = fixedOrderComparator7.addAsEqual(obj14, (java.lang.Object) fixedOrderComparator23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertTrue(i30 == 2);
        org.junit.Assert.assertNotNull(obj_array37);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertTrue(b40 == true);
    }

    @Test
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test215");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array15 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array15);
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array15);
        fixedOrderComparator17.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array26);
        int i30 = fixedOrderComparator17.compare((java.lang.Object) fixedOrderComparator28, (java.lang.Object) (-1.0d));
        boolean b31 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator17);
        boolean b32 = fixedOrderComparator17.isLocked();
        java.lang.Object[] obj_array39 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array39);
        boolean b42 = fixedOrderComparator40.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator43.setUnknownObjectBehavior(0);
        int i46 = fixedOrderComparator43.getUnknownObjectBehavior();
        fixedOrderComparator43.setUnknownObjectBehavior((int) (byte) 0);
        boolean b49 = fixedOrderComparator40.add((java.lang.Object) fixedOrderComparator43);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator50.setUnknownObjectBehavior(0);
        int i53 = fixedOrderComparator50.getUnknownObjectBehavior();
        fixedOrderComparator50.setUnknownObjectBehavior((int) (byte) 0);
        boolean b57 = fixedOrderComparator50.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array64 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array64);
        java.lang.Object[] obj_array67 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array67);
        boolean b69 = fixedOrderComparator66.add((java.lang.Object) obj_array67);
        boolean b70 = fixedOrderComparator50.add((java.lang.Object) fixedOrderComparator66);
        java.lang.Object[] obj_array71 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array71);
        boolean b73 = fixedOrderComparator66.add((java.lang.Object) obj_array71);
        try {
            boolean b74 = fixedOrderComparator17.addAsEqual((java.lang.Object) b49, (java.lang.Object) obj_array71);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array15);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertNotNull(obj_array39);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(i53 == 0);
        org.junit.Assert.assertTrue(b57 == true);
        org.junit.Assert.assertNotNull(obj_array64);
        org.junit.Assert.assertNotNull(obj_array67);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertNotNull(obj_array71);
        org.junit.Assert.assertTrue(b73 == true);
    }

    @Test
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test216");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        int i46 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Object obj48 = null;
        int i49 = fixedOrderComparator7.compare(obj47, obj48);
        java.lang.Object[] obj_array56 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array56);
        java.lang.Object[] obj_array64 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array64);
        int i68 = fixedOrderComparator7.compare((java.lang.Object) obj_array56, (java.lang.Object) fixedOrderComparator67);
        fixedOrderComparator67.setUnknownObjectBehavior((int) (short) 1);
        java.lang.Object[] obj_array77 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator(obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array77);
        boolean b81 = fixedOrderComparator67.add((java.lang.Object) obj_array77);
        boolean b82 = fixedOrderComparator67.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertNotNull(obj_array56);
        org.junit.Assert.assertNotNull(obj_array64);
        org.junit.Assert.assertTrue(i68 == 0);
        org.junit.Assert.assertNotNull(obj_array77);
        org.junit.Assert.assertTrue(b81 == true);
        org.junit.Assert.assertTrue(b82 == false);
    }

    @Test
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test217");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        boolean b14 = fixedOrderComparator10.add((java.lang.Object) 1.0f);
        java.lang.Object obj15 = null;
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        fixedOrderComparator23.setUnknownObjectBehavior(0);
        boolean b27 = fixedOrderComparator23.add((java.lang.Object) 1.0f);
        int i28 = fixedOrderComparator23.getUnknownObjectBehavior();
        int i29 = fixedOrderComparator10.compare(obj15, (java.lang.Object) i28);
        int i30 = fixedOrderComparator10.getUnknownObjectBehavior();
        boolean b31 = fixedOrderComparator10.isLocked();
        java.lang.Object[] obj_array38 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array38);
        fixedOrderComparator40.setUnknownObjectBehavior((int) (short) 0);
        int i43 = fixedOrderComparator40.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator44.setUnknownObjectBehavior(0);
        int i47 = fixedOrderComparator44.getUnknownObjectBehavior();
        int i48 = fixedOrderComparator10.compare((java.lang.Object) i43, (java.lang.Object) fixedOrderComparator44);
        java.lang.Object[] obj_array55 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        fixedOrderComparator56.setUnknownObjectBehavior(0);
        boolean b60 = fixedOrderComparator56.add((java.lang.Object) 1.0f);
        java.lang.Object obj61 = null;
        java.lang.Object[] obj_array68 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array68);
        fixedOrderComparator69.setUnknownObjectBehavior(0);
        boolean b73 = fixedOrderComparator69.add((java.lang.Object) 1.0f);
        int i74 = fixedOrderComparator69.getUnknownObjectBehavior();
        int i75 = fixedOrderComparator56.compare(obj61, (java.lang.Object) i74);
        int i76 = fixedOrderComparator56.getUnknownObjectBehavior();
        boolean b77 = fixedOrderComparator56.isLocked();
        java.lang.Object[] obj_array84 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array84);
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array84);
        fixedOrderComparator86.setUnknownObjectBehavior((int) (short) 0);
        int i89 = fixedOrderComparator86.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator90 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator90.setUnknownObjectBehavior(0);
        int i93 = fixedOrderComparator90.getUnknownObjectBehavior();
        int i94 = fixedOrderComparator56.compare((java.lang.Object) i89, (java.lang.Object) fixedOrderComparator90);
        int i96 = fixedOrderComparator10.compare((java.lang.Object) i89, (java.lang.Object) 2);
        boolean b97 = fixedOrderComparator0.add((java.lang.Object) 2);
        int i98 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b99 = fixedOrderComparator0.isLocked();
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertTrue(i29 == (-1));
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertNotNull(obj_array38);
        org.junit.Assert.assertTrue(i43 == 0);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(i48 == 1);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertNotNull(obj_array68);
        org.junit.Assert.assertTrue(b73 == true);
        org.junit.Assert.assertTrue(i74 == 0);
        org.junit.Assert.assertTrue(i75 == (-1));
        org.junit.Assert.assertTrue(i76 == 0);
        org.junit.Assert.assertTrue(b77 == true);
        org.junit.Assert.assertNotNull(obj_array84);
        org.junit.Assert.assertTrue(i89 == 0);
        org.junit.Assert.assertTrue(i93 == 0);
        org.junit.Assert.assertTrue(i94 == 1);
        org.junit.Assert.assertTrue(i96 == 1);
        org.junit.Assert.assertTrue(b97 == true);
        org.junit.Assert.assertTrue(i98 == 0);
        org.junit.Assert.assertTrue(b99 == false);
    }

    @Test
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test218");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array19 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator21.setUnknownObjectBehavior((int) (short) 0);
        int i24 = fixedOrderComparator7.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator21);
        java.lang.Object[] obj_array31 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array31);
        fixedOrderComparator33.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator33.setUnknownObjectBehavior(0);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator38.setUnknownObjectBehavior(0);
        int i41 = fixedOrderComparator38.getUnknownObjectBehavior();
        try {
            boolean b42 = fixedOrderComparator7.addAsEqual((java.lang.Object) 0, (java.lang.Object) fixedOrderComparator38);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertTrue(i41 == 0);
    }

    @Test
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test219");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array18 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array18);
        int i22 = fixedOrderComparator21.getUnknownObjectBehavior();
        boolean b23 = fixedOrderComparator21.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array31 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        boolean b34 = fixedOrderComparator32.add((java.lang.Object) (-1.0f));
        int i35 = fixedOrderComparator32.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        fixedOrderComparator44.setUnknownObjectBehavior((int) (short) 0);
        int i47 = fixedOrderComparator44.getUnknownObjectBehavior();
        boolean b48 = fixedOrderComparator32.add((java.lang.Object) i47);
        boolean b49 = fixedOrderComparator24.add((java.lang.Object) fixedOrderComparator32);
        int i50 = fixedOrderComparator7.compare((java.lang.Object) b23, (java.lang.Object) fixedOrderComparator24);
        int i51 = fixedOrderComparator24.getUnknownObjectBehavior();
        boolean b52 = fixedOrderComparator24.isLocked();
        try {
            fixedOrderComparator24.setUnknownObjectBehavior((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertTrue(i22 == 2);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(i50 == 0);
        org.junit.Assert.assertTrue(i51 == 2);
        org.junit.Assert.assertTrue(b52 == false);
    }

    @Test
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test220");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        java.lang.Object[] obj_array12 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array12);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array12);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        fixedOrderComparator23.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array32 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array32);
        int i36 = fixedOrderComparator23.compare((java.lang.Object) fixedOrderComparator34, (java.lang.Object) (-1.0d));
        boolean b37 = fixedOrderComparator14.add((java.lang.Object) fixedOrderComparator23);
        boolean b38 = fixedOrderComparator23.isLocked();
        boolean b39 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator23);
        boolean b40 = fixedOrderComparator23.isLocked();
        try {
            fixedOrderComparator23.setUnknownObjectBehavior((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertNotNull(obj_array12);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertTrue(i36 == 0);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b40 == true);
    }

    @Test
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test221");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        java.lang.Object[] obj_array53 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array53);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array53);
        fixedOrderComparator55.setUnknownObjectBehavior((int) (short) 0);
        int i58 = fixedOrderComparator55.getUnknownObjectBehavior();
        int i59 = fixedOrderComparator41.compare((java.lang.Object) (byte) 100, (java.lang.Object) fixedOrderComparator55);
        int i60 = fixedOrderComparator41.getUnknownObjectBehavior();
        try {
            fixedOrderComparator41.setUnknownObjectBehavior(100);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertNotNull(obj_array53);
        org.junit.Assert.assertTrue(i58 == 0);
        org.junit.Assert.assertTrue(i59 == 0);
        org.junit.Assert.assertTrue(i60 == 0);
    }

    @Test
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test222");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b6 = fixedOrderComparator0.isLocked();
        try {
            fixedOrderComparator0.setUnknownObjectBehavior((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b6 == false);
    }

    @Test
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test223");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        java.lang.Object[] obj_array46 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array54);
        int i58 = fixedOrderComparator57.getUnknownObjectBehavior();
        boolean b59 = fixedOrderComparator57.isLocked();
        int i60 = fixedOrderComparator41.compare((java.lang.Object) fixedOrderComparator47, (java.lang.Object) fixedOrderComparator57);
        java.lang.Object[] obj_array67 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array67);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array67);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator70.setUnknownObjectBehavior(0);
        int i73 = fixedOrderComparator70.getUnknownObjectBehavior();
        boolean b75 = fixedOrderComparator69.addAsEqual((java.lang.Object) i73, (java.lang.Object) (short) 1);
        int i76 = fixedOrderComparator69.getUnknownObjectBehavior();
        java.lang.Object[] obj_array83 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator84 = new collections.comparators.FixedOrderComparator(obj_array83);
        boolean b85 = fixedOrderComparator84.isLocked();
        boolean b86 = fixedOrderComparator69.add((java.lang.Object) fixedOrderComparator84);
        int i87 = fixedOrderComparator69.getUnknownObjectBehavior();
        boolean b88 = fixedOrderComparator69.isLocked();
        boolean b89 = fixedOrderComparator47.add((java.lang.Object) b88);
        fixedOrderComparator47.setUnknownObjectBehavior((int) (byte) 0);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertTrue(i58 == 2);
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertTrue(i60 == 0);
        org.junit.Assert.assertNotNull(obj_array67);
        org.junit.Assert.assertTrue(i73 == 0);
        org.junit.Assert.assertTrue(b75 == true);
        org.junit.Assert.assertTrue(i76 == 2);
        org.junit.Assert.assertNotNull(obj_array83);
        org.junit.Assert.assertTrue(b85 == false);
        org.junit.Assert.assertTrue(b86 == true);
        org.junit.Assert.assertTrue(i87 == 2);
        org.junit.Assert.assertTrue(b88 == false);
        org.junit.Assert.assertTrue(b89 == true);
    }

    @Test
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test224");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array18 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array18);
        int i22 = fixedOrderComparator21.getUnknownObjectBehavior();
        boolean b23 = fixedOrderComparator21.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array31 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        boolean b34 = fixedOrderComparator32.add((java.lang.Object) (-1.0f));
        int i35 = fixedOrderComparator32.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        fixedOrderComparator44.setUnknownObjectBehavior((int) (short) 0);
        int i47 = fixedOrderComparator44.getUnknownObjectBehavior();
        boolean b48 = fixedOrderComparator32.add((java.lang.Object) i47);
        boolean b49 = fixedOrderComparator24.add((java.lang.Object) fixedOrderComparator32);
        int i50 = fixedOrderComparator7.compare((java.lang.Object) b23, (java.lang.Object) fixedOrderComparator24);
        boolean b51 = fixedOrderComparator7.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertTrue(i22 == 2);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(i50 == 0);
        org.junit.Assert.assertTrue(b51 == true);
    }

    @Test
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test225");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i11 = fixedOrderComparator10.getUnknownObjectBehavior();
        int i12 = fixedOrderComparator10.getUnknownObjectBehavior();
        boolean b13 = fixedOrderComparator10.isLocked();
        boolean b14 = fixedOrderComparator10.isLocked();
        java.lang.Object[] obj_array21 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b24 = fixedOrderComparator22.add((java.lang.Object) (-1.0f));
        fixedOrderComparator22.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array33 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array33);
        int i37 = fixedOrderComparator36.getUnknownObjectBehavior();
        boolean b38 = fixedOrderComparator36.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array46 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        boolean b49 = fixedOrderComparator47.add((java.lang.Object) (-1.0f));
        int i50 = fixedOrderComparator47.getUnknownObjectBehavior();
        java.lang.Object[] obj_array57 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array57);
        fixedOrderComparator59.setUnknownObjectBehavior((int) (short) 0);
        int i62 = fixedOrderComparator59.getUnknownObjectBehavior();
        boolean b63 = fixedOrderComparator47.add((java.lang.Object) i62);
        boolean b64 = fixedOrderComparator39.add((java.lang.Object) fixedOrderComparator47);
        int i65 = fixedOrderComparator22.compare((java.lang.Object) b38, (java.lang.Object) fixedOrderComparator39);
        int i66 = fixedOrderComparator39.getUnknownObjectBehavior();
        boolean b67 = fixedOrderComparator39.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator();
        boolean b69 = fixedOrderComparator68.isLocked();
        boolean b71 = fixedOrderComparator68.add((java.lang.Object) 10.0d);
        boolean b72 = fixedOrderComparator68.isLocked();
        int i73 = fixedOrderComparator68.getUnknownObjectBehavior();
        try {
            int i74 = fixedOrderComparator10.compare((java.lang.Object) fixedOrderComparator39, (java.lang.Object) i73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 2);
        org.junit.Assert.assertTrue(i12 == 2);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertTrue(i37 == 2);
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(i50 == 2);
        org.junit.Assert.assertNotNull(obj_array57);
        org.junit.Assert.assertTrue(i62 == 0);
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue(i65 == 0);
        org.junit.Assert.assertTrue(i66 == 2);
        org.junit.Assert.assertTrue(b67 == false);
        org.junit.Assert.assertTrue(b69 == false);
        org.junit.Assert.assertTrue(b71 == true);
        org.junit.Assert.assertTrue(b72 == false);
        org.junit.Assert.assertTrue(i73 == 2);
    }

    @Test
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test226");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        int i11 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object obj13 = null;
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) 10.0f, obj13);
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        int i18 = fixedOrderComparator15.getUnknownObjectBehavior();
        fixedOrderComparator15.setUnknownObjectBehavior((int) (byte) 0);
        boolean b21 = fixedOrderComparator15.isLocked();
        int i22 = fixedOrderComparator15.getUnknownObjectBehavior();
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array29);
        int i33 = fixedOrderComparator32.getUnknownObjectBehavior();
        int i34 = fixedOrderComparator8.compare((java.lang.Object) fixedOrderComparator15, (java.lang.Object) i33);
        boolean b36 = fixedOrderComparator15.add((java.lang.Object) (short) 0);
        try {
            fixedOrderComparator15.setUnknownObjectBehavior((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i18 == 0);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i33 == 2);
        org.junit.Assert.assertTrue(i34 == 0);
        org.junit.Assert.assertTrue(b36 == true);
    }

    @Test
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test227");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        int i21 = fixedOrderComparator8.compare((java.lang.Object) fixedOrderComparator19, (java.lang.Object) (-1.0d));
        boolean b22 = fixedOrderComparator19.isLocked();
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        boolean b32 = fixedOrderComparator30.add((java.lang.Object) (-1.0f));
        fixedOrderComparator30.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array42 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        fixedOrderComparator44.setUnknownObjectBehavior((int) (short) 0);
        int i47 = fixedOrderComparator30.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator44);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        java.lang.Object[] obj_array62 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array62);
        fixedOrderComparator63.setUnknownObjectBehavior(0);
        boolean b66 = fixedOrderComparator55.add((java.lang.Object) 0);
        fixedOrderComparator55.setUnknownObjectBehavior((int) (short) 0);
        boolean b69 = fixedOrderComparator55.isLocked();
        boolean b70 = fixedOrderComparator19.addAsEqual((java.lang.Object) i47, (java.lang.Object) b69);
        try {
            fixedOrderComparator19.setUnknownObjectBehavior((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertNotNull(obj_array62);
        org.junit.Assert.assertTrue(b66 == false);
        org.junit.Assert.assertTrue(b69 == false);
        org.junit.Assert.assertTrue(b70 == true);
    }

    @Test
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test228");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        int i12 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b13 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array14 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        java.lang.Object[] obj_array16 = new java.lang.Object[] { fixedOrderComparator15 };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array16);
        java.lang.Object[] obj_array25 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array25);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array25);
        int i28 = fixedOrderComparator7.compare((java.lang.Object) fixedOrderComparator18, (java.lang.Object) obj_array25);
        java.lang.Object[] obj_array29 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        java.lang.Object[] obj_array31 = new java.lang.Object[] { fixedOrderComparator30 };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array31);
        java.lang.Object[] obj_array43 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array43);
        fixedOrderComparator44.setUnknownObjectBehavior(0);
        boolean b48 = fixedOrderComparator44.add((java.lang.Object) 1.0f);
        int i49 = fixedOrderComparator44.getUnknownObjectBehavior();
        boolean b50 = fixedOrderComparator44.isLocked();
        java.lang.Object[] obj_array51 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array51);
        java.lang.Object[] obj_array53 = new java.lang.Object[] { fixedOrderComparator52 };
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array53);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array53);
        java.lang.Object[] obj_array62 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array62);
        int i65 = fixedOrderComparator44.compare((java.lang.Object) fixedOrderComparator55, (java.lang.Object) obj_array62);
        try {
            int i66 = fixedOrderComparator18.compare((java.lang.Object) obj_array31, (java.lang.Object) i65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertNotNull(obj_array25);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertNotNull(obj_array43);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertTrue(b50 == false);
        org.junit.Assert.assertNotNull(obj_array51);
        org.junit.Assert.assertNotNull(obj_array53);
        org.junit.Assert.assertNotNull(obj_array62);
        org.junit.Assert.assertTrue(i65 == 0);
    }

    @Test
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test229");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        boolean b21 = fixedOrderComparator7.isLocked();
        boolean b22 = fixedOrderComparator7.isLocked();
        boolean b23 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array30 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array30);
        int i35 = fixedOrderComparator34.getUnknownObjectBehavior();
        int i36 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b37 = fixedOrderComparator34.isLocked();
        int i38 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b39 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator34);
        boolean b40 = fixedOrderComparator34.isLocked();
        boolean b41 = fixedOrderComparator34.isLocked();
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(i36 == 2);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(i38 == 2);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertTrue(b41 == false);
    }

    @Test
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test230");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b12 = fixedOrderComparator10.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        boolean b19 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object obj21 = null;
        int i22 = fixedOrderComparator13.compare((java.lang.Object) 1.0d, obj21);
        boolean b23 = fixedOrderComparator13.isLocked();
        boolean b24 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator13);
        boolean b25 = fixedOrderComparator0.isLocked();
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(b25 == false);
    }

    @Test
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test231");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i11 = fixedOrderComparator10.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator13.isLocked();
        boolean b17 = fixedOrderComparator13.isLocked();
        java.lang.Object[] obj_array24 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array24);
        fixedOrderComparator25.setUnknownObjectBehavior(0);
        boolean b29 = fixedOrderComparator25.add((java.lang.Object) 1.0f);
        boolean b31 = fixedOrderComparator25.add((java.lang.Object) 1.0f);
        int i33 = fixedOrderComparator13.compare((java.lang.Object) fixedOrderComparator25, (java.lang.Object) 1.0d);
        boolean b34 = fixedOrderComparator13.isLocked();
        int i35 = fixedOrderComparator13.getUnknownObjectBehavior();
        try {
            boolean b36 = fixedOrderComparator10.addAsEqual((java.lang.Object) 2, (java.lang.Object) i35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 2);
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertNotNull(obj_array24);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertTrue(i33 == 0);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 0);
    }

    @Test
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test232");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        int i11 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object[] obj_array12 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array12);
        java.lang.Object[] obj_array20 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        java.lang.Object[] obj_array28 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        boolean b32 = fixedOrderComparator21.add((java.lang.Object) 0);
        int i33 = fixedOrderComparator8.compare((java.lang.Object) obj_array12, (java.lang.Object) 0);
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        boolean b43 = fixedOrderComparator41.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator44.setUnknownObjectBehavior(0);
        int i47 = fixedOrderComparator44.getUnknownObjectBehavior();
        fixedOrderComparator44.setUnknownObjectBehavior((int) (byte) 0);
        boolean b50 = fixedOrderComparator41.add((java.lang.Object) fixedOrderComparator44);
        java.lang.Object[] obj_array51 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array51);
        java.lang.Object[] obj_array53 = new java.lang.Object[] { fixedOrderComparator52 };
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array53);
        try {
            boolean b55 = fixedOrderComparator8.addAsEqual((java.lang.Object) fixedOrderComparator44, (java.lang.Object) obj_array53);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 0);
        org.junit.Assert.assertNotNull(obj_array12);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertTrue(i33 == (-1));
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertNotNull(obj_array51);
        org.junit.Assert.assertNotNull(obj_array53);
    }

    @Test
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test233");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array10);
        java.lang.Object[] obj_array20 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array20);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        fixedOrderComparator31.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array40);
        int i44 = fixedOrderComparator31.compare((java.lang.Object) fixedOrderComparator42, (java.lang.Object) (-1.0d));
        boolean b45 = fixedOrderComparator22.add((java.lang.Object) fixedOrderComparator31);
        boolean b46 = fixedOrderComparator31.isLocked();
        int i47 = fixedOrderComparator31.getUnknownObjectBehavior();
        int i48 = fixedOrderComparator0.compare((java.lang.Object) obj_array10, (java.lang.Object) fixedOrderComparator31);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array10);
        int i51 = fixedOrderComparator50.getUnknownObjectBehavior();
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(i48 == 0);
        org.junit.Assert.assertTrue(i51 == 2);
    }

    @Test
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test234");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        try {
            fixedOrderComparator7.setUnknownObjectBehavior(0);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
    }

    @Test
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test235");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        boolean b12 = fixedOrderComparator7.isLocked();
        try {
            fixedOrderComparator7.setUnknownObjectBehavior((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(b12 == false);
    }

    @Test
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test236");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator();
        int i35 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator34.isLocked();
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        int i39 = fixedOrderComparator12.compare((java.lang.Object) obj_array29, (java.lang.Object) fixedOrderComparator34);
        try {
            fixedOrderComparator12.setUnknownObjectBehavior((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(i39 == 0);
    }

    @Test
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test237");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        int i46 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Object obj48 = null;
        int i49 = fixedOrderComparator7.compare(obj47, obj48);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator();
        int i51 = fixedOrderComparator50.getUnknownObjectBehavior();
        boolean b52 = fixedOrderComparator50.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator();
        int i54 = fixedOrderComparator53.getUnknownObjectBehavior();
        boolean b55 = fixedOrderComparator53.isLocked();
        boolean b56 = fixedOrderComparator50.add((java.lang.Object) b55);
        boolean b57 = fixedOrderComparator50.isLocked();
        fixedOrderComparator50.setUnknownObjectBehavior((int) (byte) 0);
        try {
            boolean b60 = fixedOrderComparator7.add((java.lang.Object) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertTrue(i51 == 2);
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertTrue(i54 == 2);
        org.junit.Assert.assertTrue(b55 == false);
        org.junit.Assert.assertTrue(b56 == true);
        org.junit.Assert.assertTrue(b57 == false);
    }

    @Test
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test238");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        boolean b19 = fixedOrderComparator7.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        boolean b32 = fixedOrderComparator30.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator33.setUnknownObjectBehavior(0);
        int i36 = fixedOrderComparator33.getUnknownObjectBehavior();
        fixedOrderComparator33.setUnknownObjectBehavior((int) (byte) 0);
        boolean b39 = fixedOrderComparator30.add((java.lang.Object) fixedOrderComparator33);
        java.lang.Object obj41 = null;
        int i42 = fixedOrderComparator33.compare((java.lang.Object) 1.0d, obj41);
        boolean b43 = fixedOrderComparator33.isLocked();
        boolean b44 = fixedOrderComparator20.add((java.lang.Object) fixedOrderComparator33);
        boolean b45 = fixedOrderComparator33.isLocked();
        boolean b46 = fixedOrderComparator33.isLocked();
        int i47 = fixedOrderComparator33.getUnknownObjectBehavior();
        boolean b48 = fixedOrderComparator7.add((java.lang.Object) i47);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertTrue(i36 == 0);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(i42 == 0);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b48 == false);
    }

    @Test
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test239");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object obj16 = null;
        java.lang.Object[] obj_array23 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array23);
        fixedOrderComparator24.setUnknownObjectBehavior(0);
        boolean b28 = fixedOrderComparator24.add((java.lang.Object) 1.0f);
        java.lang.Object obj29 = null;
        java.lang.Object[] obj_array36 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        fixedOrderComparator37.setUnknownObjectBehavior(0);
        boolean b41 = fixedOrderComparator37.add((java.lang.Object) 1.0f);
        int i42 = fixedOrderComparator37.getUnknownObjectBehavior();
        int i43 = fixedOrderComparator24.compare(obj29, (java.lang.Object) i42);
        int i44 = fixedOrderComparator24.getUnknownObjectBehavior();
        boolean b45 = fixedOrderComparator24.isLocked();
        java.lang.Object[] obj_array52 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array52);
        fixedOrderComparator54.setUnknownObjectBehavior((int) (short) 0);
        int i57 = fixedOrderComparator54.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator58.setUnknownObjectBehavior(0);
        int i61 = fixedOrderComparator58.getUnknownObjectBehavior();
        int i62 = fixedOrderComparator24.compare((java.lang.Object) i57, (java.lang.Object) fixedOrderComparator58);
        int i63 = fixedOrderComparator24.getUnknownObjectBehavior();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Object obj65 = null;
        int i66 = fixedOrderComparator24.compare(obj64, obj65);
        java.lang.Object[] obj_array73 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator74 = new collections.comparators.FixedOrderComparator(obj_array73);
        java.lang.Object[] obj_array81 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array81);
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator(obj_array81);
        collections.comparators.FixedOrderComparator fixedOrderComparator84 = new collections.comparators.FixedOrderComparator(obj_array81);
        int i85 = fixedOrderComparator24.compare((java.lang.Object) obj_array73, (java.lang.Object) fixedOrderComparator84);
        boolean b86 = fixedOrderComparator24.isLocked();
        try {
            int i87 = fixedOrderComparator15.compare(obj16, (java.lang.Object) b86);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array23);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertTrue(i42 == 0);
        org.junit.Assert.assertTrue(i43 == (-1));
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertNotNull(obj_array52);
        org.junit.Assert.assertTrue(i57 == 0);
        org.junit.Assert.assertTrue(i61 == 0);
        org.junit.Assert.assertTrue(i62 == 1);
        org.junit.Assert.assertTrue(i63 == 0);
        org.junit.Assert.assertTrue(i66 == 0);
        org.junit.Assert.assertNotNull(obj_array73);
        org.junit.Assert.assertNotNull(obj_array81);
        org.junit.Assert.assertTrue(i85 == 0);
        org.junit.Assert.assertTrue(b86 == true);
    }

    @Test
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test240");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        boolean b1 = fixedOrderComparator0.isLocked();
        boolean b3 = fixedOrderComparator0.add((java.lang.Object) 10.0d);
        boolean b4 = fixedOrderComparator0.isLocked();
        int i5 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array6 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array8 = new java.lang.Object[] { fixedOrderComparator7 };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        java.lang.Object[] obj_array25 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array25);
        fixedOrderComparator26.setUnknownObjectBehavior(0);
        boolean b29 = fixedOrderComparator18.add((java.lang.Object) 0);
        fixedOrderComparator18.setUnknownObjectBehavior((int) (short) 0);
        boolean b32 = fixedOrderComparator18.isLocked();
        boolean b33 = fixedOrderComparator18.isLocked();
        boolean b34 = fixedOrderComparator18.isLocked();
        int i35 = fixedOrderComparator18.getUnknownObjectBehavior();
        try {
            int i36 = fixedOrderComparator0.compare((java.lang.Object) obj_array8, (java.lang.Object) i35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b1 == false);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertTrue(i5 == 2);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertNotNull(obj_array25);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertTrue(i35 == 0);
    }

    @Test
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test241");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        boolean b21 = fixedOrderComparator7.isLocked();
        boolean b22 = fixedOrderComparator7.isLocked();
        boolean b23 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array30 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array30);
        int i35 = fixedOrderComparator34.getUnknownObjectBehavior();
        int i36 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b37 = fixedOrderComparator34.isLocked();
        int i38 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b39 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator34);
        boolean b40 = fixedOrderComparator34.isLocked();
        boolean b41 = fixedOrderComparator34.isLocked();
        fixedOrderComparator34.setUnknownObjectBehavior((int) (short) 1);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(i36 == 2);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(i38 == 2);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertTrue(b41 == false);
    }

    @Test
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test242");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        int i11 = fixedOrderComparator8.getUnknownObjectBehavior();
        int i12 = fixedOrderComparator8.getUnknownObjectBehavior();
        try {
            fixedOrderComparator8.setUnknownObjectBehavior((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 0);
        org.junit.Assert.assertTrue(i12 == 0);
    }

    @Test
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test243");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        java.lang.Object[] obj_array52 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array52);
        fixedOrderComparator53.setUnknownObjectBehavior(0);
        boolean b57 = fixedOrderComparator53.add((java.lang.Object) 1.0f);
        boolean b59 = fixedOrderComparator53.add((java.lang.Object) 1.0f);
        boolean b60 = fixedOrderComparator53.isLocked();
        boolean b61 = fixedOrderComparator53.isLocked();
        try {
            boolean b62 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator53);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertNotNull(obj_array52);
        org.junit.Assert.assertTrue(b57 == true);
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertTrue(b60 == false);
        org.junit.Assert.assertTrue(b61 == false);
    }

    @Test
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test244");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator();
        int i35 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator34.isLocked();
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        int i39 = fixedOrderComparator12.compare((java.lang.Object) obj_array29, (java.lang.Object) fixedOrderComparator34);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array29);
        boolean b41 = fixedOrderComparator40.isLocked();
        java.lang.Object[] obj_array48 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array48);
        boolean b54 = fixedOrderComparator40.add((java.lang.Object) fixedOrderComparator53);
        try {
            fixedOrderComparator40.setUnknownObjectBehavior((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(i39 == 0);
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertNotNull(obj_array48);
        org.junit.Assert.assertTrue(b54 == true);
    }

    @Test
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test245");
        java.lang.Object[] obj_array0 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator1 = new collections.comparators.FixedOrderComparator(obj_array0);
        java.lang.Object[] obj_array2 = new java.lang.Object[] { fixedOrderComparator1 };
        collections.comparators.FixedOrderComparator fixedOrderComparator3 = new collections.comparators.FixedOrderComparator(obj_array2);
        int i4 = fixedOrderComparator3.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array0);
        org.junit.Assert.assertNotNull(obj_array2);
        org.junit.Assert.assertTrue(i4 == 2);
    }

    @Test
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test246");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array15 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array15);
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array15);
        fixedOrderComparator17.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array26);
        int i30 = fixedOrderComparator17.compare((java.lang.Object) fixedOrderComparator28, (java.lang.Object) (-1.0d));
        boolean b31 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator17);
        boolean b32 = fixedOrderComparator17.isLocked();
        try {
            fixedOrderComparator17.setUnknownObjectBehavior(2);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array15);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(b32 == true);
    }

    @Test
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test247");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b14 = fixedOrderComparator13.isLocked();
        java.lang.Object[] obj_array21 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        fixedOrderComparator22.setUnknownObjectBehavior(0);
        boolean b26 = fixedOrderComparator22.add((java.lang.Object) 1.0f);
        int i27 = fixedOrderComparator22.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator22.isLocked();
        java.lang.Object[] obj_array29 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        java.lang.Object[] obj_array31 = new java.lang.Object[] { fixedOrderComparator30 };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array31);
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array40);
        int i43 = fixedOrderComparator22.compare((java.lang.Object) fixedOrderComparator33, (java.lang.Object) obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array40);
        java.lang.Object[] obj_array52 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array52);
        fixedOrderComparator54.setUnknownObjectBehavior((int) (short) 0);
        int i57 = fixedOrderComparator54.getUnknownObjectBehavior();
        try {
            boolean b58 = fixedOrderComparator13.addAsEqual((java.lang.Object) fixedOrderComparator45, (java.lang.Object) fixedOrderComparator54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(i43 == 0);
        org.junit.Assert.assertNotNull(obj_array52);
        org.junit.Assert.assertTrue(i57 == 0);
    }

    @Test
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test248");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        boolean b1 = fixedOrderComparator0.isLocked();
        boolean b3 = fixedOrderComparator0.add((java.lang.Object) 10.0d);
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array11);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array11);
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array11);
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array11);
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array11);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array11);
        java.lang.Object[] obj_array25 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array25);
        fixedOrderComparator26.setUnknownObjectBehavior(0);
        boolean b30 = fixedOrderComparator26.add((java.lang.Object) 1.0f);
        int i31 = fixedOrderComparator26.getUnknownObjectBehavior();
        boolean b32 = fixedOrderComparator26.isLocked();
        java.lang.Object[] obj_array33 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        java.lang.Object[] obj_array35 = new java.lang.Object[] { fixedOrderComparator34 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        java.lang.Object[] obj_array44 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array44);
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array44);
        int i47 = fixedOrderComparator26.compare((java.lang.Object) fixedOrderComparator37, (java.lang.Object) obj_array44);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array44);
        try {
            int i49 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator18, (java.lang.Object) obj_array44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b1 == false);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertNotNull(obj_array25);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue(i31 == 0);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertNotNull(obj_array44);
        org.junit.Assert.assertTrue(i47 == 0);
    }

    @Test
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test249");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        fixedOrderComparator0.setUnknownObjectBehavior(1);
        boolean b9 = fixedOrderComparator0.add((java.lang.Object) (byte) 1);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        boolean b13 = fixedOrderComparator10.isLocked();
        java.lang.Object[] obj_array20 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        fixedOrderComparator21.setUnknownObjectBehavior(0);
        boolean b25 = fixedOrderComparator21.add((java.lang.Object) 1.0f);
        boolean b27 = fixedOrderComparator21.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator();
        boolean b29 = fixedOrderComparator28.isLocked();
        boolean b31 = fixedOrderComparator28.add((java.lang.Object) 10.0d);
        int i32 = fixedOrderComparator10.compare((java.lang.Object) b27, (java.lang.Object) fixedOrderComparator28);
        boolean b33 = fixedOrderComparator10.isLocked();
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator();
        int i44 = fixedOrderComparator43.getUnknownObjectBehavior();
        java.lang.Object[] obj_array51 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array51);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array51);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array51);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array51);
        boolean b56 = fixedOrderComparator43.add((java.lang.Object) fixedOrderComparator55);
        fixedOrderComparator43.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array65 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array65);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array65);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array65);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array65);
        int i70 = fixedOrderComparator69.getUnknownObjectBehavior();
        int i71 = fixedOrderComparator69.getUnknownObjectBehavior();
        boolean b72 = fixedOrderComparator69.isLocked();
        int i73 = fixedOrderComparator69.getUnknownObjectBehavior();
        int i75 = fixedOrderComparator43.compare((java.lang.Object) fixedOrderComparator69, (java.lang.Object) 1L);
        int i76 = fixedOrderComparator10.compare((java.lang.Object) obj_array40, (java.lang.Object) i75);
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator(obj_array40);
        try {
            boolean b80 = fixedOrderComparator0.addAsEqual((java.lang.Object) obj_array40, (java.lang.Object) 100.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b33 == true);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(i44 == 2);
        org.junit.Assert.assertNotNull(obj_array51);
        org.junit.Assert.assertTrue(b56 == true);
        org.junit.Assert.assertNotNull(obj_array65);
        org.junit.Assert.assertTrue(i70 == 2);
        org.junit.Assert.assertTrue(i71 == 2);
        org.junit.Assert.assertTrue(b72 == false);
        org.junit.Assert.assertTrue(i73 == 2);
        org.junit.Assert.assertTrue(i75 == 0);
        org.junit.Assert.assertTrue(i76 == 0);
    }

    @Test
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test250");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i12 = fixedOrderComparator11.getUnknownObjectBehavior();
        try {
            fixedOrderComparator11.setUnknownObjectBehavior((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i12 == 2);
    }

    @Test
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test251");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        int i12 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b13 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array14 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        java.lang.Object[] obj_array16 = new java.lang.Object[] { fixedOrderComparator15 };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array16);
        java.lang.Object[] obj_array25 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array25);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array25);
        int i28 = fixedOrderComparator7.compare((java.lang.Object) fixedOrderComparator18, (java.lang.Object) obj_array25);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array25);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator();
        int i31 = fixedOrderComparator30.getUnknownObjectBehavior();
        java.lang.Object[] obj_array38 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array38);
        boolean b43 = fixedOrderComparator30.add((java.lang.Object) fixedOrderComparator42);
        boolean b44 = fixedOrderComparator42.isLocked();
        try {
            int i46 = fixedOrderComparator29.compare((java.lang.Object) fixedOrderComparator42, (java.lang.Object) 100.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertNotNull(obj_array25);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertTrue(i31 == 2);
        org.junit.Assert.assertNotNull(obj_array38);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertTrue(b44 == false);
    }

    @Test
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test252");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        int i21 = fixedOrderComparator8.compare((java.lang.Object) fixedOrderComparator19, (java.lang.Object) (-1.0d));
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator22.setUnknownObjectBehavior(0);
        boolean b25 = fixedOrderComparator22.isLocked();
        boolean b26 = fixedOrderComparator19.add((java.lang.Object) fixedOrderComparator22);
        boolean b27 = fixedOrderComparator22.isLocked();
        try {
            fixedOrderComparator22.setUnknownObjectBehavior((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertTrue(b27 == false);
    }

    @Test
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test253");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        int i46 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Object obj48 = null;
        int i49 = fixedOrderComparator7.compare(obj47, obj48);
        try {
            fixedOrderComparator7.setUnknownObjectBehavior((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertTrue(i49 == 0);
    }

    @Test
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test254");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        int i46 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Object obj48 = null;
        int i49 = fixedOrderComparator7.compare(obj47, obj48);
        int i50 = fixedOrderComparator7.getUnknownObjectBehavior();
        try {
            fixedOrderComparator7.setUnknownObjectBehavior((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertTrue(i50 == 0);
    }

    @Test
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test255");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        try {
            fixedOrderComparator8.setUnknownObjectBehavior((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
    }

    @Test
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test256");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i14 = fixedOrderComparator13.getUnknownObjectBehavior();
        int i15 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator();
        int i19 = fixedOrderComparator18.getUnknownObjectBehavior();
        boolean b20 = fixedOrderComparator18.isLocked();
        fixedOrderComparator18.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator18.add((java.lang.Object) 10L);
        boolean b25 = fixedOrderComparator18.isLocked();
        java.lang.Object[] obj_array32 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array32);
        java.lang.Object[] obj_array47 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array47);
        boolean b54 = fixedOrderComparator40.add((java.lang.Object) obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array47);
        java.lang.Object[] obj_array62 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array62);
        boolean b65 = fixedOrderComparator55.add((java.lang.Object) obj_array62);
        try {
            boolean b66 = fixedOrderComparator13.addAsEqual((java.lang.Object) b25, (java.lang.Object) fixedOrderComparator55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i14 == 2);
        org.junit.Assert.assertTrue(i15 == 2);
        org.junit.Assert.assertTrue(i19 == 2);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertNotNull(obj_array47);
        org.junit.Assert.assertTrue(b54 == true);
        org.junit.Assert.assertNotNull(obj_array62);
        org.junit.Assert.assertTrue(b65 == true);
    }

    @Test
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test257");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj17 = null;
        boolean b18 = fixedOrderComparator7.add(obj17);
        java.lang.Object[] obj_array25 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array25);
        fixedOrderComparator26.setUnknownObjectBehavior(0);
        boolean b30 = fixedOrderComparator26.add((java.lang.Object) 1.0f);
        boolean b32 = fixedOrderComparator26.add((java.lang.Object) 1.0f);
        boolean b33 = fixedOrderComparator26.isLocked();
        boolean b34 = fixedOrderComparator26.isLocked();
        boolean b35 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator26);
        boolean b36 = fixedOrderComparator26.isLocked();
        java.lang.Object[] obj_array43 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array43);
        java.lang.Object[] obj_array51 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array51);
        boolean b54 = fixedOrderComparator52.add((java.lang.Object) (-1.0f));
        fixedOrderComparator52.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array63 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array63);
        int i67 = fixedOrderComparator66.getUnknownObjectBehavior();
        boolean b68 = fixedOrderComparator66.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array76 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array76);
        boolean b79 = fixedOrderComparator77.add((java.lang.Object) (-1.0f));
        int i80 = fixedOrderComparator77.getUnknownObjectBehavior();
        java.lang.Object[] obj_array87 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator88 = new collections.comparators.FixedOrderComparator(obj_array87);
        collections.comparators.FixedOrderComparator fixedOrderComparator89 = new collections.comparators.FixedOrderComparator(obj_array87);
        fixedOrderComparator89.setUnknownObjectBehavior((int) (short) 0);
        int i92 = fixedOrderComparator89.getUnknownObjectBehavior();
        boolean b93 = fixedOrderComparator77.add((java.lang.Object) i92);
        boolean b94 = fixedOrderComparator69.add((java.lang.Object) fixedOrderComparator77);
        int i95 = fixedOrderComparator52.compare((java.lang.Object) b68, (java.lang.Object) fixedOrderComparator69);
        int i96 = fixedOrderComparator69.getUnknownObjectBehavior();
        try {
            boolean b97 = fixedOrderComparator26.addAsEqual((java.lang.Object) fixedOrderComparator44, (java.lang.Object) fixedOrderComparator69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertNotNull(obj_array25);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertNotNull(obj_array43);
        org.junit.Assert.assertNotNull(obj_array51);
        org.junit.Assert.assertTrue(b54 == true);
        org.junit.Assert.assertNotNull(obj_array63);
        org.junit.Assert.assertTrue(i67 == 2);
        org.junit.Assert.assertTrue(b68 == false);
        org.junit.Assert.assertNotNull(obj_array76);
        org.junit.Assert.assertTrue(b79 == true);
        org.junit.Assert.assertTrue(i80 == 2);
        org.junit.Assert.assertNotNull(obj_array87);
        org.junit.Assert.assertTrue(i92 == 0);
        org.junit.Assert.assertTrue(b93 == false);
        org.junit.Assert.assertTrue(b94 == true);
        org.junit.Assert.assertTrue(i95 == 0);
        org.junit.Assert.assertTrue(i96 == 2);
    }

    @Test
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test258");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i11 = fixedOrderComparator10.getUnknownObjectBehavior();
        boolean b12 = fixedOrderComparator10.isLocked();
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 2);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(i13 == 2);
    }

    @Test
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test259");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        boolean b19 = fixedOrderComparator7.isLocked();
        boolean b20 = fixedOrderComparator7.isLocked();
        try {
            fixedOrderComparator7.setUnknownObjectBehavior(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(b20 == false);
    }

    @Test
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test260");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        boolean b10 = fixedOrderComparator7.isLocked();
        try {
            fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(b10 == false);
    }

    @Test
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test261");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        collections.comparators.FixedOrderComparator fixedOrderComparator5 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator5.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        boolean b17 = fixedOrderComparator15.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator18.setUnknownObjectBehavior(0);
        int i21 = fixedOrderComparator18.getUnknownObjectBehavior();
        fixedOrderComparator18.setUnknownObjectBehavior((int) (byte) 0);
        boolean b24 = fixedOrderComparator15.add((java.lang.Object) fixedOrderComparator18);
        java.lang.Object obj26 = null;
        int i27 = fixedOrderComparator18.compare((java.lang.Object) 1.0d, obj26);
        boolean b28 = fixedOrderComparator18.isLocked();
        boolean b29 = fixedOrderComparator5.add((java.lang.Object) fixedOrderComparator18);
        java.lang.Object[] obj_array36 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        fixedOrderComparator37.setUnknownObjectBehavior(0);
        boolean b41 = fixedOrderComparator37.add((java.lang.Object) 1.0f);
        java.lang.Object obj42 = null;
        java.lang.Object[] obj_array49 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array49);
        fixedOrderComparator50.setUnknownObjectBehavior(0);
        boolean b54 = fixedOrderComparator50.add((java.lang.Object) 1.0f);
        int i55 = fixedOrderComparator50.getUnknownObjectBehavior();
        int i56 = fixedOrderComparator37.compare(obj42, (java.lang.Object) i55);
        int i57 = fixedOrderComparator37.getUnknownObjectBehavior();
        boolean b58 = fixedOrderComparator37.isLocked();
        java.lang.Object[] obj_array65 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array65);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array65);
        fixedOrderComparator67.setUnknownObjectBehavior((int) (short) 0);
        int i70 = fixedOrderComparator67.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator71.setUnknownObjectBehavior(0);
        int i74 = fixedOrderComparator71.getUnknownObjectBehavior();
        int i75 = fixedOrderComparator37.compare((java.lang.Object) i70, (java.lang.Object) fixedOrderComparator71);
        boolean b76 = fixedOrderComparator37.isLocked();
        int i77 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator5, (java.lang.Object) b76);
        boolean b78 = fixedOrderComparator0.isLocked();
        boolean b79 = fixedOrderComparator0.isLocked();
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertNotNull(obj_array49);
        org.junit.Assert.assertTrue(b54 == true);
        org.junit.Assert.assertTrue(i55 == 0);
        org.junit.Assert.assertTrue(i56 == (-1));
        org.junit.Assert.assertTrue(i57 == 0);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertNotNull(obj_array65);
        org.junit.Assert.assertTrue(i70 == 0);
        org.junit.Assert.assertTrue(i74 == 0);
        org.junit.Assert.assertTrue(i75 == 1);
        org.junit.Assert.assertTrue(b76 == true);
        org.junit.Assert.assertTrue(i77 == 0);
        org.junit.Assert.assertTrue(b78 == true);
        org.junit.Assert.assertTrue(b79 == true);
    }

    @Test
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test262");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b12 = fixedOrderComparator10.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        boolean b19 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object obj21 = null;
        int i22 = fixedOrderComparator13.compare((java.lang.Object) 1.0d, obj21);
        boolean b23 = fixedOrderComparator13.isLocked();
        boolean b24 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object[] obj_array31 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array31);
        fixedOrderComparator33.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        int i46 = fixedOrderComparator33.compare((java.lang.Object) fixedOrderComparator44, (java.lang.Object) (-1.0d));
        boolean b47 = fixedOrderComparator44.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator48.setUnknownObjectBehavior(0);
        boolean b51 = fixedOrderComparator48.isLocked();
        java.lang.Object[] obj_array58 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array58);
        fixedOrderComparator59.setUnknownObjectBehavior(0);
        boolean b63 = fixedOrderComparator59.add((java.lang.Object) 1.0f);
        boolean b65 = fixedOrderComparator59.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator();
        boolean b67 = fixedOrderComparator66.isLocked();
        boolean b69 = fixedOrderComparator66.add((java.lang.Object) 10.0d);
        int i70 = fixedOrderComparator48.compare((java.lang.Object) b65, (java.lang.Object) fixedOrderComparator66);
        boolean b71 = fixedOrderComparator48.isLocked();
        int i72 = fixedOrderComparator0.compare((java.lang.Object) b47, (java.lang.Object) fixedOrderComparator48);
        try {
            boolean b74 = fixedOrderComparator0.add((java.lang.Object) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertTrue(b47 == false);
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertNotNull(obj_array58);
        org.junit.Assert.assertTrue(b63 == true);
        org.junit.Assert.assertTrue(b65 == false);
        org.junit.Assert.assertTrue(b67 == false);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertTrue(i70 == 0);
        org.junit.Assert.assertTrue(b71 == true);
        org.junit.Assert.assertTrue(i72 == 0);
    }

    @Test
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test263");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        boolean b1 = fixedOrderComparator0.isLocked();
        java.lang.Object obj2 = null;
        boolean b3 = fixedOrderComparator0.add(obj2);
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        java.lang.Object obj17 = null;
        java.lang.Object[] obj_array24 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array24);
        fixedOrderComparator25.setUnknownObjectBehavior(0);
        boolean b29 = fixedOrderComparator25.add((java.lang.Object) 1.0f);
        int i30 = fixedOrderComparator25.getUnknownObjectBehavior();
        int i31 = fixedOrderComparator12.compare(obj17, (java.lang.Object) i30);
        int i32 = fixedOrderComparator12.getUnknownObjectBehavior();
        boolean b33 = fixedOrderComparator12.isLocked();
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array40);
        fixedOrderComparator42.setUnknownObjectBehavior((int) (short) 0);
        int i45 = fixedOrderComparator42.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator46.setUnknownObjectBehavior(0);
        int i49 = fixedOrderComparator46.getUnknownObjectBehavior();
        int i50 = fixedOrderComparator12.compare((java.lang.Object) i45, (java.lang.Object) fixedOrderComparator46);
        int i51 = fixedOrderComparator12.getUnknownObjectBehavior();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Object obj53 = null;
        int i54 = fixedOrderComparator12.compare(obj52, obj53);
        java.lang.Object[] obj_array61 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array61);
        java.lang.Object[] obj_array69 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array69);
        int i73 = fixedOrderComparator12.compare((java.lang.Object) obj_array61, (java.lang.Object) fixedOrderComparator72);
        java.lang.Object[] obj_array80 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array80);
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array80);
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator(obj_array80);
        collections.comparators.FixedOrderComparator fixedOrderComparator84 = new collections.comparators.FixedOrderComparator(obj_array80);
        int i85 = fixedOrderComparator84.getUnknownObjectBehavior();
        try {
            boolean b86 = fixedOrderComparator0.addAsEqual((java.lang.Object) i73, (java.lang.Object) fixedOrderComparator84);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b1 == false);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertNotNull(obj_array24);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertTrue(i31 == (-1));
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b33 == true);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(i45 == 0);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertTrue(i50 == 1);
        org.junit.Assert.assertTrue(i51 == 0);
        org.junit.Assert.assertTrue(i54 == 0);
        org.junit.Assert.assertNotNull(obj_array61);
        org.junit.Assert.assertNotNull(obj_array69);
        org.junit.Assert.assertTrue(i73 == 0);
        org.junit.Assert.assertNotNull(obj_array80);
        org.junit.Assert.assertTrue(i85 == 2);
    }

    @Test
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test264");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        int i10 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        fixedOrderComparator19.setUnknownObjectBehavior((int) (short) 0);
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        boolean b23 = fixedOrderComparator7.add((java.lang.Object) i22);
        int i24 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i25 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array33 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array33);
        fixedOrderComparator35.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator35.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array46 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator49.setUnknownObjectBehavior(0);
        int i52 = fixedOrderComparator49.getUnknownObjectBehavior();
        boolean b54 = fixedOrderComparator48.addAsEqual((java.lang.Object) i52, (java.lang.Object) (short) 1);
        int i55 = fixedOrderComparator48.getUnknownObjectBehavior();
        java.lang.Object[] obj_array62 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array62);
        boolean b64 = fixedOrderComparator63.isLocked();
        boolean b65 = fixedOrderComparator48.add((java.lang.Object) fixedOrderComparator63);
        boolean b66 = fixedOrderComparator35.add((java.lang.Object) fixedOrderComparator48);
        try {
            boolean b67 = fixedOrderComparator7.addAsEqual((java.lang.Object) 100.0f, (java.lang.Object) b66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i10 == 2);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue(i24 == 2);
        org.junit.Assert.assertTrue(i25 == 2);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertTrue(i52 == 0);
        org.junit.Assert.assertTrue(b54 == true);
        org.junit.Assert.assertTrue(i55 == 2);
        org.junit.Assert.assertNotNull(obj_array62);
        org.junit.Assert.assertTrue(b64 == false);
        org.junit.Assert.assertTrue(b65 == true);
        org.junit.Assert.assertTrue(b66 == true);
    }

    @Test
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test265");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        int i12 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b13 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array14 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        java.lang.Object[] obj_array16 = new java.lang.Object[] { fixedOrderComparator15 };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array16);
        java.lang.Object[] obj_array25 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array25);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array25);
        int i28 = fixedOrderComparator7.compare((java.lang.Object) fixedOrderComparator18, (java.lang.Object) obj_array25);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array25);
        java.lang.Object[] obj_array36 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array36);
        fixedOrderComparator38.setUnknownObjectBehavior((int) (short) 0);
        int i41 = fixedOrderComparator38.getUnknownObjectBehavior();
        java.lang.Object obj43 = null;
        boolean b44 = fixedOrderComparator38.addAsEqual((java.lang.Object) 10.0f, obj43);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator45.setUnknownObjectBehavior(0);
        int i48 = fixedOrderComparator45.getUnknownObjectBehavior();
        fixedOrderComparator45.setUnknownObjectBehavior((int) (byte) 0);
        boolean b51 = fixedOrderComparator45.isLocked();
        int i52 = fixedOrderComparator45.getUnknownObjectBehavior();
        java.lang.Object[] obj_array59 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array59);
        int i63 = fixedOrderComparator62.getUnknownObjectBehavior();
        int i64 = fixedOrderComparator38.compare((java.lang.Object) fixedOrderComparator45, (java.lang.Object) i63);
        boolean b66 = fixedOrderComparator45.add((java.lang.Object) (short) 0);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator();
        int i68 = fixedOrderComparator67.getUnknownObjectBehavior();
        boolean b69 = fixedOrderComparator67.isLocked();
        fixedOrderComparator67.setUnknownObjectBehavior(0);
        boolean b73 = fixedOrderComparator67.add((java.lang.Object) 10L);
        boolean b74 = fixedOrderComparator67.isLocked();
        boolean b75 = fixedOrderComparator67.isLocked();
        try {
            boolean b76 = fixedOrderComparator29.addAsEqual((java.lang.Object) fixedOrderComparator45, (java.lang.Object) fixedOrderComparator67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertNotNull(obj_array25);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertTrue(i41 == 0);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertTrue(i48 == 0);
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertTrue(i52 == 0);
        org.junit.Assert.assertNotNull(obj_array59);
        org.junit.Assert.assertTrue(i63 == 2);
        org.junit.Assert.assertTrue(i64 == 0);
        org.junit.Assert.assertTrue(b66 == true);
        org.junit.Assert.assertTrue(i68 == 2);
        org.junit.Assert.assertTrue(b69 == false);
        org.junit.Assert.assertTrue(b73 == true);
        org.junit.Assert.assertTrue(b74 == false);
        org.junit.Assert.assertTrue(b75 == false);
    }

    @Test
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test266");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array19 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator21.setUnknownObjectBehavior((int) (short) 0);
        int i24 = fixedOrderComparator7.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator21);
        int i25 = fixedOrderComparator21.getUnknownObjectBehavior();
        fixedOrderComparator21.setUnknownObjectBehavior(1);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator28.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array37 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array37);
        boolean b40 = fixedOrderComparator38.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        fixedOrderComparator41.setUnknownObjectBehavior((int) (byte) 0);
        boolean b47 = fixedOrderComparator38.add((java.lang.Object) fixedOrderComparator41);
        java.lang.Object obj49 = null;
        int i50 = fixedOrderComparator41.compare((java.lang.Object) 1.0d, obj49);
        boolean b51 = fixedOrderComparator41.isLocked();
        boolean b52 = fixedOrderComparator28.add((java.lang.Object) fixedOrderComparator41);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator53.setUnknownObjectBehavior(0);
        boolean b56 = fixedOrderComparator53.isLocked();
        boolean b57 = fixedOrderComparator53.isLocked();
        java.lang.Object[] obj_array64 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array64);
        fixedOrderComparator65.setUnknownObjectBehavior(0);
        boolean b69 = fixedOrderComparator65.add((java.lang.Object) 1.0f);
        boolean b71 = fixedOrderComparator65.add((java.lang.Object) 1.0f);
        int i73 = fixedOrderComparator53.compare((java.lang.Object) fixedOrderComparator65, (java.lang.Object) 1.0d);
        int i74 = fixedOrderComparator53.getUnknownObjectBehavior();
        try {
            boolean b75 = fixedOrderComparator21.addAsEqual((java.lang.Object) fixedOrderComparator41, (java.lang.Object) i74);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertNotNull(obj_array37);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertTrue(i50 == 0);
        org.junit.Assert.assertTrue(b51 == true);
        org.junit.Assert.assertTrue(b52 == true);
        org.junit.Assert.assertTrue(b56 == false);
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertNotNull(obj_array64);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertTrue(b71 == false);
        org.junit.Assert.assertTrue(i73 == 0);
        org.junit.Assert.assertTrue(i74 == 0);
    }

    @Test
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test267");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b28 = fixedOrderComparator14.add((java.lang.Object) obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array21);
        java.lang.Object[] obj_array36 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array36);
        boolean b39 = fixedOrderComparator29.add((java.lang.Object) obj_array36);
        java.lang.Object[] obj_array46 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array46);
        int i53 = fixedOrderComparator52.getUnknownObjectBehavior();
        java.lang.Object[] obj_array60 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array60);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array60);
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator63.setUnknownObjectBehavior(0);
        int i66 = fixedOrderComparator63.getUnknownObjectBehavior();
        boolean b68 = fixedOrderComparator62.addAsEqual((java.lang.Object) i66, (java.lang.Object) (short) 1);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator69.setUnknownObjectBehavior(0);
        int i72 = fixedOrderComparator69.getUnknownObjectBehavior();
        fixedOrderComparator69.setUnknownObjectBehavior((int) (byte) 0);
        fixedOrderComparator69.setUnknownObjectBehavior(1);
        boolean b77 = fixedOrderComparator62.add((java.lang.Object) 1);
        boolean b78 = fixedOrderComparator52.add((java.lang.Object) 1);
        java.lang.Object[] obj_array79 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array79);
        java.lang.Object[] obj_array81 = new java.lang.Object[] { fixedOrderComparator80 };
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array81);
        try {
            boolean b83 = fixedOrderComparator29.addAsEqual((java.lang.Object) b78, (java.lang.Object) fixedOrderComparator82);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertTrue(i53 == 2);
        org.junit.Assert.assertNotNull(obj_array60);
        org.junit.Assert.assertTrue(i66 == 0);
        org.junit.Assert.assertTrue(b68 == true);
        org.junit.Assert.assertTrue(i72 == 0);
        org.junit.Assert.assertTrue(b77 == true);
        org.junit.Assert.assertTrue(b78 == true);
        org.junit.Assert.assertNotNull(obj_array79);
        org.junit.Assert.assertNotNull(obj_array81);
    }

    @Test
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test268");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array18 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array18);
        int i22 = fixedOrderComparator21.getUnknownObjectBehavior();
        boolean b23 = fixedOrderComparator21.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array31 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        boolean b34 = fixedOrderComparator32.add((java.lang.Object) (-1.0f));
        int i35 = fixedOrderComparator32.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        fixedOrderComparator44.setUnknownObjectBehavior((int) (short) 0);
        int i47 = fixedOrderComparator44.getUnknownObjectBehavior();
        boolean b48 = fixedOrderComparator32.add((java.lang.Object) i47);
        boolean b49 = fixedOrderComparator24.add((java.lang.Object) fixedOrderComparator32);
        int i50 = fixedOrderComparator7.compare((java.lang.Object) b23, (java.lang.Object) fixedOrderComparator24);
        java.lang.Object[] obj_array58 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array58);
        java.lang.Object[] obj_array63 = new java.lang.Object[] { fixedOrderComparator24, (byte) 10, obj_array58 };
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array58);
        int i65 = fixedOrderComparator64.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertTrue(i22 == 2);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(i50 == 0);
        org.junit.Assert.assertNotNull(obj_array58);
        org.junit.Assert.assertNotNull(obj_array63);
        org.junit.Assert.assertTrue(i65 == 2);
    }

    @Test
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test269");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b28 = fixedOrderComparator14.add((java.lang.Object) obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array21);
        java.lang.Object[] obj_array38 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array38);
        boolean b41 = fixedOrderComparator39.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator42.setUnknownObjectBehavior(0);
        int i45 = fixedOrderComparator42.getUnknownObjectBehavior();
        fixedOrderComparator42.setUnknownObjectBehavior((int) (byte) 0);
        boolean b48 = fixedOrderComparator39.add((java.lang.Object) fixedOrderComparator42);
        java.lang.Object obj49 = null;
        boolean b50 = fixedOrderComparator39.add(obj49);
        java.lang.Object[] obj_array57 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array57);
        fixedOrderComparator58.setUnknownObjectBehavior(0);
        boolean b62 = fixedOrderComparator58.add((java.lang.Object) 1.0f);
        boolean b64 = fixedOrderComparator58.add((java.lang.Object) 1.0f);
        boolean b65 = fixedOrderComparator58.isLocked();
        boolean b66 = fixedOrderComparator58.isLocked();
        boolean b67 = fixedOrderComparator39.add((java.lang.Object) fixedOrderComparator58);
        try {
            boolean b68 = fixedOrderComparator30.addAsEqual((java.lang.Object) (-1.0f), (java.lang.Object) fixedOrderComparator58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array38);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertTrue(i45 == 0);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertNotNull(obj_array57);
        org.junit.Assert.assertTrue(b62 == true);
        org.junit.Assert.assertTrue(b64 == false);
        org.junit.Assert.assertTrue(b65 == false);
        org.junit.Assert.assertTrue(b66 == false);
        org.junit.Assert.assertTrue(b67 == true);
    }

    @Test
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test270");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i11 = fixedOrderComparator10.getUnknownObjectBehavior();
        int i12 = fixedOrderComparator10.getUnknownObjectBehavior();
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator14.setUnknownObjectBehavior(0);
        int i17 = fixedOrderComparator14.getUnknownObjectBehavior();
        fixedOrderComparator14.setUnknownObjectBehavior((int) (byte) 0);
        boolean b21 = fixedOrderComparator14.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array28 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        boolean b31 = fixedOrderComparator29.add((java.lang.Object) (-1.0f));
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator();
        int i33 = fixedOrderComparator32.getUnknownObjectBehavior();
        boolean b34 = fixedOrderComparator32.isLocked();
        fixedOrderComparator32.setUnknownObjectBehavior(0);
        int i37 = fixedOrderComparator14.compare((java.lang.Object) fixedOrderComparator29, (java.lang.Object) 0);
        java.lang.Object[] obj_array44 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array44);
        fixedOrderComparator45.setUnknownObjectBehavior(0);
        boolean b48 = fixedOrderComparator29.add((java.lang.Object) fixedOrderComparator45);
        boolean b49 = fixedOrderComparator10.add((java.lang.Object) b48);
        try {
            fixedOrderComparator10.setUnknownObjectBehavior((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 2);
        org.junit.Assert.assertTrue(i12 == 2);
        org.junit.Assert.assertTrue(i13 == 2);
        org.junit.Assert.assertTrue(i17 == 0);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(i33 == 2);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertTrue(i37 == 0);
        org.junit.Assert.assertNotNull(obj_array44);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertTrue(b49 == true);
    }

    @Test
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test271");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator3 = new collections.comparators.FixedOrderComparator();
        int i4 = fixedOrderComparator3.getUnknownObjectBehavior();
        boolean b5 = fixedOrderComparator3.isLocked();
        boolean b6 = fixedOrderComparator0.add((java.lang.Object) b5);
        boolean b7 = fixedOrderComparator0.isLocked();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        try {
            fixedOrderComparator0.setUnknownObjectBehavior((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(i4 == 2);
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertTrue(b7 == false);
    }

    @Test
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test272");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array19 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator21.setUnknownObjectBehavior((int) (short) 0);
        int i24 = fixedOrderComparator7.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator21);
        int i25 = fixedOrderComparator21.getUnknownObjectBehavior();
        try {
            fixedOrderComparator21.setUnknownObjectBehavior(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertTrue(i25 == 0);
    }

    @Test
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test273");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj17 = null;
        boolean b18 = fixedOrderComparator7.add(obj17);
        java.lang.Object[] obj_array25 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array25);
        fixedOrderComparator26.setUnknownObjectBehavior(0);
        boolean b30 = fixedOrderComparator26.add((java.lang.Object) 1.0f);
        boolean b32 = fixedOrderComparator26.add((java.lang.Object) 1.0f);
        boolean b33 = fixedOrderComparator26.isLocked();
        boolean b34 = fixedOrderComparator26.isLocked();
        boolean b35 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator26);
        try {
            fixedOrderComparator7.setUnknownObjectBehavior((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertNotNull(obj_array25);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertTrue(b35 == true);
    }

    @Test
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test274");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator();
        int i35 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator34.isLocked();
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        int i39 = fixedOrderComparator12.compare((java.lang.Object) obj_array29, (java.lang.Object) fixedOrderComparator34);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array29);
        boolean b41 = fixedOrderComparator40.isLocked();
        java.lang.Object[] obj_array48 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array48);
        boolean b54 = fixedOrderComparator40.add((java.lang.Object) fixedOrderComparator53);
        try {
            fixedOrderComparator40.setUnknownObjectBehavior((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(i39 == 0);
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertNotNull(obj_array48);
        org.junit.Assert.assertTrue(b54 == true);
    }

    @Test
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test275");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array18 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array18);
        int i22 = fixedOrderComparator21.getUnknownObjectBehavior();
        boolean b23 = fixedOrderComparator21.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array31 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        boolean b34 = fixedOrderComparator32.add((java.lang.Object) (-1.0f));
        int i35 = fixedOrderComparator32.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        fixedOrderComparator44.setUnknownObjectBehavior((int) (short) 0);
        int i47 = fixedOrderComparator44.getUnknownObjectBehavior();
        boolean b48 = fixedOrderComparator32.add((java.lang.Object) i47);
        boolean b49 = fixedOrderComparator24.add((java.lang.Object) fixedOrderComparator32);
        int i50 = fixedOrderComparator7.compare((java.lang.Object) b23, (java.lang.Object) fixedOrderComparator24);
        java.lang.Object[] obj_array58 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array58);
        java.lang.Object[] obj_array63 = new java.lang.Object[] { fixedOrderComparator24, (byte) 10, obj_array58 };
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array58);
        boolean b66 = fixedOrderComparator65.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertTrue(i22 == 2);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(i50 == 0);
        org.junit.Assert.assertNotNull(obj_array58);
        org.junit.Assert.assertNotNull(obj_array63);
        org.junit.Assert.assertTrue(b66 == false);
    }

    @Test
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test276");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i12 = fixedOrderComparator11.getUnknownObjectBehavior();
        java.lang.Object[] obj_array19 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array19);
        int i27 = fixedOrderComparator26.getUnknownObjectBehavior();
        java.lang.Object[] obj_array34 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array34);
        int i41 = fixedOrderComparator40.getUnknownObjectBehavior();
        boolean b42 = fixedOrderComparator26.add((java.lang.Object) fixedOrderComparator40);
        java.lang.Object[] obj_array49 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array49);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array49);
        fixedOrderComparator51.setUnknownObjectBehavior((int) (short) 0);
        int i54 = fixedOrderComparator51.getUnknownObjectBehavior();
        java.lang.Object[] obj_array55 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        java.lang.Object[] obj_array63 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array63);
        java.lang.Object[] obj_array71 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array71);
        fixedOrderComparator72.setUnknownObjectBehavior(0);
        boolean b75 = fixedOrderComparator64.add((java.lang.Object) 0);
        int i76 = fixedOrderComparator51.compare((java.lang.Object) obj_array55, (java.lang.Object) 0);
        try {
            int i77 = fixedOrderComparator11.compare((java.lang.Object) fixedOrderComparator40, (java.lang.Object) i76);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i12 == 2);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(i27 == 2);
        org.junit.Assert.assertNotNull(obj_array34);
        org.junit.Assert.assertTrue(i41 == 2);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertNotNull(obj_array49);
        org.junit.Assert.assertTrue(i54 == 0);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertNotNull(obj_array63);
        org.junit.Assert.assertNotNull(obj_array71);
        org.junit.Assert.assertTrue(b75 == false);
        org.junit.Assert.assertTrue(i76 == (-1));
    }

    @Test
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test277");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        boolean b21 = fixedOrderComparator7.isLocked();
        boolean b22 = fixedOrderComparator7.isLocked();
        boolean b23 = fixedOrderComparator7.isLocked();
        int i24 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i25 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array32 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        fixedOrderComparator33.setUnknownObjectBehavior(0);
        boolean b37 = fixedOrderComparator33.add((java.lang.Object) 1.0f);
        java.lang.Object obj38 = null;
        java.lang.Object[] obj_array45 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array45);
        fixedOrderComparator46.setUnknownObjectBehavior(0);
        boolean b50 = fixedOrderComparator46.add((java.lang.Object) 1.0f);
        int i51 = fixedOrderComparator46.getUnknownObjectBehavior();
        int i52 = fixedOrderComparator33.compare(obj38, (java.lang.Object) i51);
        java.lang.Object[] obj_array59 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array59);
        java.lang.Object[] obj_array62 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array62);
        boolean b64 = fixedOrderComparator61.add((java.lang.Object) obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array62);
        boolean b68 = fixedOrderComparator7.addAsEqual((java.lang.Object) i51, (java.lang.Object) obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array62);
        try {
            fixedOrderComparator69.setUnknownObjectBehavior(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertNotNull(obj_array45);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertTrue(i51 == 0);
        org.junit.Assert.assertTrue(i52 == (-1));
        org.junit.Assert.assertNotNull(obj_array59);
        org.junit.Assert.assertNotNull(obj_array62);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue(b68 == true);
    }

    @Test
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test278");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        int i6 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i7 = fixedOrderComparator0.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator8.setUnknownObjectBehavior(0);
        int i11 = fixedOrderComparator8.getUnknownObjectBehavior();
        fixedOrderComparator8.setUnknownObjectBehavior((int) (byte) 0);
        boolean b15 = fixedOrderComparator8.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b25 = fixedOrderComparator23.add((java.lang.Object) (-1.0f));
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator();
        int i27 = fixedOrderComparator26.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator26.isLocked();
        fixedOrderComparator26.setUnknownObjectBehavior(0);
        int i31 = fixedOrderComparator8.compare((java.lang.Object) fixedOrderComparator23, (java.lang.Object) 0);
        java.lang.Object[] obj_array38 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array38);
        fixedOrderComparator39.setUnknownObjectBehavior(0);
        boolean b43 = fixedOrderComparator39.add((java.lang.Object) 1.0f);
        int i44 = fixedOrderComparator39.getUnknownObjectBehavior();
        try {
            boolean b45 = fixedOrderComparator0.addAsEqual((java.lang.Object) 0, (java.lang.Object) i44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(i6 == 0);
        org.junit.Assert.assertTrue(i7 == 0);
        org.junit.Assert.assertTrue(i11 == 0);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(i27 == 2);
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertTrue(i31 == 0);
        org.junit.Assert.assertNotNull(obj_array38);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertTrue(i44 == 0);
    }

    @Test
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test279");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i9 = fixedOrderComparator8.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        fixedOrderComparator10.setUnknownObjectBehavior(1);
        boolean b18 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator10);
        boolean b19 = fixedOrderComparator10.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i9 == 2);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertTrue(b19 == false);
    }

    @Test
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test280");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array10);
        java.lang.Object[] obj_array20 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array20);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        fixedOrderComparator31.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array40);
        int i44 = fixedOrderComparator31.compare((java.lang.Object) fixedOrderComparator42, (java.lang.Object) (-1.0d));
        boolean b45 = fixedOrderComparator22.add((java.lang.Object) fixedOrderComparator31);
        boolean b46 = fixedOrderComparator31.isLocked();
        int i47 = fixedOrderComparator31.getUnknownObjectBehavior();
        int i48 = fixedOrderComparator0.compare((java.lang.Object) obj_array10, (java.lang.Object) fixedOrderComparator31);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array10);
        try {
            fixedOrderComparator49.setUnknownObjectBehavior((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(i48 == 0);
    }

    @Test
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test281");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator6 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator6.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array15 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array15);
        boolean b18 = fixedOrderComparator16.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator19.setUnknownObjectBehavior(0);
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        fixedOrderComparator19.setUnknownObjectBehavior((int) (byte) 0);
        boolean b25 = fixedOrderComparator16.add((java.lang.Object) fixedOrderComparator19);
        java.lang.Object obj27 = null;
        int i28 = fixedOrderComparator19.compare((java.lang.Object) 1.0d, obj27);
        boolean b29 = fixedOrderComparator19.isLocked();
        boolean b30 = fixedOrderComparator6.add((java.lang.Object) fixedOrderComparator19);
        java.lang.Object[] obj_array37 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array37);
        fixedOrderComparator39.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array48 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array48);
        int i52 = fixedOrderComparator39.compare((java.lang.Object) fixedOrderComparator50, (java.lang.Object) (-1.0d));
        boolean b53 = fixedOrderComparator50.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator54.setUnknownObjectBehavior(0);
        boolean b57 = fixedOrderComparator54.isLocked();
        java.lang.Object[] obj_array64 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array64);
        fixedOrderComparator65.setUnknownObjectBehavior(0);
        boolean b69 = fixedOrderComparator65.add((java.lang.Object) 1.0f);
        boolean b71 = fixedOrderComparator65.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator();
        boolean b73 = fixedOrderComparator72.isLocked();
        boolean b75 = fixedOrderComparator72.add((java.lang.Object) 10.0d);
        int i76 = fixedOrderComparator54.compare((java.lang.Object) b71, (java.lang.Object) fixedOrderComparator72);
        boolean b77 = fixedOrderComparator54.isLocked();
        int i78 = fixedOrderComparator6.compare((java.lang.Object) b53, (java.lang.Object) fixedOrderComparator54);
        int i79 = fixedOrderComparator0.compare((java.lang.Object) 100.0f, (java.lang.Object) fixedOrderComparator6);
        try {
            fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array15);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertNotNull(obj_array37);
        org.junit.Assert.assertNotNull(obj_array48);
        org.junit.Assert.assertTrue(i52 == 0);
        org.junit.Assert.assertTrue(b53 == false);
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertNotNull(obj_array64);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertTrue(b71 == false);
        org.junit.Assert.assertTrue(b73 == false);
        org.junit.Assert.assertTrue(b75 == true);
        org.junit.Assert.assertTrue(i76 == 0);
        org.junit.Assert.assertTrue(b77 == true);
        org.junit.Assert.assertTrue(i78 == 0);
        org.junit.Assert.assertTrue(i79 == 0);
    }

    @Test
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test282");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        int i21 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b22 = fixedOrderComparator0.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator23.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array32 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        boolean b35 = fixedOrderComparator33.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator36.setUnknownObjectBehavior(0);
        int i39 = fixedOrderComparator36.getUnknownObjectBehavior();
        fixedOrderComparator36.setUnknownObjectBehavior((int) (byte) 0);
        boolean b42 = fixedOrderComparator33.add((java.lang.Object) fixedOrderComparator36);
        java.lang.Object obj44 = null;
        int i45 = fixedOrderComparator36.compare((java.lang.Object) 1.0d, obj44);
        boolean b46 = fixedOrderComparator36.isLocked();
        boolean b47 = fixedOrderComparator23.add((java.lang.Object) fixedOrderComparator36);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        fixedOrderComparator55.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array64 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator67.setUnknownObjectBehavior(0);
        int i70 = fixedOrderComparator67.getUnknownObjectBehavior();
        boolean b72 = fixedOrderComparator66.addAsEqual((java.lang.Object) i70, (java.lang.Object) (short) 1);
        int i74 = fixedOrderComparator55.compare((java.lang.Object) fixedOrderComparator66, (java.lang.Object) '#');
        int i75 = fixedOrderComparator0.compare((java.lang.Object) b47, (java.lang.Object) '#');
        try {
            fixedOrderComparator0.setUnknownObjectBehavior(2);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertTrue(i39 == 0);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertTrue(i45 == 0);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertNotNull(obj_array64);
        org.junit.Assert.assertTrue(i70 == 0);
        org.junit.Assert.assertTrue(b72 == true);
        org.junit.Assert.assertTrue(i74 == 0);
        org.junit.Assert.assertTrue(i75 == 0);
    }

    @Test
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test283");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i10 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b11 = fixedOrderComparator9.isLocked();
        int i12 = fixedOrderComparator9.getUnknownObjectBehavior();
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array19);
        boolean b24 = fixedOrderComparator9.add((java.lang.Object) fixedOrderComparator23);
        try {
            fixedOrderComparator23.setUnknownObjectBehavior((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i10 == 2);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertTrue(i12 == 2);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
    }

    @Test
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test284");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b12 = fixedOrderComparator10.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        boolean b19 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object obj21 = null;
        int i22 = fixedOrderComparator13.compare((java.lang.Object) 1.0d, obj21);
        boolean b23 = fixedOrderComparator13.isLocked();
        boolean b24 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object[] obj_array31 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array31);
        fixedOrderComparator33.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        int i46 = fixedOrderComparator33.compare((java.lang.Object) fixedOrderComparator44, (java.lang.Object) (-1.0d));
        boolean b47 = fixedOrderComparator44.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator48.setUnknownObjectBehavior(0);
        boolean b51 = fixedOrderComparator48.isLocked();
        java.lang.Object[] obj_array58 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array58);
        fixedOrderComparator59.setUnknownObjectBehavior(0);
        boolean b63 = fixedOrderComparator59.add((java.lang.Object) 1.0f);
        boolean b65 = fixedOrderComparator59.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator();
        boolean b67 = fixedOrderComparator66.isLocked();
        boolean b69 = fixedOrderComparator66.add((java.lang.Object) 10.0d);
        int i70 = fixedOrderComparator48.compare((java.lang.Object) b65, (java.lang.Object) fixedOrderComparator66);
        boolean b71 = fixedOrderComparator48.isLocked();
        int i72 = fixedOrderComparator0.compare((java.lang.Object) b47, (java.lang.Object) fixedOrderComparator48);
        try {
            fixedOrderComparator48.setUnknownObjectBehavior((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertTrue(b47 == false);
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertNotNull(obj_array58);
        org.junit.Assert.assertTrue(b63 == true);
        org.junit.Assert.assertTrue(b65 == false);
        org.junit.Assert.assertTrue(b67 == false);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertTrue(i70 == 0);
        org.junit.Assert.assertTrue(b71 == true);
        org.junit.Assert.assertTrue(i72 == 0);
    }

    @Test
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test285");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator8.isLocked();
        boolean b10 = fixedOrderComparator8.isLocked();
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        boolean b20 = fixedOrderComparator18.add((java.lang.Object) (-1.0f));
        fixedOrderComparator18.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array29);
        int i33 = fixedOrderComparator32.getUnknownObjectBehavior();
        boolean b34 = fixedOrderComparator32.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        boolean b45 = fixedOrderComparator43.add((java.lang.Object) (-1.0f));
        int i46 = fixedOrderComparator43.getUnknownObjectBehavior();
        java.lang.Object[] obj_array53 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array53);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array53);
        fixedOrderComparator55.setUnknownObjectBehavior((int) (short) 0);
        int i58 = fixedOrderComparator55.getUnknownObjectBehavior();
        boolean b59 = fixedOrderComparator43.add((java.lang.Object) i58);
        boolean b60 = fixedOrderComparator35.add((java.lang.Object) fixedOrderComparator43);
        int i61 = fixedOrderComparator18.compare((java.lang.Object) b34, (java.lang.Object) fixedOrderComparator35);
        java.lang.Object[] obj_array69 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator(obj_array69);
        java.lang.Object[] obj_array74 = new java.lang.Object[] { fixedOrderComparator35, (byte) 10, obj_array69 };
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array69);
        boolean b78 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator77);
        try {
            fixedOrderComparator77.setUnknownObjectBehavior((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertTrue(b10 == false);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i33 == 2);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(i46 == 2);
        org.junit.Assert.assertNotNull(obj_array53);
        org.junit.Assert.assertTrue(i58 == 0);
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertTrue(i61 == 0);
        org.junit.Assert.assertNotNull(obj_array69);
        org.junit.Assert.assertNotNull(obj_array74);
        org.junit.Assert.assertTrue(b78 == true);
    }

    @Test
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test286");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b12 = fixedOrderComparator10.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        boolean b19 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object obj21 = null;
        int i22 = fixedOrderComparator13.compare((java.lang.Object) 1.0d, obj21);
        boolean b23 = fixedOrderComparator13.isLocked();
        boolean b24 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator13);
        boolean b25 = fixedOrderComparator13.isLocked();
        boolean b26 = fixedOrderComparator13.isLocked();
        int i27 = fixedOrderComparator13.getUnknownObjectBehavior();
        int i30 = fixedOrderComparator13.compare((java.lang.Object) ' ', (java.lang.Object) 10L);
        int i31 = fixedOrderComparator13.getUnknownObjectBehavior();
        java.lang.Object[] obj_array38 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array38);
        try {
            boolean b41 = fixedOrderComparator13.add((java.lang.Object) obj_array38);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertTrue(i31 == 0);
        org.junit.Assert.assertNotNull(obj_array38);
    }

    @Test
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test287");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        boolean b19 = fixedOrderComparator7.isLocked();
        try {
            fixedOrderComparator7.setUnknownObjectBehavior((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b19 == false);
    }

    @Test
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test288");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj18 = null;
        int i19 = fixedOrderComparator10.compare((java.lang.Object) 1.0d, obj18);
        boolean b20 = fixedOrderComparator10.isLocked();
        boolean b21 = fixedOrderComparator10.isLocked();
        try {
            fixedOrderComparator10.setUnknownObjectBehavior(100);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertTrue(b21 == true);
    }

    @Test
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test289");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array10);
        java.lang.Object[] obj_array20 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array20);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        fixedOrderComparator31.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array40);
        int i44 = fixedOrderComparator31.compare((java.lang.Object) fixedOrderComparator42, (java.lang.Object) (-1.0d));
        boolean b45 = fixedOrderComparator22.add((java.lang.Object) fixedOrderComparator31);
        boolean b46 = fixedOrderComparator31.isLocked();
        int i47 = fixedOrderComparator31.getUnknownObjectBehavior();
        int i48 = fixedOrderComparator0.compare((java.lang.Object) obj_array10, (java.lang.Object) fixedOrderComparator31);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array10);
        java.lang.Object[] obj_array56 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array56);
        boolean b64 = fixedOrderComparator63.isLocked();
        java.lang.Object[] obj_array71 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array71);
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator(obj_array71);
        collections.comparators.FixedOrderComparator fixedOrderComparator74 = new collections.comparators.FixedOrderComparator(obj_array71);
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array71);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array71);
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array71);
        try {
            boolean b78 = fixedOrderComparator49.addAsEqual((java.lang.Object) fixedOrderComparator63, (java.lang.Object) fixedOrderComparator77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(i48 == 0);
        org.junit.Assert.assertNotNull(obj_array56);
        org.junit.Assert.assertTrue(b64 == false);
        org.junit.Assert.assertNotNull(obj_array71);
    }

    @Test
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test290");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        int i12 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b13 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array14 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        java.lang.Object[] obj_array16 = new java.lang.Object[] { fixedOrderComparator15 };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array16);
        java.lang.Object[] obj_array25 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array25);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array25);
        int i28 = fixedOrderComparator7.compare((java.lang.Object) fixedOrderComparator18, (java.lang.Object) obj_array25);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array25);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array25);
        java.lang.Object[] obj_array37 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array37);
        fixedOrderComparator38.setUnknownObjectBehavior(0);
        boolean b42 = fixedOrderComparator38.add((java.lang.Object) 1.0f);
        boolean b44 = fixedOrderComparator38.add((java.lang.Object) 1.0f);
        fixedOrderComparator38.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array53 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array53);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array53);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array53);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array53);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array53);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array53);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array53);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array53);
        boolean b62 = fixedOrderComparator38.add((java.lang.Object) obj_array53);
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array53);
        boolean b64 = fixedOrderComparator63.isLocked();
        java.lang.Object[] obj_array71 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array71);
        boolean b74 = fixedOrderComparator72.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator75.setUnknownObjectBehavior(0);
        int i78 = fixedOrderComparator75.getUnknownObjectBehavior();
        fixedOrderComparator75.setUnknownObjectBehavior((int) (byte) 0);
        boolean b81 = fixedOrderComparator72.add((java.lang.Object) fixedOrderComparator75);
        try {
            int i82 = fixedOrderComparator30.compare((java.lang.Object) b64, (java.lang.Object) fixedOrderComparator72);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertNotNull(obj_array25);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertNotNull(obj_array37);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertNotNull(obj_array53);
        org.junit.Assert.assertTrue(b62 == true);
        org.junit.Assert.assertTrue(b64 == false);
        org.junit.Assert.assertNotNull(obj_array71);
        org.junit.Assert.assertTrue(b74 == true);
        org.junit.Assert.assertTrue(i78 == 0);
        org.junit.Assert.assertTrue(b81 == true);
    }

    @Test
    public void test291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test291");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i11 = fixedOrderComparator10.getUnknownObjectBehavior();
        int i12 = fixedOrderComparator10.getUnknownObjectBehavior();
        boolean b13 = fixedOrderComparator10.isLocked();
        int i14 = fixedOrderComparator10.getUnknownObjectBehavior();
        java.lang.Object[] obj_array21 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        fixedOrderComparator22.setUnknownObjectBehavior(0);
        boolean b26 = fixedOrderComparator22.add((java.lang.Object) 1.0f);
        int i27 = fixedOrderComparator22.getUnknownObjectBehavior();
        int i28 = fixedOrderComparator22.getUnknownObjectBehavior();
        int i29 = fixedOrderComparator22.getUnknownObjectBehavior();
        java.lang.Object[] obj_array36 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array36);
        int i44 = fixedOrderComparator43.getUnknownObjectBehavior();
        try {
            int i45 = fixedOrderComparator10.compare((java.lang.Object) fixedOrderComparator22, (java.lang.Object) i44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 2);
        org.junit.Assert.assertTrue(i12 == 2);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(i14 == 2);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertTrue(i29 == 0);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertTrue(i44 == 2);
    }

    @Test
    public void test292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test292");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        int i10 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        fixedOrderComparator19.setUnknownObjectBehavior((int) (short) 0);
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        boolean b23 = fixedOrderComparator7.add((java.lang.Object) i22);
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        fixedOrderComparator31.setUnknownObjectBehavior(0);
        boolean b35 = fixedOrderComparator31.add((java.lang.Object) 1.0f);
        boolean b37 = fixedOrderComparator31.add((java.lang.Object) 1.0f);
        fixedOrderComparator31.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array46 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array46);
        boolean b55 = fixedOrderComparator31.add((java.lang.Object) obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array46);
        boolean b57 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator56);
        boolean b58 = fixedOrderComparator56.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i10 == 2);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertTrue(b55 == true);
        org.junit.Assert.assertTrue(b57 == true);
        org.junit.Assert.assertTrue(b58 == false);
    }

    @Test
    public void test293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test293");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i14 = fixedOrderComparator13.getUnknownObjectBehavior();
        int i15 = fixedOrderComparator13.getUnknownObjectBehavior();
        boolean b16 = fixedOrderComparator13.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i14 == 2);
        org.junit.Assert.assertTrue(i15 == 2);
        org.junit.Assert.assertTrue(b16 == false);
    }

    @Test
    public void test294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test294");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        int i21 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b22 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator37.setUnknownObjectBehavior(0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        fixedOrderComparator37.setUnknownObjectBehavior((int) (byte) 0);
        boolean b44 = fixedOrderComparator37.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array51 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array51);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array51);
        java.lang.Object[] obj_array54 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        boolean b56 = fixedOrderComparator53.add((java.lang.Object) obj_array54);
        boolean b57 = fixedOrderComparator37.add((java.lang.Object) fixedOrderComparator53);
        java.lang.Object[] obj_array58 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array58);
        boolean b60 = fixedOrderComparator53.add((java.lang.Object) obj_array58);
        try {
            boolean b61 = fixedOrderComparator0.addAsEqual((java.lang.Object) obj_array29, (java.lang.Object) b60);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertNotNull(obj_array51);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertTrue(b56 == true);
        org.junit.Assert.assertTrue(b57 == true);
        org.junit.Assert.assertNotNull(obj_array58);
        org.junit.Assert.assertTrue(b60 == true);
    }

    @Test
    public void test295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test295");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        fixedOrderComparator18.setUnknownObjectBehavior(0);
        boolean b22 = fixedOrderComparator18.add((java.lang.Object) 1.0f);
        boolean b24 = fixedOrderComparator18.add((java.lang.Object) 1.0f);
        boolean b25 = fixedOrderComparator18.isLocked();
        boolean b26 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator18);
        java.lang.Object[] obj_array27 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array27);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { fixedOrderComparator28 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        boolean b32 = fixedOrderComparator31.isLocked();
        int i33 = fixedOrderComparator31.getUnknownObjectBehavior();
        java.lang.Object[] obj_array40 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array40);
        int i48 = fixedOrderComparator47.getUnknownObjectBehavior();
        try {
            boolean b49 = fixedOrderComparator18.addAsEqual((java.lang.Object) i33, (java.lang.Object) fixedOrderComparator47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertNotNull(obj_array27);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertTrue(i33 == 2);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(i48 == 2);
    }

    @Test
    public void test296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test296");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b11 = fixedOrderComparator10.isLocked();
        try {
            fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == false);
    }

    @Test
    public void test297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test297");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b13 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        fixedOrderComparator7.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b31 = fixedOrderComparator7.add((java.lang.Object) obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator37.setUnknownObjectBehavior(0);
        boolean b40 = fixedOrderComparator37.isLocked();
        boolean b41 = fixedOrderComparator37.isLocked();
        java.lang.Object[] obj_array48 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array48);
        fixedOrderComparator49.setUnknownObjectBehavior(0);
        boolean b53 = fixedOrderComparator49.add((java.lang.Object) 1.0f);
        boolean b55 = fixedOrderComparator49.add((java.lang.Object) 1.0f);
        int i57 = fixedOrderComparator37.compare((java.lang.Object) fixedOrderComparator49, (java.lang.Object) 1.0d);
        boolean b58 = fixedOrderComparator37.isLocked();
        int i59 = fixedOrderComparator37.getUnknownObjectBehavior();
        java.lang.Object[] obj_array66 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array66);
        boolean b69 = fixedOrderComparator67.add((java.lang.Object) (short) 10);
        boolean b70 = fixedOrderComparator67.isLocked();
        int i71 = fixedOrderComparator67.getUnknownObjectBehavior();
        boolean b72 = fixedOrderComparator36.addAsEqual((java.lang.Object) i59, (java.lang.Object) fixedOrderComparator67);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertNotNull(obj_array48);
        org.junit.Assert.assertTrue(b53 == true);
        org.junit.Assert.assertTrue(b55 == false);
        org.junit.Assert.assertTrue(i57 == 0);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertTrue(i59 == 0);
        org.junit.Assert.assertNotNull(obj_array66);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertTrue(b70 == false);
        org.junit.Assert.assertTrue(i71 == 2);
        org.junit.Assert.assertTrue(b72 == true);
    }

    @Test
    public void test298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test298");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator3 = new collections.comparators.FixedOrderComparator();
        int i4 = fixedOrderComparator3.getUnknownObjectBehavior();
        boolean b5 = fixedOrderComparator3.isLocked();
        boolean b6 = fixedOrderComparator0.add((java.lang.Object) b5);
        java.lang.Object[] obj_array13 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array13);
        fixedOrderComparator14.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator14.add((java.lang.Object) 1.0f);
        java.lang.Object obj19 = null;
        java.lang.Object[] obj_array26 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        fixedOrderComparator27.setUnknownObjectBehavior(0);
        boolean b31 = fixedOrderComparator27.add((java.lang.Object) 1.0f);
        int i32 = fixedOrderComparator27.getUnknownObjectBehavior();
        int i33 = fixedOrderComparator14.compare(obj19, (java.lang.Object) i32);
        int i34 = fixedOrderComparator14.getUnknownObjectBehavior();
        boolean b35 = fixedOrderComparator14.isLocked();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        fixedOrderComparator44.setUnknownObjectBehavior((int) (short) 0);
        int i47 = fixedOrderComparator44.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator48.setUnknownObjectBehavior(0);
        int i51 = fixedOrderComparator48.getUnknownObjectBehavior();
        int i52 = fixedOrderComparator14.compare((java.lang.Object) i47, (java.lang.Object) fixedOrderComparator48);
        java.lang.Object[] obj_array53 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array53);
        java.lang.Object[] obj_array61 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array61);
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array61);
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array61);
        int i65 = fixedOrderComparator64.getUnknownObjectBehavior();
        boolean b66 = fixedOrderComparator64.isLocked();
        int i67 = fixedOrderComparator48.compare((java.lang.Object) fixedOrderComparator54, (java.lang.Object) fixedOrderComparator64);
        boolean b68 = fixedOrderComparator0.add((java.lang.Object) i67);
        try {
            fixedOrderComparator0.setUnknownObjectBehavior((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(i4 == 2);
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertNotNull(obj_array13);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(i33 == (-1));
        org.junit.Assert.assertTrue(i34 == 0);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(i51 == 0);
        org.junit.Assert.assertTrue(i52 == 1);
        org.junit.Assert.assertNotNull(obj_array53);
        org.junit.Assert.assertNotNull(obj_array61);
        org.junit.Assert.assertTrue(i65 == 2);
        org.junit.Assert.assertTrue(b66 == false);
        org.junit.Assert.assertTrue(i67 == 0);
        org.junit.Assert.assertTrue(b68 == true);
    }

    @Test
    public void test299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test299");
        java.lang.Object[] obj_array0 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator1 = new collections.comparators.FixedOrderComparator(obj_array0);
        java.lang.Object[] obj_array2 = new java.lang.Object[] { fixedOrderComparator1 };
        collections.comparators.FixedOrderComparator fixedOrderComparator3 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator4 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator5 = new collections.comparators.FixedOrderComparator(obj_array2);
        java.lang.Object[] obj_array12 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array12);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array12);
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array12);
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array12);
        int i17 = fixedOrderComparator16.getUnknownObjectBehavior();
        int i18 = fixedOrderComparator16.getUnknownObjectBehavior();
        boolean b19 = fixedOrderComparator16.isLocked();
        int i20 = fixedOrderComparator16.getUnknownObjectBehavior();
        fixedOrderComparator16.setUnknownObjectBehavior((int) (byte) 1);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        java.lang.Object[] obj_array37 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array37);
        fixedOrderComparator38.setUnknownObjectBehavior(0);
        boolean b41 = fixedOrderComparator30.add((java.lang.Object) 0);
        fixedOrderComparator30.setUnknownObjectBehavior((int) (short) 0);
        boolean b44 = fixedOrderComparator30.isLocked();
        boolean b45 = fixedOrderComparator30.isLocked();
        boolean b46 = fixedOrderComparator30.isLocked();
        int i47 = fixedOrderComparator30.getUnknownObjectBehavior();
        int i48 = fixedOrderComparator30.getUnknownObjectBehavior();
        java.lang.Object[] obj_array55 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        fixedOrderComparator56.setUnknownObjectBehavior(0);
        boolean b60 = fixedOrderComparator56.add((java.lang.Object) 1.0f);
        java.lang.Object obj61 = null;
        java.lang.Object[] obj_array68 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array68);
        fixedOrderComparator69.setUnknownObjectBehavior(0);
        boolean b73 = fixedOrderComparator69.add((java.lang.Object) 1.0f);
        int i74 = fixedOrderComparator69.getUnknownObjectBehavior();
        int i75 = fixedOrderComparator56.compare(obj61, (java.lang.Object) i74);
        java.lang.Object[] obj_array82 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator(obj_array82);
        collections.comparators.FixedOrderComparator fixedOrderComparator84 = new collections.comparators.FixedOrderComparator(obj_array82);
        java.lang.Object[] obj_array85 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array85);
        boolean b87 = fixedOrderComparator84.add((java.lang.Object) obj_array85);
        collections.comparators.FixedOrderComparator fixedOrderComparator88 = new collections.comparators.FixedOrderComparator(obj_array85);
        collections.comparators.FixedOrderComparator fixedOrderComparator89 = new collections.comparators.FixedOrderComparator(obj_array85);
        collections.comparators.FixedOrderComparator fixedOrderComparator90 = new collections.comparators.FixedOrderComparator(obj_array85);
        boolean b91 = fixedOrderComparator30.addAsEqual((java.lang.Object) i74, (java.lang.Object) obj_array85);
        collections.comparators.FixedOrderComparator fixedOrderComparator92 = new collections.comparators.FixedOrderComparator(obj_array85);
        java.lang.Object obj93 = null;
        boolean b94 = fixedOrderComparator92.add(obj93);
        try {
            int i95 = fixedOrderComparator5.compare((java.lang.Object) fixedOrderComparator16, (java.lang.Object) fixedOrderComparator92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array0);
        org.junit.Assert.assertNotNull(obj_array2);
        org.junit.Assert.assertNotNull(obj_array12);
        org.junit.Assert.assertTrue(i17 == 2);
        org.junit.Assert.assertTrue(i18 == 2);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(i20 == 2);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertNotNull(obj_array37);
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertTrue(b45 == false);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(i48 == 0);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertNotNull(obj_array68);
        org.junit.Assert.assertTrue(b73 == true);
        org.junit.Assert.assertTrue(i74 == 0);
        org.junit.Assert.assertTrue(i75 == (-1));
        org.junit.Assert.assertNotNull(obj_array82);
        org.junit.Assert.assertNotNull(obj_array85);
        org.junit.Assert.assertTrue(b87 == true);
        org.junit.Assert.assertTrue(b91 == true);
        org.junit.Assert.assertTrue(b94 == true);
    }

    @Test
    public void test300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test300");
        java.lang.Object[] obj_array0 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator1 = new collections.comparators.FixedOrderComparator(obj_array0);
        java.lang.Object[] obj_array2 = new java.lang.Object[] { fixedOrderComparator1 };
        collections.comparators.FixedOrderComparator fixedOrderComparator3 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator4 = new collections.comparators.FixedOrderComparator(obj_array2);
        boolean b5 = fixedOrderComparator4.isLocked();
        boolean b6 = fixedOrderComparator4.isLocked();
        org.junit.Assert.assertNotNull(obj_array0);
        org.junit.Assert.assertNotNull(obj_array2);
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue(b6 == false);
    }

    @Test
    public void test301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test301");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array9 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b11 = fixedOrderComparator8.add((java.lang.Object) obj_array9);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array9);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b14 = fixedOrderComparator13.isLocked();
        try {
            fixedOrderComparator13.setUnknownObjectBehavior((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b14 == false);
    }

    @Test
    public void test302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test302");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        try {
            fixedOrderComparator7.setUnknownObjectBehavior(10);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
    }

    @Test
    public void test303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test303");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        fixedOrderComparator0.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        fixedOrderComparator23.setUnknownObjectBehavior(0);
        boolean b26 = fixedOrderComparator15.add((java.lang.Object) 0);
        boolean b27 = fixedOrderComparator15.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator();
        int i29 = fixedOrderComparator28.getUnknownObjectBehavior();
        boolean b30 = fixedOrderComparator15.add((java.lang.Object) i29);
        int i32 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator15, (java.lang.Object) 100);
        boolean b33 = fixedOrderComparator15.isLocked();
        java.lang.Object[] obj_array40 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array40);
        int i48 = fixedOrderComparator47.getUnknownObjectBehavior();
        java.lang.Object[] obj_array55 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array55);
        int i62 = fixedOrderComparator61.getUnknownObjectBehavior();
        boolean b63 = fixedOrderComparator47.add((java.lang.Object) fixedOrderComparator61);
        java.lang.Object[] obj_array64 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array64);
        java.lang.Object[] obj_array66 = new java.lang.Object[] { fixedOrderComparator65 };
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array66);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array66);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array66);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array66);
        try {
            int i71 = fixedOrderComparator15.compare((java.lang.Object) fixedOrderComparator47, (java.lang.Object) obj_array66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertTrue(i29 == 2);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(i48 == 2);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(i62 == 2);
        org.junit.Assert.assertTrue(b63 == true);
        org.junit.Assert.assertNotNull(obj_array64);
        org.junit.Assert.assertNotNull(obj_array66);
    }

    @Test
    public void test304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test304");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array10);
        java.lang.Object[] obj_array20 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array20);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        fixedOrderComparator31.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array40);
        int i44 = fixedOrderComparator31.compare((java.lang.Object) fixedOrderComparator42, (java.lang.Object) (-1.0d));
        boolean b45 = fixedOrderComparator22.add((java.lang.Object) fixedOrderComparator31);
        boolean b46 = fixedOrderComparator31.isLocked();
        int i47 = fixedOrderComparator31.getUnknownObjectBehavior();
        int i48 = fixedOrderComparator0.compare((java.lang.Object) obj_array10, (java.lang.Object) fixedOrderComparator31);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array10);
        java.lang.Object[] obj_array59 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array59);
        java.lang.Object[] obj_array75 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array75);
        fixedOrderComparator76.setUnknownObjectBehavior(0);
        boolean b80 = fixedOrderComparator76.add((java.lang.Object) 1.0f);
        boolean b82 = fixedOrderComparator76.add((java.lang.Object) 1.0f);
        boolean b83 = fixedOrderComparator76.isLocked();
        boolean b84 = fixedOrderComparator76.isLocked();
        int i85 = fixedOrderComparator76.getUnknownObjectBehavior();
        int i86 = fixedOrderComparator76.getUnknownObjectBehavior();
        try {
            boolean b87 = fixedOrderComparator52.addAsEqual((java.lang.Object) obj_array59, (java.lang.Object) fixedOrderComparator76);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(i48 == 0);
        org.junit.Assert.assertNotNull(obj_array59);
        org.junit.Assert.assertNotNull(obj_array75);
        org.junit.Assert.assertTrue(b80 == true);
        org.junit.Assert.assertTrue(b82 == false);
        org.junit.Assert.assertTrue(b83 == false);
        org.junit.Assert.assertTrue(b84 == false);
        org.junit.Assert.assertTrue(i85 == 0);
        org.junit.Assert.assertTrue(i86 == 0);
    }

    @Test
    public void test305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test305");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator8.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array19 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator22.setUnknownObjectBehavior(0);
        int i25 = fixedOrderComparator22.getUnknownObjectBehavior();
        boolean b27 = fixedOrderComparator21.addAsEqual((java.lang.Object) i25, (java.lang.Object) (short) 1);
        int i28 = fixedOrderComparator21.getUnknownObjectBehavior();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        boolean b37 = fixedOrderComparator36.isLocked();
        boolean b38 = fixedOrderComparator21.add((java.lang.Object) fixedOrderComparator36);
        boolean b39 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator21);
        try {
            fixedOrderComparator8.setUnknownObjectBehavior((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertTrue(i28 == 2);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b39 == true);
    }

    @Test
    public void test306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test306");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { fixedOrderComparator0, obj_array22 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array22);
        try {
            fixedOrderComparator34.setUnknownObjectBehavior((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertNotNull(obj_array29);
    }

    @Test
    public void test307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test307");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        boolean b11 = fixedOrderComparator8.isLocked();
        int i12 = fixedOrderComparator8.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        fixedOrderComparator13.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array27 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array27);
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator36.setUnknownObjectBehavior(0);
        boolean b39 = fixedOrderComparator28.add((java.lang.Object) 0);
        boolean b40 = fixedOrderComparator28.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        int i42 = fixedOrderComparator41.getUnknownObjectBehavior();
        boolean b43 = fixedOrderComparator28.add((java.lang.Object) i42);
        int i45 = fixedOrderComparator13.compare((java.lang.Object) fixedOrderComparator28, (java.lang.Object) 100);
        java.lang.Object[] obj_array52 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array52);
        java.lang.Object[] obj_array55 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        boolean b57 = fixedOrderComparator54.add((java.lang.Object) obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array55);
        try {
            boolean b61 = fixedOrderComparator8.addAsEqual((java.lang.Object) 100, (java.lang.Object) fixedOrderComparator60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertNotNull(obj_array27);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertTrue(i42 == 2);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertTrue(i45 == 0);
        org.junit.Assert.assertNotNull(obj_array52);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(b57 == true);
    }

    @Test
    public void test308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test308");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        int i23 = fixedOrderComparator12.getUnknownObjectBehavior();
        boolean b24 = fixedOrderComparator12.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator25.setUnknownObjectBehavior(0);
        int i28 = fixedOrderComparator25.getUnknownObjectBehavior();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array35);
        java.lang.Object[] obj_array45 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array45);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array45);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array54);
        fixedOrderComparator56.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array65 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array65);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array65);
        int i69 = fixedOrderComparator56.compare((java.lang.Object) fixedOrderComparator67, (java.lang.Object) (-1.0d));
        boolean b70 = fixedOrderComparator47.add((java.lang.Object) fixedOrderComparator56);
        boolean b71 = fixedOrderComparator56.isLocked();
        int i72 = fixedOrderComparator56.getUnknownObjectBehavior();
        int i73 = fixedOrderComparator25.compare((java.lang.Object) obj_array35, (java.lang.Object) fixedOrderComparator56);
        collections.comparators.FixedOrderComparator fixedOrderComparator74 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator();
        boolean b79 = fixedOrderComparator78.isLocked();
        java.lang.Object obj80 = null;
        boolean b81 = fixedOrderComparator78.add(obj80);
        fixedOrderComparator78.setUnknownObjectBehavior(1);
        try {
            boolean b84 = fixedOrderComparator12.addAsEqual((java.lang.Object) obj_array35, (java.lang.Object) fixedOrderComparator78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertTrue(i23 == 0);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertNotNull(obj_array45);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertNotNull(obj_array65);
        org.junit.Assert.assertTrue(i69 == 0);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertTrue(b71 == true);
        org.junit.Assert.assertTrue(i72 == 0);
        org.junit.Assert.assertTrue(i73 == 0);
        org.junit.Assert.assertTrue(b79 == false);
        org.junit.Assert.assertTrue(b81 == true);
    }

    @Test
    public void test309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test309");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array19 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator21.setUnknownObjectBehavior((int) (short) 0);
        int i24 = fixedOrderComparator7.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator21);
        try {
            fixedOrderComparator7.setUnknownObjectBehavior((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(i24 == 0);
    }

    @Test
    public void test310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test310");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i13 = fixedOrderComparator12.getUnknownObjectBehavior();
        java.lang.Object[] obj_array20 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        fixedOrderComparator21.setUnknownObjectBehavior(0);
        boolean b25 = fixedOrderComparator21.add((java.lang.Object) 1.0f);
        java.lang.Object obj26 = null;
        java.lang.Object[] obj_array33 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        boolean b38 = fixedOrderComparator34.add((java.lang.Object) 1.0f);
        int i39 = fixedOrderComparator34.getUnknownObjectBehavior();
        int i40 = fixedOrderComparator21.compare(obj26, (java.lang.Object) i39);
        int i41 = fixedOrderComparator21.getUnknownObjectBehavior();
        boolean b42 = fixedOrderComparator21.isLocked();
        java.lang.Object[] obj_array49 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array49);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array49);
        fixedOrderComparator51.setUnknownObjectBehavior((int) (short) 0);
        int i54 = fixedOrderComparator51.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator55.setUnknownObjectBehavior(0);
        int i58 = fixedOrderComparator55.getUnknownObjectBehavior();
        int i59 = fixedOrderComparator21.compare((java.lang.Object) i54, (java.lang.Object) fixedOrderComparator55);
        java.lang.Object[] obj_array67 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array67);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array67);
        fixedOrderComparator69.setUnknownObjectBehavior((int) (short) 0);
        int i72 = fixedOrderComparator69.getUnknownObjectBehavior();
        int i73 = fixedOrderComparator55.compare((java.lang.Object) (byte) 100, (java.lang.Object) fixedOrderComparator69);
        boolean b74 = fixedOrderComparator12.add((java.lang.Object) fixedOrderComparator69);
        boolean b75 = fixedOrderComparator69.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i13 == 2);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(i39 == 0);
        org.junit.Assert.assertTrue(i40 == (-1));
        org.junit.Assert.assertTrue(i41 == 0);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertNotNull(obj_array49);
        org.junit.Assert.assertTrue(i54 == 0);
        org.junit.Assert.assertTrue(i58 == 0);
        org.junit.Assert.assertTrue(i59 == 1);
        org.junit.Assert.assertNotNull(obj_array67);
        org.junit.Assert.assertTrue(i72 == 0);
        org.junit.Assert.assertTrue(i73 == 0);
        org.junit.Assert.assertTrue(b74 == true);
        org.junit.Assert.assertTrue(b75 == false);
    }

    @Test
    public void test311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test311");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i11 = fixedOrderComparator10.getUnknownObjectBehavior();
        int i12 = fixedOrderComparator10.getUnknownObjectBehavior();
        boolean b13 = fixedOrderComparator10.isLocked();
        int i14 = fixedOrderComparator10.getUnknownObjectBehavior();
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b27 = fixedOrderComparator10.add((java.lang.Object) obj_array21);
        java.lang.Object[] obj_array34 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array34);
        fixedOrderComparator36.setUnknownObjectBehavior((int) (short) 0);
        int i39 = fixedOrderComparator36.getUnknownObjectBehavior();
        java.lang.Object obj41 = null;
        boolean b42 = fixedOrderComparator36.addAsEqual((java.lang.Object) 10.0f, obj41);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator();
        int i44 = fixedOrderComparator43.getUnknownObjectBehavior();
        java.lang.Object[] obj_array51 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array51);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array51);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array51);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array51);
        boolean b56 = fixedOrderComparator43.add((java.lang.Object) fixedOrderComparator55);
        fixedOrderComparator43.setUnknownObjectBehavior(0);
        boolean b59 = fixedOrderComparator43.isLocked();
        int i61 = fixedOrderComparator36.compare((java.lang.Object) fixedOrderComparator43, (java.lang.Object) 2);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator();
        int i63 = fixedOrderComparator62.getUnknownObjectBehavior();
        boolean b64 = fixedOrderComparator43.add((java.lang.Object) i63);
        java.lang.Object[] obj_array71 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array71);
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator(obj_array71);
        collections.comparators.FixedOrderComparator fixedOrderComparator74 = new collections.comparators.FixedOrderComparator(obj_array71);
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array71);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array71);
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array71);
        int i78 = fixedOrderComparator77.getUnknownObjectBehavior();
        try {
            boolean b79 = fixedOrderComparator10.addAsEqual((java.lang.Object) i63, (java.lang.Object) i78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 2);
        org.junit.Assert.assertTrue(i12 == 2);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(i14 == 2);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertNotNull(obj_array34);
        org.junit.Assert.assertTrue(i39 == 0);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertTrue(i44 == 2);
        org.junit.Assert.assertNotNull(obj_array51);
        org.junit.Assert.assertTrue(b56 == true);
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertTrue(i61 == 0);
        org.junit.Assert.assertTrue(i63 == 2);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertNotNull(obj_array71);
        org.junit.Assert.assertTrue(i78 == 2);
    }

    @Test
    public void test312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test312");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b13 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        try {
            fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b13 == false);
    }

    @Test
    public void test313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test313");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        boolean b21 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array28 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        boolean b33 = fixedOrderComparator29.add((java.lang.Object) 1.0f);
        java.lang.Object obj34 = null;
        java.lang.Object[] obj_array41 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array41);
        fixedOrderComparator42.setUnknownObjectBehavior(0);
        boolean b46 = fixedOrderComparator42.add((java.lang.Object) 1.0f);
        int i47 = fixedOrderComparator42.getUnknownObjectBehavior();
        int i48 = fixedOrderComparator29.compare(obj34, (java.lang.Object) i47);
        int i49 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b50 = fixedOrderComparator29.isLocked();
        java.lang.Object[] obj_array57 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array57);
        fixedOrderComparator59.setUnknownObjectBehavior((int) (short) 0);
        int i62 = fixedOrderComparator59.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator63.setUnknownObjectBehavior(0);
        int i66 = fixedOrderComparator63.getUnknownObjectBehavior();
        int i67 = fixedOrderComparator29.compare((java.lang.Object) i62, (java.lang.Object) fixedOrderComparator63);
        java.lang.Object[] obj_array68 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array68);
        java.lang.Object[] obj_array76 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array76);
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator(obj_array76);
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array76);
        int i80 = fixedOrderComparator79.getUnknownObjectBehavior();
        boolean b81 = fixedOrderComparator79.isLocked();
        int i82 = fixedOrderComparator63.compare((java.lang.Object) fixedOrderComparator69, (java.lang.Object) fixedOrderComparator79);
        java.lang.Object[] obj_array89 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator90 = new collections.comparators.FixedOrderComparator(obj_array89);
        fixedOrderComparator90.setUnknownObjectBehavior(0);
        boolean b94 = fixedOrderComparator90.add((java.lang.Object) 1.0f);
        boolean b96 = fixedOrderComparator90.add((java.lang.Object) 1.0f);
        boolean b97 = fixedOrderComparator90.isLocked();
        boolean b98 = fixedOrderComparator7.addAsEqual((java.lang.Object) i82, (java.lang.Object) fixedOrderComparator90);
        int i99 = fixedOrderComparator90.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(b33 == true);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(i48 == (-1));
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertNotNull(obj_array57);
        org.junit.Assert.assertTrue(i62 == 0);
        org.junit.Assert.assertTrue(i66 == 0);
        org.junit.Assert.assertTrue(i67 == 1);
        org.junit.Assert.assertNotNull(obj_array68);
        org.junit.Assert.assertNotNull(obj_array76);
        org.junit.Assert.assertTrue(i80 == 2);
        org.junit.Assert.assertTrue(b81 == false);
        org.junit.Assert.assertTrue(i82 == 0);
        org.junit.Assert.assertNotNull(obj_array89);
        org.junit.Assert.assertTrue(b94 == true);
        org.junit.Assert.assertTrue(b96 == false);
        org.junit.Assert.assertTrue(b97 == false);
        org.junit.Assert.assertTrue(b98 == true);
        org.junit.Assert.assertTrue(i99 == 0);
    }

    @Test
    public void test314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test314");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        boolean b21 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array28 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array28);
        fixedOrderComparator30.setUnknownObjectBehavior((int) (short) 0);
        int i33 = fixedOrderComparator30.getUnknownObjectBehavior();
        java.lang.Object obj35 = null;
        boolean b36 = fixedOrderComparator30.addAsEqual((java.lang.Object) 10.0f, obj35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator37.setUnknownObjectBehavior(0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        fixedOrderComparator37.setUnknownObjectBehavior((int) (byte) 0);
        boolean b43 = fixedOrderComparator37.isLocked();
        int i44 = fixedOrderComparator37.getUnknownObjectBehavior();
        java.lang.Object[] obj_array51 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array51);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array51);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array51);
        int i55 = fixedOrderComparator54.getUnknownObjectBehavior();
        int i56 = fixedOrderComparator30.compare((java.lang.Object) fixedOrderComparator37, (java.lang.Object) i55);
        boolean b57 = fixedOrderComparator7.add((java.lang.Object) i56);
        try {
            fixedOrderComparator7.setUnknownObjectBehavior((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(i33 == 0);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertNotNull(obj_array51);
        org.junit.Assert.assertTrue(i55 == 2);
        org.junit.Assert.assertTrue(i56 == 0);
        org.junit.Assert.assertTrue(b57 == false);
    }

    @Test
    public void test315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test315");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i14 = fixedOrderComparator13.getUnknownObjectBehavior();
        java.lang.Object[] obj_array21 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array21);
        int i28 = fixedOrderComparator27.getUnknownObjectBehavior();
        boolean b29 = fixedOrderComparator13.add((java.lang.Object) fixedOrderComparator27);
        java.lang.Object[] obj_array36 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        fixedOrderComparator37.setUnknownObjectBehavior(0);
        boolean b41 = fixedOrderComparator37.add((java.lang.Object) 1.0f);
        boolean b43 = fixedOrderComparator37.add((java.lang.Object) 1.0f);
        fixedOrderComparator37.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array52 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array52);
        boolean b61 = fixedOrderComparator37.add((java.lang.Object) obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array52);
        java.lang.Object[] obj_array72 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator(obj_array72);
        collections.comparators.FixedOrderComparator fixedOrderComparator74 = new collections.comparators.FixedOrderComparator(obj_array72);
        fixedOrderComparator74.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array83 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator84 = new collections.comparators.FixedOrderComparator(obj_array83);
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array83);
        int i87 = fixedOrderComparator74.compare((java.lang.Object) fixedOrderComparator85, (java.lang.Object) (-1.0d));
        try {
            boolean b88 = fixedOrderComparator27.addAsEqual((java.lang.Object) fixedOrderComparator65, (java.lang.Object) i87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i14 == 2);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(i28 == 2);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertNotNull(obj_array52);
        org.junit.Assert.assertTrue(b61 == true);
        org.junit.Assert.assertNotNull(obj_array72);
        org.junit.Assert.assertNotNull(obj_array83);
        org.junit.Assert.assertTrue(i87 == 0);
    }

    @Test
    public void test316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test316");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i12 = fixedOrderComparator11.getUnknownObjectBehavior();
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator26.setUnknownObjectBehavior(0);
        int i29 = fixedOrderComparator26.getUnknownObjectBehavior();
        java.lang.Object[] obj_array36 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array36);
        java.lang.Object[] obj_array46 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array46);
        java.lang.Object[] obj_array55 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array55);
        fixedOrderComparator57.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array66 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array66);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array66);
        int i70 = fixedOrderComparator57.compare((java.lang.Object) fixedOrderComparator68, (java.lang.Object) (-1.0d));
        boolean b71 = fixedOrderComparator48.add((java.lang.Object) fixedOrderComparator57);
        boolean b72 = fixedOrderComparator57.isLocked();
        int i73 = fixedOrderComparator57.getUnknownObjectBehavior();
        int i74 = fixedOrderComparator26.compare((java.lang.Object) obj_array36, (java.lang.Object) fixedOrderComparator57);
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array36);
        boolean b76 = fixedOrderComparator11.addAsEqual((java.lang.Object) i25, (java.lang.Object) fixedOrderComparator75);
        try {
            fixedOrderComparator75.setUnknownObjectBehavior((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i12 == 2);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i29 == 0);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertNotNull(obj_array66);
        org.junit.Assert.assertTrue(i70 == 0);
        org.junit.Assert.assertTrue(b71 == true);
        org.junit.Assert.assertTrue(b72 == true);
        org.junit.Assert.assertTrue(i73 == 0);
        org.junit.Assert.assertTrue(i74 == 0);
        org.junit.Assert.assertTrue(b76 == true);
    }

    @Test
    public void test317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test317");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i11 = fixedOrderComparator10.getUnknownObjectBehavior();
        int i12 = fixedOrderComparator10.getUnknownObjectBehavior();
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator14.setUnknownObjectBehavior(0);
        int i17 = fixedOrderComparator14.getUnknownObjectBehavior();
        fixedOrderComparator14.setUnknownObjectBehavior((int) (byte) 0);
        boolean b21 = fixedOrderComparator14.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array28 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        boolean b31 = fixedOrderComparator29.add((java.lang.Object) (-1.0f));
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator();
        int i33 = fixedOrderComparator32.getUnknownObjectBehavior();
        boolean b34 = fixedOrderComparator32.isLocked();
        fixedOrderComparator32.setUnknownObjectBehavior(0);
        int i37 = fixedOrderComparator14.compare((java.lang.Object) fixedOrderComparator29, (java.lang.Object) 0);
        java.lang.Object[] obj_array44 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array44);
        fixedOrderComparator45.setUnknownObjectBehavior(0);
        boolean b48 = fixedOrderComparator29.add((java.lang.Object) fixedOrderComparator45);
        boolean b49 = fixedOrderComparator10.add((java.lang.Object) b48);
        try {
            fixedOrderComparator10.setUnknownObjectBehavior((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 2);
        org.junit.Assert.assertTrue(i12 == 2);
        org.junit.Assert.assertTrue(i13 == 2);
        org.junit.Assert.assertTrue(i17 == 0);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(i33 == 2);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertTrue(i37 == 0);
        org.junit.Assert.assertNotNull(obj_array44);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertTrue(b49 == true);
    }

    @Test
    public void test318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test318");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b28 = fixedOrderComparator14.add((java.lang.Object) obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b34 = fixedOrderComparator32.add((java.lang.Object) (-1L));
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(b34 == false);
    }

    @Test
    public void test319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test319");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator9.setUnknownObjectBehavior(0);
        int i12 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) i12, (java.lang.Object) (short) 1);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b28 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator27);
        int i29 = fixedOrderComparator27.getUnknownObjectBehavior();
        try {
            fixedOrderComparator27.setUnknownObjectBehavior((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(i29 == 2);
    }

    @Test
    public void test320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test320");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj18 = null;
        int i19 = fixedOrderComparator10.compare((java.lang.Object) 1.0d, obj18);
        boolean b20 = fixedOrderComparator10.isLocked();
        try {
            fixedOrderComparator10.setUnknownObjectBehavior((int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertTrue(b20 == true);
    }

    @Test
    public void test321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test321");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj18 = null;
        int i19 = fixedOrderComparator10.compare((java.lang.Object) 1.0d, obj18);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        int i32 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b34 = fixedOrderComparator28.addAsEqual((java.lang.Object) i32, (java.lang.Object) (short) 1);
        int i35 = fixedOrderComparator28.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        boolean b44 = fixedOrderComparator43.isLocked();
        boolean b45 = fixedOrderComparator28.add((java.lang.Object) fixedOrderComparator43);
        int i47 = fixedOrderComparator10.compare((java.lang.Object) fixedOrderComparator28, (java.lang.Object) 1L);
        try {
            fixedOrderComparator28.setUnknownObjectBehavior((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(i47 == 0);
    }

    @Test
    public void test322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test322");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator23.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array32 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        boolean b35 = fixedOrderComparator33.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator36.setUnknownObjectBehavior(0);
        int i39 = fixedOrderComparator36.getUnknownObjectBehavior();
        fixedOrderComparator36.setUnknownObjectBehavior((int) (byte) 0);
        boolean b42 = fixedOrderComparator33.add((java.lang.Object) fixedOrderComparator36);
        java.lang.Object obj44 = null;
        int i45 = fixedOrderComparator36.compare((java.lang.Object) 1.0d, obj44);
        boolean b46 = fixedOrderComparator36.isLocked();
        boolean b47 = fixedOrderComparator23.add((java.lang.Object) fixedOrderComparator36);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        fixedOrderComparator55.setUnknownObjectBehavior(0);
        boolean b59 = fixedOrderComparator55.add((java.lang.Object) 1.0f);
        boolean b61 = fixedOrderComparator55.add((java.lang.Object) 1.0f);
        fixedOrderComparator55.setUnknownObjectBehavior(1);
        int i64 = fixedOrderComparator12.compare((java.lang.Object) fixedOrderComparator23, (java.lang.Object) 1);
        boolean b65 = fixedOrderComparator12.isLocked();
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertTrue(i39 == 0);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertTrue(i45 == 0);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertTrue(i64 == 0);
        org.junit.Assert.assertTrue(b65 == true);
    }

    @Test
    public void test323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test323");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj17 = null;
        boolean b18 = fixedOrderComparator7.add(obj17);
        java.lang.Object[] obj_array25 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array25);
        fixedOrderComparator26.setUnknownObjectBehavior(0);
        boolean b30 = fixedOrderComparator26.add((java.lang.Object) 1.0f);
        boolean b32 = fixedOrderComparator26.add((java.lang.Object) 1.0f);
        boolean b33 = fixedOrderComparator26.isLocked();
        boolean b34 = fixedOrderComparator26.isLocked();
        boolean b35 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator26);
        java.lang.Object[] obj_array42 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        boolean b45 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator44);
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator46.setUnknownObjectBehavior(0);
        int i49 = fixedOrderComparator46.getUnknownObjectBehavior();
        fixedOrderComparator46.setUnknownObjectBehavior((int) (byte) 0);
        boolean b53 = fixedOrderComparator46.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array60 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array60);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array60);
        java.lang.Object[] obj_array63 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array63);
        boolean b65 = fixedOrderComparator62.add((java.lang.Object) obj_array63);
        boolean b66 = fixedOrderComparator46.add((java.lang.Object) fixedOrderComparator62);
        java.lang.Object[] obj_array67 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array67);
        boolean b69 = fixedOrderComparator62.add((java.lang.Object) obj_array67);
        boolean b70 = fixedOrderComparator44.add((java.lang.Object) b69);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertNotNull(obj_array25);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertTrue(b53 == true);
        org.junit.Assert.assertNotNull(obj_array60);
        org.junit.Assert.assertNotNull(obj_array63);
        org.junit.Assert.assertTrue(b65 == true);
        org.junit.Assert.assertTrue(b66 == true);
        org.junit.Assert.assertNotNull(obj_array67);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertTrue(b70 == true);
    }

    @Test
    public void test324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test324");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj18 = null;
        int i19 = fixedOrderComparator10.compare((java.lang.Object) 1.0d, obj18);
        try {
            fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(i19 == 0);
    }

    @Test
    public void test325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test325");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator();
        int i35 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator34.isLocked();
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        int i39 = fixedOrderComparator12.compare((java.lang.Object) obj_array29, (java.lang.Object) fixedOrderComparator34);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array29);
        boolean b41 = fixedOrderComparator40.isLocked();
        java.lang.Object[] obj_array48 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array48);
        boolean b54 = fixedOrderComparator40.add((java.lang.Object) fixedOrderComparator53);
        boolean b55 = fixedOrderComparator53.isLocked();
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(i39 == 0);
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertNotNull(obj_array48);
        org.junit.Assert.assertTrue(b54 == true);
        org.junit.Assert.assertTrue(b55 == false);
    }

    @Test
    public void test326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test326");
        java.lang.Object[] obj_array0 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator1 = new collections.comparators.FixedOrderComparator(obj_array0);
        java.lang.Object[] obj_array2 = new java.lang.Object[] { fixedOrderComparator1 };
        collections.comparators.FixedOrderComparator fixedOrderComparator3 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator4 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator5 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator6 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator();
        boolean b10 = fixedOrderComparator9.isLocked();
        java.lang.Object obj11 = null;
        boolean b12 = fixedOrderComparator9.add(obj11);
        boolean b13 = fixedOrderComparator9.isLocked();
        java.lang.Object[] obj_array20 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        fixedOrderComparator21.setUnknownObjectBehavior(0);
        boolean b25 = fixedOrderComparator21.add((java.lang.Object) 1.0f);
        java.lang.Object obj26 = null;
        java.lang.Object[] obj_array33 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        boolean b38 = fixedOrderComparator34.add((java.lang.Object) 1.0f);
        int i39 = fixedOrderComparator34.getUnknownObjectBehavior();
        int i40 = fixedOrderComparator21.compare(obj26, (java.lang.Object) i39);
        int i41 = fixedOrderComparator21.getUnknownObjectBehavior();
        boolean b42 = fixedOrderComparator21.isLocked();
        java.lang.Object[] obj_array49 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array49);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array49);
        fixedOrderComparator51.setUnknownObjectBehavior((int) (short) 0);
        int i54 = fixedOrderComparator51.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator55.setUnknownObjectBehavior(0);
        int i58 = fixedOrderComparator55.getUnknownObjectBehavior();
        int i59 = fixedOrderComparator21.compare((java.lang.Object) i54, (java.lang.Object) fixedOrderComparator55);
        int i60 = fixedOrderComparator21.getUnknownObjectBehavior();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Object obj62 = null;
        int i63 = fixedOrderComparator21.compare(obj61, obj62);
        java.lang.Object[] obj_array70 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array70);
        java.lang.Object[] obj_array78 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array78);
        int i82 = fixedOrderComparator21.compare((java.lang.Object) obj_array70, (java.lang.Object) fixedOrderComparator81);
        boolean b83 = fixedOrderComparator81.isLocked();
        try {
            boolean b84 = fixedOrderComparator8.addAsEqual((java.lang.Object) b13, (java.lang.Object) fixedOrderComparator81);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array0);
        org.junit.Assert.assertNotNull(obj_array2);
        org.junit.Assert.assertTrue(b10 == false);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(i39 == 0);
        org.junit.Assert.assertTrue(i40 == (-1));
        org.junit.Assert.assertTrue(i41 == 0);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertNotNull(obj_array49);
        org.junit.Assert.assertTrue(i54 == 0);
        org.junit.Assert.assertTrue(i58 == 0);
        org.junit.Assert.assertTrue(i59 == 1);
        org.junit.Assert.assertTrue(i60 == 0);
        org.junit.Assert.assertTrue(i63 == 0);
        org.junit.Assert.assertNotNull(obj_array70);
        org.junit.Assert.assertNotNull(obj_array78);
        org.junit.Assert.assertTrue(i82 == 0);
        org.junit.Assert.assertTrue(b83 == false);
    }

    @Test
    public void test327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test327");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        int i12 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b13 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array14 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        java.lang.Object[] obj_array16 = new java.lang.Object[] { fixedOrderComparator15 };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array16);
        java.lang.Object[] obj_array25 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array25);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array25);
        int i28 = fixedOrderComparator7.compare((java.lang.Object) fixedOrderComparator18, (java.lang.Object) obj_array25);
        try {
            fixedOrderComparator7.setUnknownObjectBehavior((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertNotNull(obj_array25);
        org.junit.Assert.assertTrue(i28 == 0);
    }

    @Test
    public void test328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test328");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object obj17 = null;
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator18.setUnknownObjectBehavior(0);
        int i21 = fixedOrderComparator18.getUnknownObjectBehavior();
        fixedOrderComparator18.setUnknownObjectBehavior((int) (byte) 0);
        fixedOrderComparator18.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array32 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        boolean b44 = fixedOrderComparator33.add((java.lang.Object) 0);
        boolean b45 = fixedOrderComparator33.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator();
        int i47 = fixedOrderComparator46.getUnknownObjectBehavior();
        boolean b48 = fixedOrderComparator33.add((java.lang.Object) i47);
        int i50 = fixedOrderComparator18.compare((java.lang.Object) fixedOrderComparator33, (java.lang.Object) 100);
        try {
            boolean b51 = fixedOrderComparator0.addAsEqual(obj17, (java.lang.Object) i50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertTrue(b45 == false);
        org.junit.Assert.assertTrue(i47 == 2);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertTrue(i50 == 0);
    }

    @Test
    public void test329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test329");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator3 = new collections.comparators.FixedOrderComparator();
        int i4 = fixedOrderComparator3.getUnknownObjectBehavior();
        boolean b5 = fixedOrderComparator3.isLocked();
        boolean b6 = fixedOrderComparator0.add((java.lang.Object) b5);
        boolean b7 = fixedOrderComparator0.isLocked();
        int i8 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i9 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array16 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array16);
        boolean b24 = fixedOrderComparator23.isLocked();
        java.lang.Object[] obj_array31 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array31);
        int i36 = fixedOrderComparator35.getUnknownObjectBehavior();
        int i37 = fixedOrderComparator35.getUnknownObjectBehavior();
        int i38 = fixedOrderComparator35.getUnknownObjectBehavior();
        java.lang.Object[] obj_array45 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array45);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array45);
        fixedOrderComparator47.setUnknownObjectBehavior((int) (short) 0);
        int i50 = fixedOrderComparator47.getUnknownObjectBehavior();
        java.lang.Object obj52 = null;
        boolean b53 = fixedOrderComparator47.addAsEqual((java.lang.Object) 10.0f, obj52);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator54.setUnknownObjectBehavior(0);
        int i57 = fixedOrderComparator54.getUnknownObjectBehavior();
        fixedOrderComparator54.setUnknownObjectBehavior((int) (byte) 0);
        boolean b60 = fixedOrderComparator54.isLocked();
        int i61 = fixedOrderComparator54.getUnknownObjectBehavior();
        java.lang.Object[] obj_array68 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array68);
        int i72 = fixedOrderComparator71.getUnknownObjectBehavior();
        int i73 = fixedOrderComparator47.compare((java.lang.Object) fixedOrderComparator54, (java.lang.Object) i72);
        boolean b74 = fixedOrderComparator35.add((java.lang.Object) fixedOrderComparator47);
        try {
            int i75 = fixedOrderComparator0.compare((java.lang.Object) b24, (java.lang.Object) fixedOrderComparator47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(i4 == 2);
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertTrue(i8 == 2);
        org.junit.Assert.assertTrue(i9 == 2);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertTrue(i36 == 2);
        org.junit.Assert.assertTrue(i37 == 2);
        org.junit.Assert.assertTrue(i38 == 2);
        org.junit.Assert.assertNotNull(obj_array45);
        org.junit.Assert.assertTrue(i50 == 0);
        org.junit.Assert.assertTrue(b53 == true);
        org.junit.Assert.assertTrue(i57 == 0);
        org.junit.Assert.assertTrue(b60 == false);
        org.junit.Assert.assertTrue(i61 == 0);
        org.junit.Assert.assertNotNull(obj_array68);
        org.junit.Assert.assertTrue(i72 == 2);
        org.junit.Assert.assertTrue(i73 == 0);
        org.junit.Assert.assertTrue(b74 == true);
    }

    @Test
    public void test330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test330");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        fixedOrderComparator0.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        boolean b17 = fixedOrderComparator15.add((java.lang.Object) (-1.0f));
        fixedOrderComparator15.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array26);
        int i30 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b31 = fixedOrderComparator29.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array39 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array39);
        boolean b42 = fixedOrderComparator40.add((java.lang.Object) (-1.0f));
        int i43 = fixedOrderComparator40.getUnknownObjectBehavior();
        java.lang.Object[] obj_array50 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array50);
        fixedOrderComparator52.setUnknownObjectBehavior((int) (short) 0);
        int i55 = fixedOrderComparator52.getUnknownObjectBehavior();
        boolean b56 = fixedOrderComparator40.add((java.lang.Object) i55);
        boolean b57 = fixedOrderComparator32.add((java.lang.Object) fixedOrderComparator40);
        int i58 = fixedOrderComparator15.compare((java.lang.Object) b31, (java.lang.Object) fixedOrderComparator32);
        java.lang.Object[] obj_array66 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array66);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array66);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array66);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array66);
        java.lang.Object[] obj_array71 = new java.lang.Object[] { fixedOrderComparator32, (byte) 10, obj_array66 };
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array66);
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator(obj_array66);
        collections.comparators.FixedOrderComparator fixedOrderComparator74 = new collections.comparators.FixedOrderComparator(obj_array66);
        java.lang.Object obj75 = null;
        boolean b76 = fixedOrderComparator74.add(obj75);
        java.lang.Object[] obj_array83 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator84 = new collections.comparators.FixedOrderComparator(obj_array83);
        boolean b86 = fixedOrderComparator84.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator87 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator87.setUnknownObjectBehavior(0);
        int i90 = fixedOrderComparator87.getUnknownObjectBehavior();
        fixedOrderComparator87.setUnknownObjectBehavior((int) (byte) 0);
        boolean b93 = fixedOrderComparator84.add((java.lang.Object) fixedOrderComparator87);
        java.lang.Object obj95 = null;
        int i96 = fixedOrderComparator87.compare((java.lang.Object) 1.0d, obj95);
        boolean b97 = fixedOrderComparator87.isLocked();
        boolean b98 = fixedOrderComparator87.isLocked();
        int i99 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator74, (java.lang.Object) b98);
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(i30 == 2);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertNotNull(obj_array39);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertTrue(i43 == 2);
        org.junit.Assert.assertNotNull(obj_array50);
        org.junit.Assert.assertTrue(i55 == 0);
        org.junit.Assert.assertTrue(b56 == false);
        org.junit.Assert.assertTrue(b57 == true);
        org.junit.Assert.assertTrue(i58 == 0);
        org.junit.Assert.assertNotNull(obj_array66);
        org.junit.Assert.assertNotNull(obj_array71);
        org.junit.Assert.assertTrue(b76 == true);
        org.junit.Assert.assertNotNull(obj_array83);
        org.junit.Assert.assertTrue(b86 == true);
        org.junit.Assert.assertTrue(i90 == 0);
        org.junit.Assert.assertTrue(b93 == true);
        org.junit.Assert.assertTrue(i96 == 0);
        org.junit.Assert.assertTrue(b97 == true);
        org.junit.Assert.assertTrue(b98 == true);
        org.junit.Assert.assertTrue(i99 == 0);
    }

    @Test
    public void test331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test331");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        boolean b21 = fixedOrderComparator7.isLocked();
        boolean b22 = fixedOrderComparator7.isLocked();
        boolean b23 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array30 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array30);
        int i35 = fixedOrderComparator34.getUnknownObjectBehavior();
        int i36 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b37 = fixedOrderComparator34.isLocked();
        int i38 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b39 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator34);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator();
        int i41 = fixedOrderComparator40.getUnknownObjectBehavior();
        boolean b42 = fixedOrderComparator40.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator();
        int i44 = fixedOrderComparator43.getUnknownObjectBehavior();
        boolean b45 = fixedOrderComparator43.isLocked();
        boolean b46 = fixedOrderComparator40.add((java.lang.Object) b45);
        boolean b47 = fixedOrderComparator40.isLocked();
        int i48 = fixedOrderComparator40.getUnknownObjectBehavior();
        boolean b49 = fixedOrderComparator7.add((java.lang.Object) i48);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(i36 == 2);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(i38 == 2);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(i41 == 2);
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertTrue(i44 == 2);
        org.junit.Assert.assertTrue(b45 == false);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(b47 == false);
        org.junit.Assert.assertTrue(i48 == 2);
        org.junit.Assert.assertTrue(b49 == true);
    }

    @Test
    public void test332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test332");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        boolean b14 = fixedOrderComparator12.isLocked();
        boolean b15 = fixedOrderComparator12.isLocked();
        try {
            fixedOrderComparator12.setUnknownObjectBehavior((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertTrue(b15 == false);
    }

    @Test
    public void test333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test333");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i10 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b11 = fixedOrderComparator9.isLocked();
        int i12 = fixedOrderComparator9.getUnknownObjectBehavior();
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array19);
        boolean b24 = fixedOrderComparator9.add((java.lang.Object) fixedOrderComparator23);
        boolean b25 = fixedOrderComparator9.isLocked();
        boolean b26 = fixedOrderComparator9.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i10 == 2);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertTrue(i12 == 2);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertTrue(b26 == false);
    }

    @Test
    public void test334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test334");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array16 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator19.setUnknownObjectBehavior(0);
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        boolean b24 = fixedOrderComparator18.addAsEqual((java.lang.Object) i22, (java.lang.Object) (short) 1);
        int i26 = fixedOrderComparator7.compare((java.lang.Object) fixedOrderComparator18, (java.lang.Object) '#');
        java.lang.Object[] obj_array33 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        boolean b36 = fixedOrderComparator34.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator37.setUnknownObjectBehavior(0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        fixedOrderComparator37.setUnknownObjectBehavior((int) (byte) 0);
        boolean b43 = fixedOrderComparator34.add((java.lang.Object) fixedOrderComparator37);
        java.lang.Object obj45 = null;
        int i46 = fixedOrderComparator37.compare((java.lang.Object) 1.0d, obj45);
        boolean b47 = fixedOrderComparator37.isLocked();
        boolean b48 = fixedOrderComparator37.isLocked();
        java.lang.Object[] obj_array55 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        java.lang.Object[] obj_array63 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array63);
        fixedOrderComparator64.setUnknownObjectBehavior(0);
        boolean b67 = fixedOrderComparator56.add((java.lang.Object) 0);
        fixedOrderComparator56.setUnknownObjectBehavior((int) (short) 0);
        boolean b70 = fixedOrderComparator56.isLocked();
        boolean b71 = fixedOrderComparator56.isLocked();
        boolean b72 = fixedOrderComparator56.isLocked();
        int i73 = fixedOrderComparator56.getUnknownObjectBehavior();
        int i74 = fixedOrderComparator56.getUnknownObjectBehavior();
        try {
            int i75 = fixedOrderComparator18.compare((java.lang.Object) b48, (java.lang.Object) i74);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i26 == 0);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertNotNull(obj_array63);
        org.junit.Assert.assertTrue(b67 == false);
        org.junit.Assert.assertTrue(b70 == false);
        org.junit.Assert.assertTrue(b71 == false);
        org.junit.Assert.assertTrue(b72 == false);
        org.junit.Assert.assertTrue(i73 == 0);
        org.junit.Assert.assertTrue(i74 == 0);
    }

    @Test
    public void test335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test335");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b28 = fixedOrderComparator14.add((java.lang.Object) obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array21);
        java.lang.Object[] obj_array38 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array38);
        fixedOrderComparator39.setUnknownObjectBehavior(0);
        boolean b43 = fixedOrderComparator39.add((java.lang.Object) 1.0f);
        java.lang.Object obj44 = null;
        java.lang.Object[] obj_array51 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array51);
        fixedOrderComparator52.setUnknownObjectBehavior(0);
        boolean b56 = fixedOrderComparator52.add((java.lang.Object) 1.0f);
        int i57 = fixedOrderComparator52.getUnknownObjectBehavior();
        int i58 = fixedOrderComparator39.compare(obj44, (java.lang.Object) i57);
        int i59 = fixedOrderComparator39.getUnknownObjectBehavior();
        boolean b60 = fixedOrderComparator39.isLocked();
        java.lang.Object[] obj_array67 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array67);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array67);
        fixedOrderComparator69.setUnknownObjectBehavior((int) (short) 0);
        int i72 = fixedOrderComparator69.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator73.setUnknownObjectBehavior(0);
        int i76 = fixedOrderComparator73.getUnknownObjectBehavior();
        int i77 = fixedOrderComparator39.compare((java.lang.Object) i72, (java.lang.Object) fixedOrderComparator73);
        int i78 = fixedOrderComparator39.getUnknownObjectBehavior();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Object obj80 = null;
        int i81 = fixedOrderComparator39.compare(obj79, obj80);
        int i82 = fixedOrderComparator39.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator83.setUnknownObjectBehavior(0);
        int i86 = fixedOrderComparator83.getUnknownObjectBehavior();
        fixedOrderComparator83.setUnknownObjectBehavior((int) (byte) 0);
        boolean b89 = fixedOrderComparator83.isLocked();
        int i90 = fixedOrderComparator83.getUnknownObjectBehavior();
        int i91 = fixedOrderComparator83.getUnknownObjectBehavior();
        boolean b92 = fixedOrderComparator31.addAsEqual((java.lang.Object) i82, (java.lang.Object) fixedOrderComparator83);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array38);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertNotNull(obj_array51);
        org.junit.Assert.assertTrue(b56 == true);
        org.junit.Assert.assertTrue(i57 == 0);
        org.junit.Assert.assertTrue(i58 == (-1));
        org.junit.Assert.assertTrue(i59 == 0);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertNotNull(obj_array67);
        org.junit.Assert.assertTrue(i72 == 0);
        org.junit.Assert.assertTrue(i76 == 0);
        org.junit.Assert.assertTrue(i77 == 1);
        org.junit.Assert.assertTrue(i78 == 0);
        org.junit.Assert.assertTrue(i81 == 0);
        org.junit.Assert.assertTrue(i82 == 0);
        org.junit.Assert.assertTrue(i86 == 0);
        org.junit.Assert.assertTrue(b89 == false);
        org.junit.Assert.assertTrue(i90 == 0);
        org.junit.Assert.assertTrue(i91 == 0);
        org.junit.Assert.assertTrue(b92 == true);
    }

    @Test
    public void test336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test336");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object[] obj_array23 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array23);
        fixedOrderComparator24.setUnknownObjectBehavior(0);
        boolean b28 = fixedOrderComparator24.add((java.lang.Object) 1.0f);
        int i29 = fixedOrderComparator24.getUnknownObjectBehavior();
        boolean b30 = fixedOrderComparator24.isLocked();
        java.lang.Object[] obj_array31 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        java.lang.Object[] obj_array33 = new java.lang.Object[] { fixedOrderComparator32 };
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array33);
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        int i45 = fixedOrderComparator24.compare((java.lang.Object) fixedOrderComparator35, (java.lang.Object) obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array42);
        boolean b48 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator47);
        try {
            fixedOrderComparator47.setUnknownObjectBehavior(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertNotNull(obj_array23);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(i29 == 0);
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(i45 == 0);
        org.junit.Assert.assertTrue(b48 == true);
    }

    @Test
    public void test337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test337");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b12 = fixedOrderComparator10.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        boolean b19 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object obj21 = null;
        int i22 = fixedOrderComparator13.compare((java.lang.Object) 1.0d, obj21);
        boolean b23 = fixedOrderComparator13.isLocked();
        boolean b24 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object[] obj_array31 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array31);
        fixedOrderComparator33.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        int i46 = fixedOrderComparator33.compare((java.lang.Object) fixedOrderComparator44, (java.lang.Object) (-1.0d));
        try {
            boolean b47 = fixedOrderComparator13.add((java.lang.Object) fixedOrderComparator33);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(i46 == 0);
    }

    @Test
    public void test338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test338");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        boolean b21 = fixedOrderComparator7.isLocked();
        boolean b22 = fixedOrderComparator7.isLocked();
        boolean b23 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array30 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array30);
        int i35 = fixedOrderComparator34.getUnknownObjectBehavior();
        int i36 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b37 = fixedOrderComparator34.isLocked();
        int i38 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b39 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator34);
        boolean b40 = fixedOrderComparator34.isLocked();
        try {
            fixedOrderComparator34.setUnknownObjectBehavior((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(i36 == 2);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(i38 == 2);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b40 == false);
    }

    @Test
    public void test339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test339");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b8 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array15 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array15);
        fixedOrderComparator16.setUnknownObjectBehavior(0);
        boolean b20 = fixedOrderComparator16.add((java.lang.Object) 1.0f);
        java.lang.Object obj21 = null;
        java.lang.Object[] obj_array28 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        boolean b33 = fixedOrderComparator29.add((java.lang.Object) 1.0f);
        int i34 = fixedOrderComparator29.getUnknownObjectBehavior();
        int i35 = fixedOrderComparator16.compare(obj21, (java.lang.Object) i34);
        java.lang.Object[] obj_array36 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array36);
        try {
            int i39 = fixedOrderComparator7.compare(obj21, (java.lang.Object) obj_array36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(obj_array15);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(b33 == true);
        org.junit.Assert.assertTrue(i34 == 0);
        org.junit.Assert.assertTrue(i35 == (-1));
        org.junit.Assert.assertNotNull(obj_array36);
    }

    @Test
    public void test340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test340");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        fixedOrderComparator11.setUnknownObjectBehavior(0);
        boolean b15 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        boolean b17 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator();
        boolean b19 = fixedOrderComparator18.isLocked();
        boolean b21 = fixedOrderComparator18.add((java.lang.Object) 10.0d);
        int i22 = fixedOrderComparator0.compare((java.lang.Object) b17, (java.lang.Object) fixedOrderComparator18);
        boolean b23 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator();
        int i34 = fixedOrderComparator33.getUnknownObjectBehavior();
        java.lang.Object[] obj_array41 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array41);
        boolean b46 = fixedOrderComparator33.add((java.lang.Object) fixedOrderComparator45);
        fixedOrderComparator33.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array55 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array55);
        int i60 = fixedOrderComparator59.getUnknownObjectBehavior();
        int i61 = fixedOrderComparator59.getUnknownObjectBehavior();
        boolean b62 = fixedOrderComparator59.isLocked();
        int i63 = fixedOrderComparator59.getUnknownObjectBehavior();
        int i65 = fixedOrderComparator33.compare((java.lang.Object) fixedOrderComparator59, (java.lang.Object) 1L);
        int i66 = fixedOrderComparator0.compare((java.lang.Object) obj_array30, (java.lang.Object) i65);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array30);
        java.lang.Object[] obj_array75 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array75);
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array75);
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator(obj_array75);
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array75);
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array75);
        java.lang.Object[] obj_array87 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator88 = new collections.comparators.FixedOrderComparator(obj_array87);
        collections.comparators.FixedOrderComparator fixedOrderComparator89 = new collections.comparators.FixedOrderComparator(obj_array87);
        fixedOrderComparator89.setUnknownObjectBehavior((int) (short) 0);
        boolean b92 = fixedOrderComparator89.isLocked();
        try {
            boolean b93 = fixedOrderComparator68.addAsEqual((java.lang.Object) obj_array75, (java.lang.Object) b92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(i34 == 2);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(i60 == 2);
        org.junit.Assert.assertTrue(i61 == 2);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertTrue(i63 == 2);
        org.junit.Assert.assertTrue(i65 == 0);
        org.junit.Assert.assertTrue(i66 == 0);
        org.junit.Assert.assertNotNull(obj_array75);
        org.junit.Assert.assertNotNull(obj_array87);
        org.junit.Assert.assertTrue(b92 == false);
    }

    @Test
    public void test341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test341");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i28 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        boolean b38 = fixedOrderComparator36.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator39.setUnknownObjectBehavior(0);
        int i42 = fixedOrderComparator39.getUnknownObjectBehavior();
        fixedOrderComparator39.setUnknownObjectBehavior((int) (byte) 0);
        boolean b45 = fixedOrderComparator36.add((java.lang.Object) fixedOrderComparator39);
        java.lang.Object obj47 = null;
        int i48 = fixedOrderComparator39.compare((java.lang.Object) 1.0d, obj47);
        boolean b49 = fixedOrderComparator39.isLocked();
        boolean b50 = fixedOrderComparator39.isLocked();
        boolean b51 = fixedOrderComparator39.isLocked();
        try {
            boolean b52 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator39);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(i42 == 0);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(i48 == 0);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertTrue(b51 == true);
    }

    @Test
    public void test342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test342");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator9.setUnknownObjectBehavior(0);
        int i12 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) i12, (java.lang.Object) (short) 1);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b28 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator27);
        try {
            fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b28 == true);
    }

    @Test
    public void test343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test343");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        int i11 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object obj13 = null;
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) 10.0f, obj13);
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator();
        int i16 = fixedOrderComparator15.getUnknownObjectBehavior();
        java.lang.Object[] obj_array23 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array23);
        boolean b28 = fixedOrderComparator15.add((java.lang.Object) fixedOrderComparator27);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b31 = fixedOrderComparator15.isLocked();
        int i33 = fixedOrderComparator8.compare((java.lang.Object) fixedOrderComparator15, (java.lang.Object) 2);
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        boolean b43 = fixedOrderComparator41.add((java.lang.Object) (-1.0f));
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        java.lang.Object[] obj_array51 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array51);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array51);
        fixedOrderComparator53.setUnknownObjectBehavior((int) (short) 0);
        int i56 = fixedOrderComparator53.getUnknownObjectBehavior();
        boolean b57 = fixedOrderComparator41.add((java.lang.Object) i56);
        boolean b58 = fixedOrderComparator15.add((java.lang.Object) b57);
        fixedOrderComparator15.setUnknownObjectBehavior((int) (short) 0);
        boolean b61 = fixedOrderComparator15.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i16 == 2);
        org.junit.Assert.assertNotNull(obj_array23);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertTrue(i33 == 0);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertTrue(i44 == 2);
        org.junit.Assert.assertNotNull(obj_array51);
        org.junit.Assert.assertTrue(i56 == 0);
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertTrue(b61 == false);
    }

    @Test
    public void test344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test344");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        java.lang.Object[] obj_array12 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array12);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array12);
        fixedOrderComparator14.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator14.setUnknownObjectBehavior(2);
        int i19 = fixedOrderComparator14.getUnknownObjectBehavior();
        try {
            boolean b21 = fixedOrderComparator0.addAsEqual((java.lang.Object) i19, (java.lang.Object) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertNotNull(obj_array12);
        org.junit.Assert.assertTrue(i19 == 2);
    }

    @Test
    public void test345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test345");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array19 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator21.setUnknownObjectBehavior((int) (short) 0);
        int i24 = fixedOrderComparator7.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator25.setUnknownObjectBehavior(0);
        int i28 = fixedOrderComparator25.getUnknownObjectBehavior();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array35);
        java.lang.Object[] obj_array46 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array46);
        fixedOrderComparator48.setUnknownObjectBehavior((int) (short) 0);
        int i51 = fixedOrderComparator48.getUnknownObjectBehavior();
        java.lang.Object obj53 = null;
        boolean b54 = fixedOrderComparator48.addAsEqual((java.lang.Object) 10.0f, obj53);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator();
        int i56 = fixedOrderComparator55.getUnknownObjectBehavior();
        java.lang.Object[] obj_array63 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array63);
        boolean b68 = fixedOrderComparator55.add((java.lang.Object) fixedOrderComparator67);
        fixedOrderComparator55.setUnknownObjectBehavior(0);
        boolean b71 = fixedOrderComparator55.isLocked();
        int i73 = fixedOrderComparator48.compare((java.lang.Object) fixedOrderComparator55, (java.lang.Object) 2);
        boolean b74 = fixedOrderComparator39.add((java.lang.Object) fixedOrderComparator55);
        boolean b75 = fixedOrderComparator21.addAsEqual((java.lang.Object) i28, (java.lang.Object) fixedOrderComparator55);
        boolean b76 = fixedOrderComparator21.isLocked();
        int i77 = fixedOrderComparator21.getUnknownObjectBehavior();
        boolean b78 = fixedOrderComparator21.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertTrue(i51 == 0);
        org.junit.Assert.assertTrue(b54 == true);
        org.junit.Assert.assertTrue(i56 == 2);
        org.junit.Assert.assertNotNull(obj_array63);
        org.junit.Assert.assertTrue(b68 == true);
        org.junit.Assert.assertTrue(b71 == false);
        org.junit.Assert.assertTrue(i73 == 0);
        org.junit.Assert.assertTrue(b74 == true);
        org.junit.Assert.assertTrue(b75 == true);
        org.junit.Assert.assertTrue(b76 == false);
        org.junit.Assert.assertTrue(i77 == 0);
        org.junit.Assert.assertTrue(b78 == false);
    }

    @Test
    public void test346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test346");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        boolean b21 = fixedOrderComparator7.isLocked();
        boolean b22 = fixedOrderComparator7.isLocked();
        boolean b23 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        boolean b32 = fixedOrderComparator31.isLocked();
        boolean b33 = fixedOrderComparator7.add((java.lang.Object) b32);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertTrue(b33 == true);
    }

    @Test
    public void test347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test347");
        java.lang.Object[] obj_array0 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator1 = new collections.comparators.FixedOrderComparator(obj_array0);
        java.lang.Object[] obj_array2 = new java.lang.Object[] { fixedOrderComparator1 };
        collections.comparators.FixedOrderComparator fixedOrderComparator3 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator4 = new collections.comparators.FixedOrderComparator(obj_array2);
        boolean b5 = fixedOrderComparator4.isLocked();
        int i6 = fixedOrderComparator4.getUnknownObjectBehavior();
        java.lang.Object[] obj_array13 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array13);
        boolean b16 = fixedOrderComparator14.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator17.setUnknownObjectBehavior(0);
        int i20 = fixedOrderComparator17.getUnknownObjectBehavior();
        fixedOrderComparator17.setUnknownObjectBehavior((int) (byte) 0);
        boolean b23 = fixedOrderComparator14.add((java.lang.Object) fixedOrderComparator17);
        java.lang.Object obj24 = null;
        boolean b25 = fixedOrderComparator14.add(obj24);
        java.lang.Object[] obj_array32 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        fixedOrderComparator33.setUnknownObjectBehavior(0);
        boolean b37 = fixedOrderComparator33.add((java.lang.Object) 1.0f);
        boolean b39 = fixedOrderComparator33.add((java.lang.Object) 1.0f);
        boolean b40 = fixedOrderComparator33.isLocked();
        boolean b41 = fixedOrderComparator33.isLocked();
        boolean b42 = fixedOrderComparator14.add((java.lang.Object) fixedOrderComparator33);
        int i43 = fixedOrderComparator14.getUnknownObjectBehavior();
        java.lang.Object[] obj_array50 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array50);
        fixedOrderComparator52.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator52.setUnknownObjectBehavior(0);
        java.lang.Object obj57 = null;
        int i58 = fixedOrderComparator14.compare((java.lang.Object) 0, obj57);
        java.lang.Object obj59 = null;
        try {
            boolean b60 = fixedOrderComparator4.addAsEqual((java.lang.Object) fixedOrderComparator14, obj59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array0);
        org.junit.Assert.assertNotNull(obj_array2);
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue(i6 == 2);
        org.junit.Assert.assertNotNull(obj_array13);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertTrue(i43 == 2);
        org.junit.Assert.assertNotNull(obj_array50);
        org.junit.Assert.assertTrue(i58 == (-1));
    }

    @Test
    public void test348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test348");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b14 = fixedOrderComparator13.isLocked();
        int i15 = fixedOrderComparator13.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertTrue(i15 == 2);
    }

    @Test
    public void test349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test349");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b12 = fixedOrderComparator10.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        boolean b19 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object obj21 = null;
        int i22 = fixedOrderComparator13.compare((java.lang.Object) 1.0d, obj21);
        boolean b23 = fixedOrderComparator13.isLocked();
        boolean b24 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator13);
        boolean b25 = fixedOrderComparator13.isLocked();
        boolean b26 = fixedOrderComparator13.isLocked();
        int i27 = fixedOrderComparator13.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator();
        int i29 = fixedOrderComparator28.getUnknownObjectBehavior();
        java.lang.Object[] obj_array36 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array36);
        boolean b41 = fixedOrderComparator28.add((java.lang.Object) fixedOrderComparator40);
        fixedOrderComparator28.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array50 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array50);
        int i55 = fixedOrderComparator54.getUnknownObjectBehavior();
        int i56 = fixedOrderComparator54.getUnknownObjectBehavior();
        boolean b57 = fixedOrderComparator54.isLocked();
        int i58 = fixedOrderComparator54.getUnknownObjectBehavior();
        int i60 = fixedOrderComparator28.compare((java.lang.Object) fixedOrderComparator54, (java.lang.Object) 1L);
        java.lang.Object[] obj_array67 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array67);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array67);
        fixedOrderComparator69.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator69.setUnknownObjectBehavior(2);
        boolean b74 = fixedOrderComparator69.isLocked();
        boolean b75 = fixedOrderComparator54.add((java.lang.Object) fixedOrderComparator69);
        try {
            boolean b76 = fixedOrderComparator13.add((java.lang.Object) fixedOrderComparator69);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(i29 == 2);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertNotNull(obj_array50);
        org.junit.Assert.assertTrue(i55 == 2);
        org.junit.Assert.assertTrue(i56 == 2);
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertTrue(i58 == 2);
        org.junit.Assert.assertTrue(i60 == 0);
        org.junit.Assert.assertNotNull(obj_array67);
        org.junit.Assert.assertTrue(b74 == false);
        org.junit.Assert.assertTrue(b75 == true);
    }

    @Test
    public void test350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test350");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array16 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        boolean b19 = fixedOrderComparator17.add((java.lang.Object) (-1.0f));
        fixedOrderComparator17.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array28 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array28);
        int i32 = fixedOrderComparator31.getUnknownObjectBehavior();
        boolean b33 = fixedOrderComparator31.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array41 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array41);
        boolean b44 = fixedOrderComparator42.add((java.lang.Object) (-1.0f));
        int i45 = fixedOrderComparator42.getUnknownObjectBehavior();
        java.lang.Object[] obj_array52 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array52);
        fixedOrderComparator54.setUnknownObjectBehavior((int) (short) 0);
        int i57 = fixedOrderComparator54.getUnknownObjectBehavior();
        boolean b58 = fixedOrderComparator42.add((java.lang.Object) i57);
        boolean b59 = fixedOrderComparator34.add((java.lang.Object) fixedOrderComparator42);
        int i60 = fixedOrderComparator17.compare((java.lang.Object) b33, (java.lang.Object) fixedOrderComparator34);
        java.lang.Object[] obj_array68 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array68);
        java.lang.Object[] obj_array73 = new java.lang.Object[] { fixedOrderComparator34, (byte) 10, obj_array68 };
        collections.comparators.FixedOrderComparator fixedOrderComparator74 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array68);
        boolean b76 = fixedOrderComparator9.add((java.lang.Object) fixedOrderComparator75);
        boolean b77 = fixedOrderComparator75.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(i32 == 2);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertTrue(i45 == 2);
        org.junit.Assert.assertNotNull(obj_array52);
        org.junit.Assert.assertTrue(i57 == 0);
        org.junit.Assert.assertTrue(b58 == false);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertTrue(i60 == 0);
        org.junit.Assert.assertNotNull(obj_array68);
        org.junit.Assert.assertNotNull(obj_array73);
        org.junit.Assert.assertTrue(b76 == true);
        org.junit.Assert.assertTrue(b77 == false);
    }

    @Test
    public void test351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test351");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array18 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        fixedOrderComparator19.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array28 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator31.setUnknownObjectBehavior(0);
        int i34 = fixedOrderComparator31.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator30.addAsEqual((java.lang.Object) i34, (java.lang.Object) (short) 1);
        int i38 = fixedOrderComparator19.compare((java.lang.Object) fixedOrderComparator30, (java.lang.Object) '#');
        java.lang.Object[] obj_array45 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array45);
        boolean b48 = fixedOrderComparator46.add((java.lang.Object) (-1.0f));
        fixedOrderComparator46.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array57 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array57);
        int i61 = fixedOrderComparator60.getUnknownObjectBehavior();
        boolean b62 = fixedOrderComparator60.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array70 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array70);
        boolean b73 = fixedOrderComparator71.add((java.lang.Object) (-1.0f));
        int i74 = fixedOrderComparator71.getUnknownObjectBehavior();
        java.lang.Object[] obj_array81 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array81);
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator(obj_array81);
        fixedOrderComparator83.setUnknownObjectBehavior((int) (short) 0);
        int i86 = fixedOrderComparator83.getUnknownObjectBehavior();
        boolean b87 = fixedOrderComparator71.add((java.lang.Object) i86);
        boolean b88 = fixedOrderComparator63.add((java.lang.Object) fixedOrderComparator71);
        int i89 = fixedOrderComparator46.compare((java.lang.Object) b62, (java.lang.Object) fixedOrderComparator63);
        int i90 = fixedOrderComparator7.compare((java.lang.Object) '#', (java.lang.Object) i89);
        int i91 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b92 = fixedOrderComparator7.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(i34 == 0);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(i38 == 0);
        org.junit.Assert.assertNotNull(obj_array45);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertNotNull(obj_array57);
        org.junit.Assert.assertTrue(i61 == 2);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertNotNull(obj_array70);
        org.junit.Assert.assertTrue(b73 == true);
        org.junit.Assert.assertTrue(i74 == 2);
        org.junit.Assert.assertNotNull(obj_array81);
        org.junit.Assert.assertTrue(i86 == 0);
        org.junit.Assert.assertTrue(b87 == false);
        org.junit.Assert.assertTrue(b88 == true);
        org.junit.Assert.assertTrue(i89 == 0);
        org.junit.Assert.assertTrue(i90 == (-1));
        org.junit.Assert.assertTrue(i91 == 0);
        org.junit.Assert.assertTrue(b92 == true);
    }

    @Test
    public void test352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test352");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator9.setUnknownObjectBehavior(0);
        int i12 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) i12, (java.lang.Object) (short) 1);
        int i15 = fixedOrderComparator8.getUnknownObjectBehavior();
        fixedOrderComparator8.setUnknownObjectBehavior((int) (byte) 0);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator18.setUnknownObjectBehavior(0);
        boolean b21 = fixedOrderComparator18.isLocked();
        java.lang.Object[] obj_array28 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        boolean b33 = fixedOrderComparator29.add((java.lang.Object) 1.0f);
        boolean b35 = fixedOrderComparator29.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator();
        boolean b37 = fixedOrderComparator36.isLocked();
        boolean b39 = fixedOrderComparator36.add((java.lang.Object) 10.0d);
        int i40 = fixedOrderComparator18.compare((java.lang.Object) b35, (java.lang.Object) fixedOrderComparator36);
        java.lang.Object[] obj_array47 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array47);
        boolean b50 = fixedOrderComparator48.add((java.lang.Object) (short) 10);
        boolean b51 = fixedOrderComparator8.addAsEqual((java.lang.Object) i40, (java.lang.Object) b50);
        int i52 = fixedOrderComparator8.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator53.setUnknownObjectBehavior(0);
        int i56 = fixedOrderComparator53.getUnknownObjectBehavior();
        fixedOrderComparator53.setUnknownObjectBehavior((int) (byte) 0);
        fixedOrderComparator53.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array67 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array67);
        java.lang.Object[] obj_array75 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array75);
        fixedOrderComparator76.setUnknownObjectBehavior(0);
        boolean b79 = fixedOrderComparator68.add((java.lang.Object) 0);
        boolean b80 = fixedOrderComparator68.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator();
        int i82 = fixedOrderComparator81.getUnknownObjectBehavior();
        boolean b83 = fixedOrderComparator68.add((java.lang.Object) i82);
        int i85 = fixedOrderComparator53.compare((java.lang.Object) fixedOrderComparator68, (java.lang.Object) 100);
        boolean b86 = fixedOrderComparator8.add((java.lang.Object) i85);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i15 == 2);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(b33 == true);
        org.junit.Assert.assertTrue(b35 == false);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertNotNull(obj_array47);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertTrue(b51 == true);
        org.junit.Assert.assertTrue(i52 == 0);
        org.junit.Assert.assertTrue(i56 == 0);
        org.junit.Assert.assertNotNull(obj_array67);
        org.junit.Assert.assertNotNull(obj_array75);
        org.junit.Assert.assertTrue(b79 == false);
        org.junit.Assert.assertTrue(b80 == false);
        org.junit.Assert.assertTrue(i82 == 2);
        org.junit.Assert.assertTrue(b83 == true);
        org.junit.Assert.assertTrue(i85 == 0);
        org.junit.Assert.assertTrue(b86 == false);
    }

    @Test
    public void test353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test353");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        int i21 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b22 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        fixedOrderComparator30.setUnknownObjectBehavior(0);
        boolean b34 = fixedOrderComparator30.add((java.lang.Object) 1.0f);
        boolean b36 = fixedOrderComparator30.add((java.lang.Object) 1.0f);
        java.lang.Object[] obj_array43 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array43);
        boolean b46 = fixedOrderComparator44.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator47.setUnknownObjectBehavior(0);
        int i50 = fixedOrderComparator47.getUnknownObjectBehavior();
        fixedOrderComparator47.setUnknownObjectBehavior((int) (byte) 0);
        boolean b53 = fixedOrderComparator44.add((java.lang.Object) fixedOrderComparator47);
        java.lang.Object obj55 = null;
        int i56 = fixedOrderComparator47.compare((java.lang.Object) 1.0d, obj55);
        java.lang.Object[] obj_array63 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator66.setUnknownObjectBehavior(0);
        int i69 = fixedOrderComparator66.getUnknownObjectBehavior();
        boolean b71 = fixedOrderComparator65.addAsEqual((java.lang.Object) i69, (java.lang.Object) (short) 1);
        int i72 = fixedOrderComparator65.getUnknownObjectBehavior();
        java.lang.Object[] obj_array79 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array79);
        boolean b81 = fixedOrderComparator80.isLocked();
        boolean b82 = fixedOrderComparator65.add((java.lang.Object) fixedOrderComparator80);
        int i84 = fixedOrderComparator47.compare((java.lang.Object) fixedOrderComparator65, (java.lang.Object) 1L);
        fixedOrderComparator65.setUnknownObjectBehavior(1);
        try {
            boolean b87 = fixedOrderComparator0.addAsEqual((java.lang.Object) b36, (java.lang.Object) fixedOrderComparator65);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertNotNull(obj_array43);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(i50 == 0);
        org.junit.Assert.assertTrue(b53 == true);
        org.junit.Assert.assertTrue(i56 == 0);
        org.junit.Assert.assertNotNull(obj_array63);
        org.junit.Assert.assertTrue(i69 == 0);
        org.junit.Assert.assertTrue(b71 == true);
        org.junit.Assert.assertTrue(i72 == 2);
        org.junit.Assert.assertNotNull(obj_array79);
        org.junit.Assert.assertTrue(b81 == false);
        org.junit.Assert.assertTrue(b82 == true);
        org.junit.Assert.assertTrue(i84 == 0);
    }

    @Test
    public void test354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test354");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b7 = fixedOrderComparator0.add((java.lang.Object) (short) 10);
        try {
            fixedOrderComparator0.setUnknownObjectBehavior((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b7 == true);
    }

    @Test
    public void test355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test355");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        int i10 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        fixedOrderComparator19.setUnknownObjectBehavior((int) (short) 0);
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        boolean b23 = fixedOrderComparator7.add((java.lang.Object) i22);
        int i24 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i25 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array32 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        fixedOrderComparator33.setUnknownObjectBehavior(0);
        boolean b37 = fixedOrderComparator33.add((java.lang.Object) 1.0f);
        boolean b39 = fixedOrderComparator33.add((java.lang.Object) 1.0f);
        fixedOrderComparator33.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array48 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array48);
        boolean b57 = fixedOrderComparator33.add((java.lang.Object) obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator64.setUnknownObjectBehavior(0);
        boolean b67 = fixedOrderComparator64.isLocked();
        boolean b68 = fixedOrderComparator64.isLocked();
        java.lang.Object[] obj_array75 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array75);
        fixedOrderComparator76.setUnknownObjectBehavior(0);
        boolean b80 = fixedOrderComparator76.add((java.lang.Object) 1.0f);
        boolean b82 = fixedOrderComparator76.add((java.lang.Object) 1.0f);
        int i84 = fixedOrderComparator64.compare((java.lang.Object) fixedOrderComparator76, (java.lang.Object) 1.0d);
        try {
            int i85 = fixedOrderComparator7.compare((java.lang.Object) obj_array48, (java.lang.Object) fixedOrderComparator64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i10 == 2);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue(i24 == 2);
        org.junit.Assert.assertTrue(i25 == 2);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertNotNull(obj_array48);
        org.junit.Assert.assertTrue(b57 == true);
        org.junit.Assert.assertTrue(b67 == false);
        org.junit.Assert.assertTrue(b68 == false);
        org.junit.Assert.assertNotNull(obj_array75);
        org.junit.Assert.assertTrue(b80 == true);
        org.junit.Assert.assertTrue(b82 == false);
        org.junit.Assert.assertTrue(i84 == 0);
    }

    @Test
    public void test356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test356");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b13 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        fixedOrderComparator7.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b31 = fixedOrderComparator7.add((java.lang.Object) obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b33 = fixedOrderComparator32.isLocked();
        try {
            fixedOrderComparator32.setUnknownObjectBehavior(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(b33 == false);
    }

    @Test
    public void test357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test357");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj18 = null;
        int i19 = fixedOrderComparator10.compare((java.lang.Object) 1.0d, obj18);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        int i32 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b34 = fixedOrderComparator28.addAsEqual((java.lang.Object) i32, (java.lang.Object) (short) 1);
        int i35 = fixedOrderComparator28.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        boolean b44 = fixedOrderComparator43.isLocked();
        boolean b45 = fixedOrderComparator28.add((java.lang.Object) fixedOrderComparator43);
        int i47 = fixedOrderComparator10.compare((java.lang.Object) fixedOrderComparator28, (java.lang.Object) 1L);
        int i48 = fixedOrderComparator28.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(i48 == 2);
    }

    @Test
    public void test358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test358");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { fixedOrderComparator0, obj_array22 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array22);
        java.lang.Object[] obj_array41 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array41);
        java.lang.Object[] obj_array56 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array56);
        boolean b63 = fixedOrderComparator49.add((java.lang.Object) obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array56);
        try {
            boolean b66 = fixedOrderComparator33.addAsEqual((java.lang.Object) 100L, (java.lang.Object) obj_array56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertNotNull(obj_array56);
        org.junit.Assert.assertTrue(b63 == true);
    }

    @Test
    public void test359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test359");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array16 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator19.setUnknownObjectBehavior(0);
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        boolean b24 = fixedOrderComparator18.addAsEqual((java.lang.Object) i22, (java.lang.Object) (short) 1);
        int i26 = fixedOrderComparator7.compare((java.lang.Object) fixedOrderComparator18, (java.lang.Object) '#');
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator27.setUnknownObjectBehavior(0);
        boolean b30 = fixedOrderComparator27.isLocked();
        boolean b31 = fixedOrderComparator27.isLocked();
        java.lang.Object[] obj_array38 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array38);
        fixedOrderComparator39.setUnknownObjectBehavior(0);
        boolean b43 = fixedOrderComparator39.add((java.lang.Object) 1.0f);
        boolean b45 = fixedOrderComparator39.add((java.lang.Object) 1.0f);
        int i47 = fixedOrderComparator27.compare((java.lang.Object) fixedOrderComparator39, (java.lang.Object) 1.0d);
        fixedOrderComparator39.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array56 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator();
        int i62 = fixedOrderComparator61.getUnknownObjectBehavior();
        boolean b63 = fixedOrderComparator61.isLocked();
        fixedOrderComparator61.setUnknownObjectBehavior(0);
        int i66 = fixedOrderComparator39.compare((java.lang.Object) obj_array56, (java.lang.Object) fixedOrderComparator61);
        boolean b67 = fixedOrderComparator18.add((java.lang.Object) fixedOrderComparator39);
        try {
            fixedOrderComparator18.setUnknownObjectBehavior(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i26 == 0);
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertNotNull(obj_array38);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertTrue(b45 == false);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertNotNull(obj_array56);
        org.junit.Assert.assertTrue(i62 == 2);
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertTrue(i66 == 0);
        org.junit.Assert.assertTrue(b67 == true);
    }

    @Test
    public void test360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test360");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj17 = null;
        boolean b18 = fixedOrderComparator7.add(obj17);
        java.lang.Object[] obj_array25 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array25);
        java.lang.Object[] obj_array33 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        boolean b37 = fixedOrderComparator26.add((java.lang.Object) 0);
        fixedOrderComparator26.setUnknownObjectBehavior((int) (short) 0);
        boolean b40 = fixedOrderComparator26.isLocked();
        boolean b41 = fixedOrderComparator26.isLocked();
        boolean b42 = fixedOrderComparator26.isLocked();
        java.lang.Object[] obj_array49 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array49);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array49);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array49);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array49);
        int i54 = fixedOrderComparator53.getUnknownObjectBehavior();
        int i55 = fixedOrderComparator53.getUnknownObjectBehavior();
        boolean b56 = fixedOrderComparator53.isLocked();
        int i57 = fixedOrderComparator53.getUnknownObjectBehavior();
        boolean b58 = fixedOrderComparator26.add((java.lang.Object) fixedOrderComparator53);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator59.setUnknownObjectBehavior(0);
        int i62 = fixedOrderComparator59.getUnknownObjectBehavior();
        fixedOrderComparator59.setUnknownObjectBehavior((int) (byte) 0);
        int i65 = fixedOrderComparator59.getUnknownObjectBehavior();
        int i66 = fixedOrderComparator59.getUnknownObjectBehavior();
        boolean b67 = fixedOrderComparator59.isLocked();
        try {
            int i68 = fixedOrderComparator7.compare((java.lang.Object) b58, (java.lang.Object) fixedOrderComparator59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertNotNull(obj_array25);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertNotNull(obj_array49);
        org.junit.Assert.assertTrue(i54 == 2);
        org.junit.Assert.assertTrue(i55 == 2);
        org.junit.Assert.assertTrue(b56 == false);
        org.junit.Assert.assertTrue(i57 == 2);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertTrue(i62 == 0);
        org.junit.Assert.assertTrue(i65 == 0);
        org.junit.Assert.assertTrue(i66 == 0);
        org.junit.Assert.assertTrue(b67 == false);
    }

    @Test
    public void test361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test361");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        boolean b21 = fixedOrderComparator7.isLocked();
        boolean b22 = fixedOrderComparator7.isLocked();
        boolean b23 = fixedOrderComparator7.isLocked();
        int i24 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i25 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array32 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        fixedOrderComparator33.setUnknownObjectBehavior(0);
        boolean b37 = fixedOrderComparator33.add((java.lang.Object) 1.0f);
        java.lang.Object obj38 = null;
        java.lang.Object[] obj_array45 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array45);
        fixedOrderComparator46.setUnknownObjectBehavior(0);
        boolean b50 = fixedOrderComparator46.add((java.lang.Object) 1.0f);
        int i51 = fixedOrderComparator46.getUnknownObjectBehavior();
        int i52 = fixedOrderComparator33.compare(obj38, (java.lang.Object) i51);
        java.lang.Object[] obj_array59 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array59);
        java.lang.Object[] obj_array62 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array62);
        boolean b64 = fixedOrderComparator61.add((java.lang.Object) obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array62);
        boolean b68 = fixedOrderComparator7.addAsEqual((java.lang.Object) i51, (java.lang.Object) obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array62);
        java.lang.Object obj70 = null;
        boolean b71 = fixedOrderComparator69.add(obj70);
        boolean b72 = fixedOrderComparator69.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertNotNull(obj_array45);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertTrue(i51 == 0);
        org.junit.Assert.assertTrue(i52 == (-1));
        org.junit.Assert.assertNotNull(obj_array59);
        org.junit.Assert.assertNotNull(obj_array62);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue(b68 == true);
        org.junit.Assert.assertTrue(b71 == true);
        org.junit.Assert.assertTrue(b72 == false);
    }

    @Test
    public void test362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test362");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        int i11 = fixedOrderComparator8.getUnknownObjectBehavior();
        int i12 = fixedOrderComparator8.getUnknownObjectBehavior();
        int i13 = fixedOrderComparator8.getUnknownObjectBehavior();
        try {
            fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 0);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(i13 == 0);
    }

    @Test
    public void test363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test363");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b13 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        fixedOrderComparator7.setUnknownObjectBehavior(1);
        boolean b16 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array23 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array23);
        fixedOrderComparator25.setUnknownObjectBehavior((int) (short) 0);
        int i28 = fixedOrderComparator25.getUnknownObjectBehavior();
        java.lang.Object obj30 = null;
        boolean b31 = fixedOrderComparator25.addAsEqual((java.lang.Object) 10.0f, obj30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator32.setUnknownObjectBehavior(0);
        int i35 = fixedOrderComparator32.getUnknownObjectBehavior();
        fixedOrderComparator32.setUnknownObjectBehavior((int) (byte) 0);
        boolean b38 = fixedOrderComparator32.isLocked();
        int i39 = fixedOrderComparator32.getUnknownObjectBehavior();
        java.lang.Object[] obj_array46 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array46);
        int i50 = fixedOrderComparator49.getUnknownObjectBehavior();
        int i51 = fixedOrderComparator25.compare((java.lang.Object) fixedOrderComparator32, (java.lang.Object) i50);
        boolean b52 = fixedOrderComparator7.add((java.lang.Object) i50);
        try {
            fixedOrderComparator7.setUnknownObjectBehavior((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertNotNull(obj_array23);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(i35 == 0);
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertTrue(i39 == 0);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertTrue(i50 == 2);
        org.junit.Assert.assertTrue(i51 == 0);
        org.junit.Assert.assertTrue(b52 == true);
    }

    @Test
    public void test364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test364");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        int i6 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i7 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b8 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array15 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array15);
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array15);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array15);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array15);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        fixedOrderComparator27.setUnknownObjectBehavior(0);
        boolean b31 = fixedOrderComparator27.add((java.lang.Object) 1.0f);
        java.lang.Object obj32 = null;
        java.lang.Object[] obj_array39 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array39);
        fixedOrderComparator40.setUnknownObjectBehavior(0);
        boolean b44 = fixedOrderComparator40.add((java.lang.Object) 1.0f);
        int i45 = fixedOrderComparator40.getUnknownObjectBehavior();
        int i46 = fixedOrderComparator27.compare(obj32, (java.lang.Object) i45);
        int i47 = fixedOrderComparator27.getUnknownObjectBehavior();
        boolean b48 = fixedOrderComparator27.isLocked();
        java.lang.Object[] obj_array55 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array55);
        fixedOrderComparator57.setUnknownObjectBehavior((int) (short) 0);
        int i60 = fixedOrderComparator57.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator61.setUnknownObjectBehavior(0);
        int i64 = fixedOrderComparator61.getUnknownObjectBehavior();
        int i65 = fixedOrderComparator27.compare((java.lang.Object) i60, (java.lang.Object) fixedOrderComparator61);
        java.lang.Object[] obj_array66 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array66);
        java.lang.Object[] obj_array74 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array74);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array74);
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array74);
        int i78 = fixedOrderComparator77.getUnknownObjectBehavior();
        boolean b79 = fixedOrderComparator77.isLocked();
        int i80 = fixedOrderComparator61.compare((java.lang.Object) fixedOrderComparator67, (java.lang.Object) fixedOrderComparator77);
        java.lang.Object[] obj_array87 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator88 = new collections.comparators.FixedOrderComparator(obj_array87);
        collections.comparators.FixedOrderComparator fixedOrderComparator89 = new collections.comparators.FixedOrderComparator(obj_array87);
        collections.comparators.FixedOrderComparator fixedOrderComparator90 = new collections.comparators.FixedOrderComparator(obj_array87);
        collections.comparators.FixedOrderComparator fixedOrderComparator91 = new collections.comparators.FixedOrderComparator(obj_array87);
        int i92 = fixedOrderComparator91.getUnknownObjectBehavior();
        int i93 = fixedOrderComparator91.getUnknownObjectBehavior();
        boolean b94 = fixedOrderComparator91.isLocked();
        boolean b95 = fixedOrderComparator77.add((java.lang.Object) fixedOrderComparator91);
        try {
            boolean b96 = fixedOrderComparator0.addAsEqual((java.lang.Object) fixedOrderComparator19, (java.lang.Object) fixedOrderComparator77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(i6 == 0);
        org.junit.Assert.assertTrue(i7 == 0);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(obj_array15);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertNotNull(obj_array39);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertTrue(i45 == 0);
        org.junit.Assert.assertTrue(i46 == (-1));
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(i60 == 0);
        org.junit.Assert.assertTrue(i64 == 0);
        org.junit.Assert.assertTrue(i65 == 1);
        org.junit.Assert.assertNotNull(obj_array66);
        org.junit.Assert.assertNotNull(obj_array74);
        org.junit.Assert.assertTrue(i78 == 2);
        org.junit.Assert.assertTrue(b79 == false);
        org.junit.Assert.assertTrue(i80 == 0);
        org.junit.Assert.assertNotNull(obj_array87);
        org.junit.Assert.assertTrue(i92 == 2);
        org.junit.Assert.assertTrue(i93 == 2);
        org.junit.Assert.assertTrue(b94 == false);
        org.junit.Assert.assertTrue(b95 == true);
    }

    @Test
    public void test365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test365");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator8.isLocked();
        boolean b10 = fixedOrderComparator8.isLocked();
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        boolean b20 = fixedOrderComparator18.add((java.lang.Object) (-1.0f));
        fixedOrderComparator18.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array29);
        int i33 = fixedOrderComparator32.getUnknownObjectBehavior();
        boolean b34 = fixedOrderComparator32.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        boolean b45 = fixedOrderComparator43.add((java.lang.Object) (-1.0f));
        int i46 = fixedOrderComparator43.getUnknownObjectBehavior();
        java.lang.Object[] obj_array53 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array53);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array53);
        fixedOrderComparator55.setUnknownObjectBehavior((int) (short) 0);
        int i58 = fixedOrderComparator55.getUnknownObjectBehavior();
        boolean b59 = fixedOrderComparator43.add((java.lang.Object) i58);
        boolean b60 = fixedOrderComparator35.add((java.lang.Object) fixedOrderComparator43);
        int i61 = fixedOrderComparator18.compare((java.lang.Object) b34, (java.lang.Object) fixedOrderComparator35);
        java.lang.Object[] obj_array69 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator(obj_array69);
        java.lang.Object[] obj_array74 = new java.lang.Object[] { fixedOrderComparator35, (byte) 10, obj_array69 };
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array69);
        boolean b78 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator77);
        try {
            fixedOrderComparator77.setUnknownObjectBehavior((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertTrue(b10 == false);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i33 == 2);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(i46 == 2);
        org.junit.Assert.assertNotNull(obj_array53);
        org.junit.Assert.assertTrue(i58 == 0);
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertTrue(i61 == 0);
        org.junit.Assert.assertNotNull(obj_array69);
        org.junit.Assert.assertNotNull(obj_array74);
        org.junit.Assert.assertTrue(b78 == true);
    }

    @Test
    public void test366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test366");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i14 = fixedOrderComparator13.getUnknownObjectBehavior();
        int i15 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 1);
        try {
            fixedOrderComparator13.setUnknownObjectBehavior(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i14 == 2);
        org.junit.Assert.assertTrue(i15 == 2);
    }

    @Test
    public void test367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test367");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i13 = fixedOrderComparator12.getUnknownObjectBehavior();
        java.lang.Object[] obj_array20 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator23.setUnknownObjectBehavior(0);
        int i26 = fixedOrderComparator23.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator22.addAsEqual((java.lang.Object) i26, (java.lang.Object) (short) 1);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        int i32 = fixedOrderComparator29.getUnknownObjectBehavior();
        fixedOrderComparator29.setUnknownObjectBehavior((int) (byte) 0);
        fixedOrderComparator29.setUnknownObjectBehavior(1);
        boolean b37 = fixedOrderComparator22.add((java.lang.Object) 1);
        boolean b38 = fixedOrderComparator12.add((java.lang.Object) 1);
        java.lang.Object[] obj_array45 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array45);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array45);
        fixedOrderComparator47.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator47.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array58 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator61.setUnknownObjectBehavior(0);
        int i64 = fixedOrderComparator61.getUnknownObjectBehavior();
        boolean b66 = fixedOrderComparator60.addAsEqual((java.lang.Object) i64, (java.lang.Object) (short) 1);
        int i67 = fixedOrderComparator60.getUnknownObjectBehavior();
        java.lang.Object[] obj_array74 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array74);
        boolean b76 = fixedOrderComparator75.isLocked();
        boolean b77 = fixedOrderComparator60.add((java.lang.Object) fixedOrderComparator75);
        boolean b78 = fixedOrderComparator47.add((java.lang.Object) fixedOrderComparator60);
        boolean b79 = fixedOrderComparator12.add((java.lang.Object) fixedOrderComparator47);
        try {
            fixedOrderComparator47.setUnknownObjectBehavior((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i13 == 2);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertTrue(i26 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertNotNull(obj_array45);
        org.junit.Assert.assertNotNull(obj_array58);
        org.junit.Assert.assertTrue(i64 == 0);
        org.junit.Assert.assertTrue(b66 == true);
        org.junit.Assert.assertTrue(i67 == 2);
        org.junit.Assert.assertNotNull(obj_array74);
        org.junit.Assert.assertTrue(b76 == false);
        org.junit.Assert.assertTrue(b77 == true);
        org.junit.Assert.assertTrue(b78 == true);
        org.junit.Assert.assertTrue(b79 == true);
    }

    @Test
    public void test368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test368");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object[] obj_array23 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array23);
        fixedOrderComparator24.setUnknownObjectBehavior(0);
        boolean b28 = fixedOrderComparator24.add((java.lang.Object) 1.0f);
        int i29 = fixedOrderComparator24.getUnknownObjectBehavior();
        boolean b30 = fixedOrderComparator24.isLocked();
        java.lang.Object[] obj_array31 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        java.lang.Object[] obj_array33 = new java.lang.Object[] { fixedOrderComparator32 };
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array33);
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        int i45 = fixedOrderComparator24.compare((java.lang.Object) fixedOrderComparator35, (java.lang.Object) obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array42);
        boolean b48 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator47);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator49.setUnknownObjectBehavior(0);
        boolean b52 = fixedOrderComparator49.isLocked();
        boolean b53 = fixedOrderComparator49.isLocked();
        java.lang.Object[] obj_array60 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array60);
        fixedOrderComparator61.setUnknownObjectBehavior(0);
        boolean b65 = fixedOrderComparator61.add((java.lang.Object) 1.0f);
        boolean b67 = fixedOrderComparator61.add((java.lang.Object) 1.0f);
        int i69 = fixedOrderComparator49.compare((java.lang.Object) fixedOrderComparator61, (java.lang.Object) 1.0d);
        fixedOrderComparator61.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array78 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator();
        int i84 = fixedOrderComparator83.getUnknownObjectBehavior();
        boolean b85 = fixedOrderComparator83.isLocked();
        fixedOrderComparator83.setUnknownObjectBehavior(0);
        int i88 = fixedOrderComparator61.compare((java.lang.Object) obj_array78, (java.lang.Object) fixedOrderComparator83);
        int i89 = fixedOrderComparator61.getUnknownObjectBehavior();
        boolean b90 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator61);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertNotNull(obj_array23);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(i29 == 0);
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(i45 == 0);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertTrue(b53 == false);
        org.junit.Assert.assertNotNull(obj_array60);
        org.junit.Assert.assertTrue(b65 == true);
        org.junit.Assert.assertTrue(b67 == false);
        org.junit.Assert.assertTrue(i69 == 0);
        org.junit.Assert.assertNotNull(obj_array78);
        org.junit.Assert.assertTrue(i84 == 2);
        org.junit.Assert.assertTrue(b85 == false);
        org.junit.Assert.assertTrue(i88 == 0);
        org.junit.Assert.assertTrue(i89 == 0);
        org.junit.Assert.assertTrue(b90 == true);
    }

    @Test
    public void test369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test369");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        int i10 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        fixedOrderComparator19.setUnknownObjectBehavior((int) (short) 0);
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        boolean b23 = fixedOrderComparator7.add((java.lang.Object) i22);
        int i24 = fixedOrderComparator7.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator25.setUnknownObjectBehavior(0);
        int i28 = fixedOrderComparator25.getUnknownObjectBehavior();
        fixedOrderComparator25.setUnknownObjectBehavior((int) (byte) 0);
        boolean b32 = fixedOrderComparator25.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array39 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array39);
        boolean b42 = fixedOrderComparator40.add((java.lang.Object) (-1.0f));
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator();
        int i44 = fixedOrderComparator43.getUnknownObjectBehavior();
        boolean b45 = fixedOrderComparator43.isLocked();
        fixedOrderComparator43.setUnknownObjectBehavior(0);
        int i48 = fixedOrderComparator25.compare((java.lang.Object) fixedOrderComparator40, (java.lang.Object) 0);
        java.lang.Object[] obj_array55 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        fixedOrderComparator56.setUnknownObjectBehavior(0);
        boolean b59 = fixedOrderComparator40.add((java.lang.Object) fixedOrderComparator56);
        boolean b60 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator40);
        int i61 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array68 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array68);
        boolean b71 = fixedOrderComparator70.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator72.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array81 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array81);
        boolean b84 = fixedOrderComparator82.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator85.setUnknownObjectBehavior(0);
        int i88 = fixedOrderComparator85.getUnknownObjectBehavior();
        fixedOrderComparator85.setUnknownObjectBehavior((int) (byte) 0);
        boolean b91 = fixedOrderComparator82.add((java.lang.Object) fixedOrderComparator85);
        java.lang.Object obj93 = null;
        int i94 = fixedOrderComparator85.compare((java.lang.Object) 1.0d, obj93);
        boolean b95 = fixedOrderComparator85.isLocked();
        boolean b96 = fixedOrderComparator72.add((java.lang.Object) fixedOrderComparator85);
        try {
            int i97 = fixedOrderComparator7.compare((java.lang.Object) fixedOrderComparator70, (java.lang.Object) fixedOrderComparator85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i10 == 2);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue(i24 == 2);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertNotNull(obj_array39);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertTrue(i44 == 2);
        org.junit.Assert.assertTrue(b45 == false);
        org.junit.Assert.assertTrue(i48 == 0);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertTrue(i61 == 2);
        org.junit.Assert.assertNotNull(obj_array68);
        org.junit.Assert.assertTrue(b71 == false);
        org.junit.Assert.assertNotNull(obj_array81);
        org.junit.Assert.assertTrue(b84 == true);
        org.junit.Assert.assertTrue(i88 == 0);
        org.junit.Assert.assertTrue(b91 == true);
        org.junit.Assert.assertTrue(i94 == 0);
        org.junit.Assert.assertTrue(b95 == true);
        org.junit.Assert.assertTrue(b96 == true);
    }

    @Test
    public void test370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test370");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        boolean b21 = fixedOrderComparator7.isLocked();
        boolean b22 = fixedOrderComparator7.isLocked();
        boolean b23 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array30 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array30);
        int i35 = fixedOrderComparator34.getUnknownObjectBehavior();
        int i36 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b37 = fixedOrderComparator34.isLocked();
        int i38 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b39 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator34);
        boolean b40 = fixedOrderComparator34.isLocked();
        fixedOrderComparator34.setUnknownObjectBehavior((int) (byte) 0);
        try {
            fixedOrderComparator34.setUnknownObjectBehavior((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(i36 == 2);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(i38 == 2);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b40 == false);
    }

    @Test
    public void test371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test371");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array18 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        fixedOrderComparator19.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array28 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator31.setUnknownObjectBehavior(0);
        int i34 = fixedOrderComparator31.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator30.addAsEqual((java.lang.Object) i34, (java.lang.Object) (short) 1);
        int i38 = fixedOrderComparator19.compare((java.lang.Object) fixedOrderComparator30, (java.lang.Object) '#');
        java.lang.Object[] obj_array45 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array45);
        boolean b48 = fixedOrderComparator46.add((java.lang.Object) (-1.0f));
        fixedOrderComparator46.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array57 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array57);
        int i61 = fixedOrderComparator60.getUnknownObjectBehavior();
        boolean b62 = fixedOrderComparator60.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array70 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array70);
        boolean b73 = fixedOrderComparator71.add((java.lang.Object) (-1.0f));
        int i74 = fixedOrderComparator71.getUnknownObjectBehavior();
        java.lang.Object[] obj_array81 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array81);
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator(obj_array81);
        fixedOrderComparator83.setUnknownObjectBehavior((int) (short) 0);
        int i86 = fixedOrderComparator83.getUnknownObjectBehavior();
        boolean b87 = fixedOrderComparator71.add((java.lang.Object) i86);
        boolean b88 = fixedOrderComparator63.add((java.lang.Object) fixedOrderComparator71);
        int i89 = fixedOrderComparator46.compare((java.lang.Object) b62, (java.lang.Object) fixedOrderComparator63);
        int i90 = fixedOrderComparator7.compare((java.lang.Object) '#', (java.lang.Object) i89);
        try {
            fixedOrderComparator7.setUnknownObjectBehavior(100);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(i34 == 0);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(i38 == 0);
        org.junit.Assert.assertNotNull(obj_array45);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertNotNull(obj_array57);
        org.junit.Assert.assertTrue(i61 == 2);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertNotNull(obj_array70);
        org.junit.Assert.assertTrue(b73 == true);
        org.junit.Assert.assertTrue(i74 == 2);
        org.junit.Assert.assertNotNull(obj_array81);
        org.junit.Assert.assertTrue(i86 == 0);
        org.junit.Assert.assertTrue(b87 == false);
        org.junit.Assert.assertTrue(b88 == true);
        org.junit.Assert.assertTrue(i89 == 0);
        org.junit.Assert.assertTrue(i90 == (-1));
    }

    @Test
    public void test372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test372");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        boolean b3 = fixedOrderComparator0.isLocked();
        java.lang.Object obj4 = null;
        java.lang.Object[] obj_array5 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator6 = new collections.comparators.FixedOrderComparator(obj_array5);
        java.lang.Object[] obj_array7 = new java.lang.Object[] { fixedOrderComparator6 };
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array7);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array7);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array7);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array7);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array7);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array7);
        try {
            boolean b14 = fixedOrderComparator0.addAsEqual(obj4, (java.lang.Object) fixedOrderComparator13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertNotNull(obj_array5);
        org.junit.Assert.assertNotNull(obj_array7);
    }

    @Test
    public void test373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test373");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        int i21 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b22 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        java.lang.Object[] obj_array37 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array37);
        fixedOrderComparator38.setUnknownObjectBehavior(0);
        boolean b41 = fixedOrderComparator30.add((java.lang.Object) 0);
        fixedOrderComparator30.setUnknownObjectBehavior((int) (short) 0);
        boolean b44 = fixedOrderComparator30.isLocked();
        boolean b45 = fixedOrderComparator30.isLocked();
        boolean b46 = fixedOrderComparator30.isLocked();
        java.lang.Object[] obj_array53 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array53);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array53);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array53);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array53);
        int i58 = fixedOrderComparator57.getUnknownObjectBehavior();
        int i59 = fixedOrderComparator57.getUnknownObjectBehavior();
        boolean b60 = fixedOrderComparator57.isLocked();
        int i61 = fixedOrderComparator57.getUnknownObjectBehavior();
        boolean b62 = fixedOrderComparator30.add((java.lang.Object) fixedOrderComparator57);
        boolean b64 = fixedOrderComparator57.add((java.lang.Object) (byte) 10);
        java.lang.Object obj65 = null;
        boolean b66 = fixedOrderComparator57.add(obj65);
        try {
            boolean b67 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator57);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertNotNull(obj_array37);
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertTrue(b45 == false);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertNotNull(obj_array53);
        org.junit.Assert.assertTrue(i58 == 2);
        org.junit.Assert.assertTrue(i59 == 2);
        org.junit.Assert.assertTrue(b60 == false);
        org.junit.Assert.assertTrue(i61 == 2);
        org.junit.Assert.assertTrue(b62 == true);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue(b66 == true);
    }

    @Test
    public void test374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test374");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b28 = fixedOrderComparator14.add((java.lang.Object) obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array21);
        java.lang.Object obj30 = null;
        boolean b31 = fixedOrderComparator29.add(obj30);
        fixedOrderComparator29.setUnknownObjectBehavior((int) (byte) 1);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(b31 == true);
    }

    @Test
    public void test375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test375");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b6 = fixedOrderComparator0.add((java.lang.Object) 10L);
        boolean b7 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        boolean b17 = fixedOrderComparator15.add((java.lang.Object) (-1.0f));
        int i18 = fixedOrderComparator15.getUnknownObjectBehavior();
        java.lang.Object[] obj_array25 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array25);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array25);
        fixedOrderComparator27.setUnknownObjectBehavior((int) (short) 0);
        int i30 = fixedOrderComparator27.getUnknownObjectBehavior();
        boolean b31 = fixedOrderComparator15.add((java.lang.Object) i30);
        int i32 = fixedOrderComparator15.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator33.setUnknownObjectBehavior(0);
        int i36 = fixedOrderComparator33.getUnknownObjectBehavior();
        fixedOrderComparator33.setUnknownObjectBehavior((int) (byte) 0);
        boolean b40 = fixedOrderComparator33.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array47 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array47);
        boolean b50 = fixedOrderComparator48.add((java.lang.Object) (-1.0f));
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator();
        int i52 = fixedOrderComparator51.getUnknownObjectBehavior();
        boolean b53 = fixedOrderComparator51.isLocked();
        fixedOrderComparator51.setUnknownObjectBehavior(0);
        int i56 = fixedOrderComparator33.compare((java.lang.Object) fixedOrderComparator48, (java.lang.Object) 0);
        java.lang.Object[] obj_array63 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array63);
        fixedOrderComparator64.setUnknownObjectBehavior(0);
        boolean b67 = fixedOrderComparator48.add((java.lang.Object) fixedOrderComparator64);
        boolean b68 = fixedOrderComparator15.add((java.lang.Object) fixedOrderComparator48);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator();
        int i70 = fixedOrderComparator69.getUnknownObjectBehavior();
        boolean b71 = fixedOrderComparator69.isLocked();
        fixedOrderComparator69.setUnknownObjectBehavior(0);
        boolean b75 = fixedOrderComparator69.add((java.lang.Object) 10L);
        try {
            boolean b76 = fixedOrderComparator0.addAsEqual((java.lang.Object) fixedOrderComparator15, (java.lang.Object) fixedOrderComparator69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(i18 == 2);
        org.junit.Assert.assertNotNull(obj_array25);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertTrue(i32 == 2);
        org.junit.Assert.assertTrue(i36 == 0);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertNotNull(obj_array47);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertTrue(i52 == 2);
        org.junit.Assert.assertTrue(b53 == false);
        org.junit.Assert.assertTrue(i56 == 0);
        org.junit.Assert.assertNotNull(obj_array63);
        org.junit.Assert.assertTrue(b67 == true);
        org.junit.Assert.assertTrue(b68 == true);
        org.junit.Assert.assertTrue(i70 == 2);
        org.junit.Assert.assertTrue(b71 == false);
        org.junit.Assert.assertTrue(b75 == true);
    }

    @Test
    public void test376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test376");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b12 = fixedOrderComparator10.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        boolean b19 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object obj21 = null;
        int i22 = fixedOrderComparator13.compare((java.lang.Object) 1.0d, obj21);
        boolean b23 = fixedOrderComparator13.isLocked();
        boolean b24 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator13);
        boolean b25 = fixedOrderComparator13.isLocked();
        boolean b26 = fixedOrderComparator13.isLocked();
        int i27 = fixedOrderComparator13.getUnknownObjectBehavior();
        int i30 = fixedOrderComparator13.compare((java.lang.Object) ' ', (java.lang.Object) 10L);
        try {
            fixedOrderComparator13.setUnknownObjectBehavior(100);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(i30 == 0);
    }

    @Test
    public void test377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test377");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        int i11 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object obj13 = null;
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) 10.0f, obj13);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        fixedOrderComparator22.setUnknownObjectBehavior(0);
        boolean b26 = fixedOrderComparator22.add((java.lang.Object) 1.0f);
        java.lang.Object obj27 = null;
        java.lang.Object[] obj_array34 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array34);
        fixedOrderComparator35.setUnknownObjectBehavior(0);
        boolean b39 = fixedOrderComparator35.add((java.lang.Object) 1.0f);
        int i40 = fixedOrderComparator35.getUnknownObjectBehavior();
        int i41 = fixedOrderComparator22.compare(obj27, (java.lang.Object) i40);
        int i42 = fixedOrderComparator22.getUnknownObjectBehavior();
        boolean b43 = fixedOrderComparator22.isLocked();
        java.lang.Object[] obj_array50 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array50);
        fixedOrderComparator52.setUnknownObjectBehavior((int) (short) 0);
        int i55 = fixedOrderComparator52.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator56.setUnknownObjectBehavior(0);
        int i59 = fixedOrderComparator56.getUnknownObjectBehavior();
        int i60 = fixedOrderComparator22.compare((java.lang.Object) i55, (java.lang.Object) fixedOrderComparator56);
        int i61 = fixedOrderComparator22.getUnknownObjectBehavior();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Object obj63 = null;
        int i64 = fixedOrderComparator22.compare(obj62, obj63);
        java.lang.Object[] obj_array71 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array71);
        java.lang.Object[] obj_array79 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array79);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array79);
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array79);
        int i83 = fixedOrderComparator22.compare((java.lang.Object) obj_array71, (java.lang.Object) fixedOrderComparator82);
        boolean b84 = fixedOrderComparator8.add((java.lang.Object) i83);
        try {
            fixedOrderComparator8.setUnknownObjectBehavior((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertNotNull(obj_array34);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i41 == (-1));
        org.junit.Assert.assertTrue(i42 == 0);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertNotNull(obj_array50);
        org.junit.Assert.assertTrue(i55 == 0);
        org.junit.Assert.assertTrue(i59 == 0);
        org.junit.Assert.assertTrue(i60 == 1);
        org.junit.Assert.assertTrue(i61 == 0);
        org.junit.Assert.assertTrue(i64 == 0);
        org.junit.Assert.assertNotNull(obj_array71);
        org.junit.Assert.assertNotNull(obj_array79);
        org.junit.Assert.assertTrue(i83 == 0);
        org.junit.Assert.assertTrue(b84 == false);
    }

    @Test
    public void test378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test378");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b28 = fixedOrderComparator14.add((java.lang.Object) obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator();
        int i30 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b31 = fixedOrderComparator29.isLocked();
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        boolean b45 = fixedOrderComparator41.add((java.lang.Object) 1.0f);
        java.lang.Object obj46 = null;
        java.lang.Object[] obj_array53 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array53);
        fixedOrderComparator54.setUnknownObjectBehavior(0);
        boolean b58 = fixedOrderComparator54.add((java.lang.Object) 1.0f);
        int i59 = fixedOrderComparator54.getUnknownObjectBehavior();
        int i60 = fixedOrderComparator41.compare(obj46, (java.lang.Object) i59);
        int i61 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i62 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i64 = fixedOrderComparator29.compare((java.lang.Object) fixedOrderComparator41, (java.lang.Object) 10.0d);
        java.lang.Object[] obj_array71 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array71);
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator(obj_array71);
        fixedOrderComparator73.setUnknownObjectBehavior((int) (short) 0);
        boolean b77 = fixedOrderComparator73.add((java.lang.Object) ' ');
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator();
        int i79 = fixedOrderComparator78.getUnknownObjectBehavior();
        java.lang.Object[] obj_array86 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator87 = new collections.comparators.FixedOrderComparator(obj_array86);
        collections.comparators.FixedOrderComparator fixedOrderComparator88 = new collections.comparators.FixedOrderComparator(obj_array86);
        collections.comparators.FixedOrderComparator fixedOrderComparator89 = new collections.comparators.FixedOrderComparator(obj_array86);
        collections.comparators.FixedOrderComparator fixedOrderComparator90 = new collections.comparators.FixedOrderComparator(obj_array86);
        boolean b91 = fixedOrderComparator78.add((java.lang.Object) fixedOrderComparator90);
        int i92 = fixedOrderComparator29.compare((java.lang.Object) fixedOrderComparator73, (java.lang.Object) fixedOrderComparator78);
        boolean b93 = fixedOrderComparator14.add((java.lang.Object) i92);
        boolean b94 = fixedOrderComparator14.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(i30 == 2);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertNotNull(obj_array53);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertTrue(i59 == 0);
        org.junit.Assert.assertTrue(i60 == (-1));
        org.junit.Assert.assertTrue(i61 == 0);
        org.junit.Assert.assertTrue(i62 == 0);
        org.junit.Assert.assertTrue(i64 == 0);
        org.junit.Assert.assertNotNull(obj_array71);
        org.junit.Assert.assertTrue(b77 == true);
        org.junit.Assert.assertTrue(i79 == 2);
        org.junit.Assert.assertNotNull(obj_array86);
        org.junit.Assert.assertTrue(b91 == true);
        org.junit.Assert.assertTrue(i92 == 0);
        org.junit.Assert.assertTrue(b93 == false);
        org.junit.Assert.assertTrue(b94 == false);
    }

    @Test
    public void test379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test379");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator23.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array32 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        boolean b35 = fixedOrderComparator33.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator36.setUnknownObjectBehavior(0);
        int i39 = fixedOrderComparator36.getUnknownObjectBehavior();
        fixedOrderComparator36.setUnknownObjectBehavior((int) (byte) 0);
        boolean b42 = fixedOrderComparator33.add((java.lang.Object) fixedOrderComparator36);
        java.lang.Object obj44 = null;
        int i45 = fixedOrderComparator36.compare((java.lang.Object) 1.0d, obj44);
        boolean b46 = fixedOrderComparator36.isLocked();
        boolean b47 = fixedOrderComparator23.add((java.lang.Object) fixedOrderComparator36);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        fixedOrderComparator55.setUnknownObjectBehavior(0);
        boolean b59 = fixedOrderComparator55.add((java.lang.Object) 1.0f);
        boolean b61 = fixedOrderComparator55.add((java.lang.Object) 1.0f);
        fixedOrderComparator55.setUnknownObjectBehavior(1);
        int i64 = fixedOrderComparator12.compare((java.lang.Object) fixedOrderComparator23, (java.lang.Object) 1);
        try {
            fixedOrderComparator12.setUnknownObjectBehavior((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertTrue(i39 == 0);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertTrue(i45 == 0);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertTrue(i64 == 0);
    }

    @Test
    public void test380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test380");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i11 = fixedOrderComparator10.getUnknownObjectBehavior();
        int i12 = fixedOrderComparator10.getUnknownObjectBehavior();
        java.lang.Object obj13 = null;
        java.lang.Object[] obj_array20 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        java.lang.Object[] obj_array28 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        boolean b32 = fixedOrderComparator21.add((java.lang.Object) 0);
        fixedOrderComparator21.setUnknownObjectBehavior((int) (short) 0);
        boolean b35 = fixedOrderComparator21.isLocked();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        fixedOrderComparator44.setUnknownObjectBehavior((int) (short) 0);
        int i47 = fixedOrderComparator44.getUnknownObjectBehavior();
        java.lang.Object obj49 = null;
        boolean b50 = fixedOrderComparator44.addAsEqual((java.lang.Object) 10.0f, obj49);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator51.setUnknownObjectBehavior(0);
        int i54 = fixedOrderComparator51.getUnknownObjectBehavior();
        fixedOrderComparator51.setUnknownObjectBehavior((int) (byte) 0);
        boolean b57 = fixedOrderComparator51.isLocked();
        int i58 = fixedOrderComparator51.getUnknownObjectBehavior();
        java.lang.Object[] obj_array65 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array65);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array65);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array65);
        int i69 = fixedOrderComparator68.getUnknownObjectBehavior();
        int i70 = fixedOrderComparator44.compare((java.lang.Object) fixedOrderComparator51, (java.lang.Object) i69);
        boolean b71 = fixedOrderComparator21.add((java.lang.Object) i70);
        try {
            int i72 = fixedOrderComparator10.compare(obj13, (java.lang.Object) b71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 2);
        org.junit.Assert.assertTrue(i12 == 2);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertTrue(b35 == false);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertTrue(i54 == 0);
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertTrue(i58 == 0);
        org.junit.Assert.assertNotNull(obj_array65);
        org.junit.Assert.assertTrue(i69 == 2);
        org.junit.Assert.assertTrue(i70 == 0);
        org.junit.Assert.assertTrue(b71 == false);
    }

    @Test
    public void test381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test381");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        boolean b21 = fixedOrderComparator7.isLocked();
        boolean b22 = fixedOrderComparator7.isLocked();
        boolean b23 = fixedOrderComparator7.isLocked();
        int i24 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i25 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array32 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array32);
        java.lang.Object[] obj_array43 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array43);
        fixedOrderComparator44.setUnknownObjectBehavior(0);
        boolean b48 = fixedOrderComparator44.add((java.lang.Object) 1.0f);
        boolean b50 = fixedOrderComparator44.add((java.lang.Object) 1.0f);
        boolean b51 = fixedOrderComparator44.isLocked();
        boolean b52 = fixedOrderComparator36.add((java.lang.Object) fixedOrderComparator44);
        boolean b53 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator36);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertNotNull(obj_array43);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertTrue(b50 == false);
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertTrue(b52 == true);
        org.junit.Assert.assertTrue(b53 == true);
    }

    @Test
    public void test382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test382");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b6 = fixedOrderComparator0.isLocked();
        int i7 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i8 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i9 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b10 = fixedOrderComparator0.isLocked();
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b6 == false);
        org.junit.Assert.assertTrue(i7 == 0);
        org.junit.Assert.assertTrue(i8 == 0);
        org.junit.Assert.assertTrue(i9 == 0);
        org.junit.Assert.assertTrue(b10 == false);
    }

    @Test
    public void test383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test383");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array16 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator19.setUnknownObjectBehavior(0);
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        boolean b24 = fixedOrderComparator18.addAsEqual((java.lang.Object) i22, (java.lang.Object) (short) 1);
        int i26 = fixedOrderComparator7.compare((java.lang.Object) fixedOrderComparator18, (java.lang.Object) '#');
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator27.setUnknownObjectBehavior(0);
        boolean b30 = fixedOrderComparator27.isLocked();
        boolean b31 = fixedOrderComparator27.isLocked();
        java.lang.Object[] obj_array38 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array38);
        fixedOrderComparator39.setUnknownObjectBehavior(0);
        boolean b43 = fixedOrderComparator39.add((java.lang.Object) 1.0f);
        boolean b45 = fixedOrderComparator39.add((java.lang.Object) 1.0f);
        int i47 = fixedOrderComparator27.compare((java.lang.Object) fixedOrderComparator39, (java.lang.Object) 1.0d);
        fixedOrderComparator39.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array56 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator();
        int i62 = fixedOrderComparator61.getUnknownObjectBehavior();
        boolean b63 = fixedOrderComparator61.isLocked();
        fixedOrderComparator61.setUnknownObjectBehavior(0);
        int i66 = fixedOrderComparator39.compare((java.lang.Object) obj_array56, (java.lang.Object) fixedOrderComparator61);
        boolean b67 = fixedOrderComparator18.add((java.lang.Object) fixedOrderComparator39);
        java.lang.Object[] obj_array74 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array74);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array74);
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array74);
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator(obj_array74);
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array74);
        int i80 = fixedOrderComparator79.getUnknownObjectBehavior();
        fixedOrderComparator79.setUnknownObjectBehavior((int) (short) 0);
        try {
            boolean b83 = fixedOrderComparator39.add((java.lang.Object) fixedOrderComparator79);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i26 == 0);
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertNotNull(obj_array38);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertTrue(b45 == false);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertNotNull(obj_array56);
        org.junit.Assert.assertTrue(i62 == 2);
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertTrue(i66 == 0);
        org.junit.Assert.assertTrue(b67 == true);
        org.junit.Assert.assertNotNull(obj_array74);
        org.junit.Assert.assertTrue(i80 == 2);
    }

    @Test
    public void test384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test384");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        int i21 = fixedOrderComparator0.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator22.setUnknownObjectBehavior(0);
        boolean b25 = fixedOrderComparator22.isLocked();
        java.lang.Object[] obj_array32 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        fixedOrderComparator33.setUnknownObjectBehavior(0);
        boolean b37 = fixedOrderComparator33.add((java.lang.Object) 1.0f);
        boolean b39 = fixedOrderComparator33.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator();
        boolean b41 = fixedOrderComparator40.isLocked();
        boolean b43 = fixedOrderComparator40.add((java.lang.Object) 10.0d);
        int i44 = fixedOrderComparator22.compare((java.lang.Object) b39, (java.lang.Object) fixedOrderComparator40);
        boolean b45 = fixedOrderComparator22.isLocked();
        java.lang.Object[] obj_array52 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator();
        int i56 = fixedOrderComparator55.getUnknownObjectBehavior();
        java.lang.Object[] obj_array63 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array63);
        boolean b68 = fixedOrderComparator55.add((java.lang.Object) fixedOrderComparator67);
        fixedOrderComparator55.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array77 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator(obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array77);
        int i82 = fixedOrderComparator81.getUnknownObjectBehavior();
        int i83 = fixedOrderComparator81.getUnknownObjectBehavior();
        boolean b84 = fixedOrderComparator81.isLocked();
        int i85 = fixedOrderComparator81.getUnknownObjectBehavior();
        int i87 = fixedOrderComparator55.compare((java.lang.Object) fixedOrderComparator81, (java.lang.Object) 1L);
        int i88 = fixedOrderComparator22.compare((java.lang.Object) obj_array52, (java.lang.Object) i87);
        collections.comparators.FixedOrderComparator fixedOrderComparator89 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator90 = new collections.comparators.FixedOrderComparator(obj_array52);
        int i91 = fixedOrderComparator90.getUnknownObjectBehavior();
        try {
            boolean b92 = fixedOrderComparator0.add((java.lang.Object) i91);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertNotNull(obj_array52);
        org.junit.Assert.assertTrue(i56 == 2);
        org.junit.Assert.assertNotNull(obj_array63);
        org.junit.Assert.assertTrue(b68 == true);
        org.junit.Assert.assertNotNull(obj_array77);
        org.junit.Assert.assertTrue(i82 == 2);
        org.junit.Assert.assertTrue(i83 == 2);
        org.junit.Assert.assertTrue(b84 == false);
        org.junit.Assert.assertTrue(i85 == 2);
        org.junit.Assert.assertTrue(i87 == 0);
        org.junit.Assert.assertTrue(i88 == 0);
        org.junit.Assert.assertTrue(i91 == 2);
    }

    @Test
    public void test385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test385");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator8.setUnknownObjectBehavior(0);
        boolean b13 = fixedOrderComparator8.isLocked();
        fixedOrderComparator8.setUnknownObjectBehavior(0);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b13 == false);
    }

    @Test
    public void test386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test386");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        int i46 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Object obj48 = null;
        int i49 = fixedOrderComparator7.compare(obj47, obj48);
        int i50 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b51 = fixedOrderComparator7.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertTrue(i50 == 0);
        org.junit.Assert.assertTrue(b51 == true);
    }

    @Test
    public void test387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test387");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b28 = fixedOrderComparator14.add((java.lang.Object) obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array21);
        java.lang.Object[] obj_array36 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        boolean b39 = fixedOrderComparator37.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator40.setUnknownObjectBehavior(0);
        int i43 = fixedOrderComparator40.getUnknownObjectBehavior();
        fixedOrderComparator40.setUnknownObjectBehavior((int) (byte) 0);
        boolean b46 = fixedOrderComparator37.add((java.lang.Object) fixedOrderComparator40);
        java.lang.Object obj47 = null;
        boolean b48 = fixedOrderComparator37.add(obj47);
        java.lang.Object[] obj_array55 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        fixedOrderComparator56.setUnknownObjectBehavior(0);
        boolean b60 = fixedOrderComparator56.add((java.lang.Object) 1.0f);
        boolean b62 = fixedOrderComparator56.add((java.lang.Object) 1.0f);
        boolean b63 = fixedOrderComparator56.isLocked();
        boolean b64 = fixedOrderComparator56.isLocked();
        boolean b65 = fixedOrderComparator37.add((java.lang.Object) fixedOrderComparator56);
        int i66 = fixedOrderComparator37.getUnknownObjectBehavior();
        java.lang.Object[] obj_array73 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator74 = new collections.comparators.FixedOrderComparator(obj_array73);
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array73);
        fixedOrderComparator75.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator75.setUnknownObjectBehavior(0);
        java.lang.Object obj80 = null;
        int i81 = fixedOrderComparator37.compare((java.lang.Object) 0, obj80);
        boolean b82 = fixedOrderComparator29.add((java.lang.Object) i81);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(i43 == 0);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertTrue(b64 == false);
        org.junit.Assert.assertTrue(b65 == true);
        org.junit.Assert.assertTrue(i66 == 2);
        org.junit.Assert.assertNotNull(obj_array73);
        org.junit.Assert.assertTrue(i81 == (-1));
        org.junit.Assert.assertTrue(b82 == true);
    }

    @Test
    public void test388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test388");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        int i10 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        fixedOrderComparator19.setUnknownObjectBehavior((int) (short) 0);
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        boolean b23 = fixedOrderComparator7.add((java.lang.Object) i22);
        int i24 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i25 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b26 = fixedOrderComparator7.isLocked();
        boolean b27 = fixedOrderComparator7.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i10 == 2);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue(i24 == 2);
        org.junit.Assert.assertTrue(i25 == 2);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertTrue(b27 == false);
    }

    @Test
    public void test389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test389");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b6 = fixedOrderComparator0.isLocked();
        int i7 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i8 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i9 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array16 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        boolean b19 = fixedOrderComparator17.add((java.lang.Object) (-1.0f));
        int i20 = fixedOrderComparator17.getUnknownObjectBehavior();
        java.lang.Object[] obj_array27 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array27);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array27);
        fixedOrderComparator29.setUnknownObjectBehavior((int) (short) 0);
        int i32 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b33 = fixedOrderComparator17.add((java.lang.Object) i32);
        int i34 = fixedOrderComparator17.getUnknownObjectBehavior();
        int i35 = fixedOrderComparator17.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator17.isLocked();
        java.lang.Object[] obj_array43 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array43);
        boolean b46 = fixedOrderComparator45.isLocked();
        int i47 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator17, (java.lang.Object) fixedOrderComparator45);
        int i48 = fixedOrderComparator45.getUnknownObjectBehavior();
        try {
            fixedOrderComparator45.setUnknownObjectBehavior((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b6 == false);
        org.junit.Assert.assertTrue(i7 == 0);
        org.junit.Assert.assertTrue(i8 == 0);
        org.junit.Assert.assertTrue(i9 == 0);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i20 == 2);
        org.junit.Assert.assertNotNull(obj_array27);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertTrue(i34 == 2);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertNotNull(obj_array43);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(i48 == 2);
    }

    @Test
    public void test390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test390");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array9 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b11 = fixedOrderComparator8.add((java.lang.Object) obj_array9);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array9);
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        java.lang.Object obj25 = null;
        java.lang.Object[] obj_array32 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        fixedOrderComparator33.setUnknownObjectBehavior(0);
        boolean b37 = fixedOrderComparator33.add((java.lang.Object) 1.0f);
        int i38 = fixedOrderComparator33.getUnknownObjectBehavior();
        int i39 = fixedOrderComparator20.compare(obj25, (java.lang.Object) i38);
        int i40 = fixedOrderComparator20.getUnknownObjectBehavior();
        boolean b41 = fixedOrderComparator20.isLocked();
        java.lang.Object[] obj_array48 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array48);
        fixedOrderComparator50.setUnknownObjectBehavior((int) (short) 0);
        int i53 = fixedOrderComparator50.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator54.setUnknownObjectBehavior(0);
        int i57 = fixedOrderComparator54.getUnknownObjectBehavior();
        int i58 = fixedOrderComparator20.compare((java.lang.Object) i53, (java.lang.Object) fixedOrderComparator54);
        boolean b59 = fixedOrderComparator12.add((java.lang.Object) i58);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertTrue(i38 == 0);
        org.junit.Assert.assertTrue(i39 == (-1));
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertNotNull(obj_array48);
        org.junit.Assert.assertTrue(i53 == 0);
        org.junit.Assert.assertTrue(i57 == 0);
        org.junit.Assert.assertTrue(i58 == 1);
        org.junit.Assert.assertTrue(b59 == true);
    }

    @Test
    public void test391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test391");
        java.lang.Object[] obj_array0 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator1 = new collections.comparators.FixedOrderComparator(obj_array0);
        java.lang.Object[] obj_array2 = new java.lang.Object[] { fixedOrderComparator1 };
        collections.comparators.FixedOrderComparator fixedOrderComparator3 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator4 = new collections.comparators.FixedOrderComparator(obj_array2);
        boolean b5 = fixedOrderComparator4.isLocked();
        int i6 = fixedOrderComparator4.getUnknownObjectBehavior();
        java.lang.Object[] obj_array13 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array13);
        fixedOrderComparator14.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator14.add((java.lang.Object) 1.0f);
        boolean b20 = fixedOrderComparator14.add((java.lang.Object) 1.0f);
        boolean b21 = fixedOrderComparator14.isLocked();
        int i22 = fixedOrderComparator14.getUnknownObjectBehavior();
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array29);
        try {
            int i36 = fixedOrderComparator4.compare((java.lang.Object) i22, (java.lang.Object) fixedOrderComparator35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array0);
        org.junit.Assert.assertNotNull(obj_array2);
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue(i6 == 2);
        org.junit.Assert.assertNotNull(obj_array13);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertNotNull(obj_array29);
    }

    @Test
    public void test392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test392");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator8.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array19 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator22.setUnknownObjectBehavior(0);
        int i25 = fixedOrderComparator22.getUnknownObjectBehavior();
        boolean b27 = fixedOrderComparator21.addAsEqual((java.lang.Object) i25, (java.lang.Object) (short) 1);
        int i28 = fixedOrderComparator21.getUnknownObjectBehavior();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        boolean b37 = fixedOrderComparator36.isLocked();
        boolean b38 = fixedOrderComparator21.add((java.lang.Object) fixedOrderComparator36);
        boolean b39 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator21);
        int i40 = fixedOrderComparator21.getUnknownObjectBehavior();
        java.lang.Object[] obj_array47 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array47);
        int i52 = fixedOrderComparator51.getUnknownObjectBehavior();
        int i53 = fixedOrderComparator51.getUnknownObjectBehavior();
        int i54 = fixedOrderComparator51.getUnknownObjectBehavior();
        boolean b55 = fixedOrderComparator51.isLocked();
        java.lang.Object[] obj_array62 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array62);
        fixedOrderComparator63.setUnknownObjectBehavior(0);
        boolean b67 = fixedOrderComparator63.add((java.lang.Object) 1.0f);
        boolean b69 = fixedOrderComparator63.add((java.lang.Object) 1.0f);
        fixedOrderComparator63.setUnknownObjectBehavior(1);
        try {
            int i72 = fixedOrderComparator21.compare((java.lang.Object) fixedOrderComparator51, (java.lang.Object) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertTrue(i28 == 2);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(i40 == 2);
        org.junit.Assert.assertNotNull(obj_array47);
        org.junit.Assert.assertTrue(i52 == 2);
        org.junit.Assert.assertTrue(i53 == 2);
        org.junit.Assert.assertTrue(i54 == 2);
        org.junit.Assert.assertTrue(b55 == false);
        org.junit.Assert.assertNotNull(obj_array62);
        org.junit.Assert.assertTrue(b67 == true);
        org.junit.Assert.assertTrue(b69 == false);
    }

    @Test
    public void test393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test393");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b7 = fixedOrderComparator0.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array14);
        java.lang.Object[] obj_array17 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        boolean b19 = fixedOrderComparator16.add((java.lang.Object) obj_array17);
        boolean b20 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator16);
        fixedOrderComparator16.setUnknownObjectBehavior((int) (short) 0);
        boolean b23 = fixedOrderComparator16.isLocked();
        boolean b24 = fixedOrderComparator16.isLocked();
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue(b24 == false);
    }

    @Test
    public void test394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test394");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b12 = fixedOrderComparator10.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        boolean b19 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object obj21 = null;
        int i22 = fixedOrderComparator13.compare((java.lang.Object) 1.0d, obj21);
        boolean b23 = fixedOrderComparator13.isLocked();
        boolean b24 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator13);
        boolean b25 = fixedOrderComparator13.isLocked();
        boolean b26 = fixedOrderComparator13.isLocked();
        int i27 = fixedOrderComparator13.getUnknownObjectBehavior();
        int i30 = fixedOrderComparator13.compare((java.lang.Object) ' ', (java.lang.Object) 10L);
        java.lang.Object[] obj_array37 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array37);
        java.lang.Object[] obj_array45 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array45);
        fixedOrderComparator46.setUnknownObjectBehavior(0);
        boolean b49 = fixedOrderComparator38.add((java.lang.Object) 0);
        boolean b50 = fixedOrderComparator38.isLocked();
        try {
            boolean b51 = fixedOrderComparator13.add((java.lang.Object) fixedOrderComparator38);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertNotNull(obj_array37);
        org.junit.Assert.assertNotNull(obj_array45);
        org.junit.Assert.assertTrue(b49 == false);
        org.junit.Assert.assertTrue(b50 == false);
    }

    @Test
    public void test395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test395");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array18 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array18);
        int i22 = fixedOrderComparator21.getUnknownObjectBehavior();
        boolean b23 = fixedOrderComparator21.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array31 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        boolean b34 = fixedOrderComparator32.add((java.lang.Object) (-1.0f));
        int i35 = fixedOrderComparator32.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        fixedOrderComparator44.setUnknownObjectBehavior((int) (short) 0);
        int i47 = fixedOrderComparator44.getUnknownObjectBehavior();
        boolean b48 = fixedOrderComparator32.add((java.lang.Object) i47);
        boolean b49 = fixedOrderComparator24.add((java.lang.Object) fixedOrderComparator32);
        int i50 = fixedOrderComparator7.compare((java.lang.Object) b23, (java.lang.Object) fixedOrderComparator24);
        java.lang.Object[] obj_array58 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array58);
        java.lang.Object[] obj_array63 = new java.lang.Object[] { fixedOrderComparator24, (byte) 10, obj_array58 };
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array58);
        boolean b67 = fixedOrderComparator66.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertTrue(i22 == 2);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(i50 == 0);
        org.junit.Assert.assertNotNull(obj_array58);
        org.junit.Assert.assertNotNull(obj_array63);
        org.junit.Assert.assertTrue(b67 == false);
    }

    @Test
    public void test396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test396");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array15 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array15);
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array15);
        fixedOrderComparator17.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array26);
        int i30 = fixedOrderComparator17.compare((java.lang.Object) fixedOrderComparator28, (java.lang.Object) (-1.0d));
        boolean b31 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator17);
        try {
            fixedOrderComparator17.setUnknownObjectBehavior((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array15);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertTrue(b31 == true);
    }

    @Test
    public void test397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test397");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b13 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        fixedOrderComparator7.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b31 = fixedOrderComparator7.add((java.lang.Object) obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array22);
        int i33 = fixedOrderComparator32.getUnknownObjectBehavior();
        java.lang.Object[] obj_array40 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array40);
        boolean b50 = fixedOrderComparator32.add((java.lang.Object) obj_array40);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(i33 == 2);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(b50 == true);
    }

    @Test
    public void test398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test398");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array18 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array18);
        fixedOrderComparator20.setUnknownObjectBehavior((int) (short) 0);
        int i23 = fixedOrderComparator20.getUnknownObjectBehavior();
        java.lang.Object obj25 = null;
        boolean b26 = fixedOrderComparator20.addAsEqual((java.lang.Object) 10.0f, obj25);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator();
        int i28 = fixedOrderComparator27.getUnknownObjectBehavior();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array35);
        boolean b40 = fixedOrderComparator27.add((java.lang.Object) fixedOrderComparator39);
        fixedOrderComparator27.setUnknownObjectBehavior(0);
        boolean b43 = fixedOrderComparator27.isLocked();
        int i45 = fixedOrderComparator20.compare((java.lang.Object) fixedOrderComparator27, (java.lang.Object) 2);
        java.lang.Object[] obj_array52 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array52);
        boolean b55 = fixedOrderComparator53.add((java.lang.Object) (-1.0f));
        int i56 = fixedOrderComparator53.getUnknownObjectBehavior();
        java.lang.Object[] obj_array63 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array63);
        fixedOrderComparator65.setUnknownObjectBehavior((int) (short) 0);
        int i68 = fixedOrderComparator65.getUnknownObjectBehavior();
        boolean b69 = fixedOrderComparator53.add((java.lang.Object) i68);
        boolean b70 = fixedOrderComparator27.add((java.lang.Object) b69);
        boolean b71 = fixedOrderComparator11.add((java.lang.Object) fixedOrderComparator27);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertTrue(i23 == 0);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertTrue(i28 == 2);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertTrue(i45 == 0);
        org.junit.Assert.assertNotNull(obj_array52);
        org.junit.Assert.assertTrue(b55 == true);
        org.junit.Assert.assertTrue(i56 == 2);
        org.junit.Assert.assertNotNull(obj_array63);
        org.junit.Assert.assertTrue(i68 == 0);
        org.junit.Assert.assertTrue(b69 == false);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertTrue(b71 == true);
    }

    @Test
    public void test399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test399");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b12 = fixedOrderComparator10.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        boolean b19 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object obj21 = null;
        int i22 = fixedOrderComparator13.compare((java.lang.Object) 1.0d, obj21);
        boolean b23 = fixedOrderComparator13.isLocked();
        boolean b24 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object obj25 = null;
        java.lang.Object obj26 = null;
        try {
            boolean b27 = fixedOrderComparator0.addAsEqual(obj25, obj26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == true);
    }

    @Test
    public void test400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test400");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i9 = fixedOrderComparator8.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        fixedOrderComparator10.setUnknownObjectBehavior(1);
        boolean b18 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator10);
        int i19 = fixedOrderComparator8.getUnknownObjectBehavior();
        try {
            fixedOrderComparator8.setUnknownObjectBehavior((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i9 == 2);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertTrue(i19 == 2);
    }

    @Test
    public void test401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test401");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        boolean b21 = fixedOrderComparator7.isLocked();
        boolean b22 = fixedOrderComparator7.isLocked();
        boolean b23 = fixedOrderComparator7.isLocked();
        int i24 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i25 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array32 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        fixedOrderComparator33.setUnknownObjectBehavior(0);
        boolean b37 = fixedOrderComparator33.add((java.lang.Object) 1.0f);
        java.lang.Object obj38 = null;
        java.lang.Object[] obj_array45 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array45);
        fixedOrderComparator46.setUnknownObjectBehavior(0);
        boolean b50 = fixedOrderComparator46.add((java.lang.Object) 1.0f);
        int i51 = fixedOrderComparator46.getUnknownObjectBehavior();
        int i52 = fixedOrderComparator33.compare(obj38, (java.lang.Object) i51);
        java.lang.Object[] obj_array59 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array59);
        java.lang.Object[] obj_array62 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array62);
        boolean b64 = fixedOrderComparator61.add((java.lang.Object) obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array62);
        boolean b68 = fixedOrderComparator7.addAsEqual((java.lang.Object) i51, (java.lang.Object) obj_array62);
        java.lang.Object[] obj_array75 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array75);
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array75);
        fixedOrderComparator77.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator77.setUnknownObjectBehavior(2);
        boolean b82 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator77);
        boolean b83 = fixedOrderComparator7.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertNotNull(obj_array45);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertTrue(i51 == 0);
        org.junit.Assert.assertTrue(i52 == (-1));
        org.junit.Assert.assertNotNull(obj_array59);
        org.junit.Assert.assertNotNull(obj_array62);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue(b68 == true);
        org.junit.Assert.assertNotNull(obj_array75);
        org.junit.Assert.assertTrue(b82 == true);
        org.junit.Assert.assertTrue(b83 == false);
    }

    @Test
    public void test402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test402");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i13 = fixedOrderComparator12.getUnknownObjectBehavior();
        java.lang.Object[] obj_array20 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator23.setUnknownObjectBehavior(0);
        int i26 = fixedOrderComparator23.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator22.addAsEqual((java.lang.Object) i26, (java.lang.Object) (short) 1);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        int i32 = fixedOrderComparator29.getUnknownObjectBehavior();
        fixedOrderComparator29.setUnknownObjectBehavior((int) (byte) 0);
        fixedOrderComparator29.setUnknownObjectBehavior(1);
        boolean b37 = fixedOrderComparator22.add((java.lang.Object) 1);
        boolean b38 = fixedOrderComparator12.add((java.lang.Object) 1);
        java.lang.Object[] obj_array45 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array45);
        java.lang.Object[] obj_array53 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array53);
        fixedOrderComparator54.setUnknownObjectBehavior(0);
        boolean b57 = fixedOrderComparator46.add((java.lang.Object) 0);
        fixedOrderComparator46.setUnknownObjectBehavior((int) (short) 0);
        boolean b60 = fixedOrderComparator46.isLocked();
        boolean b61 = fixedOrderComparator46.isLocked();
        boolean b62 = fixedOrderComparator46.isLocked();
        java.lang.Object[] obj_array69 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator(obj_array69);
        int i74 = fixedOrderComparator73.getUnknownObjectBehavior();
        int i75 = fixedOrderComparator73.getUnknownObjectBehavior();
        boolean b76 = fixedOrderComparator73.isLocked();
        int i77 = fixedOrderComparator73.getUnknownObjectBehavior();
        boolean b78 = fixedOrderComparator46.add((java.lang.Object) fixedOrderComparator73);
        boolean b80 = fixedOrderComparator73.add((java.lang.Object) (byte) 10);
        java.lang.Object obj81 = null;
        boolean b82 = fixedOrderComparator73.add(obj81);
        int i83 = fixedOrderComparator73.getUnknownObjectBehavior();
        try {
            boolean b85 = fixedOrderComparator12.addAsEqual((java.lang.Object) i83, (java.lang.Object) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i13 == 2);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertTrue(i26 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertNotNull(obj_array45);
        org.junit.Assert.assertNotNull(obj_array53);
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertTrue(b60 == false);
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertNotNull(obj_array69);
        org.junit.Assert.assertTrue(i74 == 2);
        org.junit.Assert.assertTrue(i75 == 2);
        org.junit.Assert.assertTrue(b76 == false);
        org.junit.Assert.assertTrue(i77 == 2);
        org.junit.Assert.assertTrue(b78 == true);
        org.junit.Assert.assertTrue(b80 == true);
        org.junit.Assert.assertTrue(b82 == true);
        org.junit.Assert.assertTrue(i83 == 2);
    }

    @Test
    public void test403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test403");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b13 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        fixedOrderComparator7.setUnknownObjectBehavior(1);
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator16.setUnknownObjectBehavior(0);
        int i19 = fixedOrderComparator16.getUnknownObjectBehavior();
        fixedOrderComparator16.setUnknownObjectBehavior((int) (byte) 0);
        fixedOrderComparator16.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        fixedOrderComparator31.setUnknownObjectBehavior(0);
        boolean b35 = fixedOrderComparator31.add((java.lang.Object) 1.0f);
        java.lang.Object obj36 = null;
        java.lang.Object[] obj_array43 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array43);
        fixedOrderComparator44.setUnknownObjectBehavior(0);
        boolean b48 = fixedOrderComparator44.add((java.lang.Object) 1.0f);
        int i49 = fixedOrderComparator44.getUnknownObjectBehavior();
        int i50 = fixedOrderComparator31.compare(obj36, (java.lang.Object) i49);
        boolean b51 = fixedOrderComparator31.isLocked();
        int i52 = fixedOrderComparator7.compare((java.lang.Object) 1, (java.lang.Object) b51);
        java.lang.Object[] obj_array59 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array59);
        fixedOrderComparator60.setUnknownObjectBehavior(0);
        boolean b64 = fixedOrderComparator60.add((java.lang.Object) 1.0f);
        int i65 = fixedOrderComparator60.getUnknownObjectBehavior();
        int i66 = fixedOrderComparator60.getUnknownObjectBehavior();
        try {
            boolean b68 = fixedOrderComparator7.addAsEqual((java.lang.Object) fixedOrderComparator60, (java.lang.Object) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertNotNull(obj_array43);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertTrue(i50 == (-1));
        org.junit.Assert.assertTrue(b51 == true);
        org.junit.Assert.assertTrue(i52 == 0);
        org.junit.Assert.assertNotNull(obj_array59);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue(i65 == 0);
        org.junit.Assert.assertTrue(i66 == 0);
    }

    @Test
    public void test404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test404");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array10);
        java.lang.Object[] obj_array20 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array20);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        fixedOrderComparator31.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array40);
        int i44 = fixedOrderComparator31.compare((java.lang.Object) fixedOrderComparator42, (java.lang.Object) (-1.0d));
        boolean b45 = fixedOrderComparator22.add((java.lang.Object) fixedOrderComparator31);
        boolean b46 = fixedOrderComparator31.isLocked();
        int i47 = fixedOrderComparator31.getUnknownObjectBehavior();
        int i48 = fixedOrderComparator0.compare((java.lang.Object) obj_array10, (java.lang.Object) fixedOrderComparator31);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array10);
        java.lang.Object[] obj_array58 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array58);
        fixedOrderComparator59.setUnknownObjectBehavior(0);
        boolean b63 = fixedOrderComparator59.add((java.lang.Object) 1.0f);
        boolean b65 = fixedOrderComparator59.add((java.lang.Object) 1.0f);
        boolean b66 = fixedOrderComparator59.isLocked();
        int i67 = fixedOrderComparator59.getUnknownObjectBehavior();
        boolean b68 = fixedOrderComparator51.add((java.lang.Object) fixedOrderComparator59);
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(i48 == 0);
        org.junit.Assert.assertNotNull(obj_array58);
        org.junit.Assert.assertTrue(b63 == true);
        org.junit.Assert.assertTrue(b65 == false);
        org.junit.Assert.assertTrue(b66 == false);
        org.junit.Assert.assertTrue(i67 == 0);
        org.junit.Assert.assertTrue(b68 == true);
    }

    @Test
    public void test405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test405");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        int i12 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array19);
        java.lang.Object[] obj_array30 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array30);
        int i36 = fixedOrderComparator7.compare((java.lang.Object) fixedOrderComparator23, (java.lang.Object) fixedOrderComparator35);
        try {
            fixedOrderComparator23.setUnknownObjectBehavior(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(i36 == 0);
    }

    @Test
    public void test406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test406");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        boolean b21 = fixedOrderComparator7.isLocked();
        boolean b22 = fixedOrderComparator7.isLocked();
        boolean b23 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array30 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array30);
        int i35 = fixedOrderComparator34.getUnknownObjectBehavior();
        int i36 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b37 = fixedOrderComparator34.isLocked();
        int i38 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b39 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator34);
        boolean b41 = fixedOrderComparator34.add((java.lang.Object) (byte) 10);
        int i42 = fixedOrderComparator34.getUnknownObjectBehavior();
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(i36 == 2);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(i38 == 2);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertTrue(i42 == 2);
    }

    @Test
    public void test407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test407");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array19 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator21.setUnknownObjectBehavior((int) (short) 0);
        int i24 = fixedOrderComparator7.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator25.setUnknownObjectBehavior(0);
        int i28 = fixedOrderComparator25.getUnknownObjectBehavior();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array35);
        java.lang.Object[] obj_array46 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array46);
        fixedOrderComparator48.setUnknownObjectBehavior((int) (short) 0);
        int i51 = fixedOrderComparator48.getUnknownObjectBehavior();
        java.lang.Object obj53 = null;
        boolean b54 = fixedOrderComparator48.addAsEqual((java.lang.Object) 10.0f, obj53);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator();
        int i56 = fixedOrderComparator55.getUnknownObjectBehavior();
        java.lang.Object[] obj_array63 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array63);
        boolean b68 = fixedOrderComparator55.add((java.lang.Object) fixedOrderComparator67);
        fixedOrderComparator55.setUnknownObjectBehavior(0);
        boolean b71 = fixedOrderComparator55.isLocked();
        int i73 = fixedOrderComparator48.compare((java.lang.Object) fixedOrderComparator55, (java.lang.Object) 2);
        boolean b74 = fixedOrderComparator39.add((java.lang.Object) fixedOrderComparator55);
        boolean b75 = fixedOrderComparator21.addAsEqual((java.lang.Object) i28, (java.lang.Object) fixedOrderComparator55);
        java.lang.Object[] obj_array82 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator(obj_array82);
        collections.comparators.FixedOrderComparator fixedOrderComparator84 = new collections.comparators.FixedOrderComparator(obj_array82);
        fixedOrderComparator84.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator84.setUnknownObjectBehavior(2);
        boolean b89 = fixedOrderComparator21.add((java.lang.Object) 2);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertTrue(i51 == 0);
        org.junit.Assert.assertTrue(b54 == true);
        org.junit.Assert.assertTrue(i56 == 2);
        org.junit.Assert.assertNotNull(obj_array63);
        org.junit.Assert.assertTrue(b68 == true);
        org.junit.Assert.assertTrue(b71 == false);
        org.junit.Assert.assertTrue(i73 == 0);
        org.junit.Assert.assertTrue(b74 == true);
        org.junit.Assert.assertTrue(b75 == true);
        org.junit.Assert.assertNotNull(obj_array82);
        org.junit.Assert.assertTrue(b89 == true);
    }

    @Test
    public void test408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test408");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        fixedOrderComparator19.setUnknownObjectBehavior((int) (short) 0);
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        java.lang.Object obj24 = null;
        boolean b25 = fixedOrderComparator19.addAsEqual((java.lang.Object) 10.0f, obj24);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator();
        int i27 = fixedOrderComparator26.getUnknownObjectBehavior();
        java.lang.Object[] obj_array34 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array34);
        boolean b39 = fixedOrderComparator26.add((java.lang.Object) fixedOrderComparator38);
        fixedOrderComparator26.setUnknownObjectBehavior(0);
        boolean b42 = fixedOrderComparator26.isLocked();
        int i44 = fixedOrderComparator19.compare((java.lang.Object) fixedOrderComparator26, (java.lang.Object) 2);
        boolean b45 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator26);
        boolean b46 = fixedOrderComparator10.isLocked();
        try {
            fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(i27 == 2);
        org.junit.Assert.assertNotNull(obj_array34);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(b46 == false);
    }

    @Test
    public void test409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test409");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        int i21 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array28 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        boolean b33 = fixedOrderComparator29.add((java.lang.Object) 1.0f);
        java.lang.Object obj34 = null;
        java.lang.Object[] obj_array41 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array41);
        fixedOrderComparator42.setUnknownObjectBehavior(0);
        boolean b46 = fixedOrderComparator42.add((java.lang.Object) 1.0f);
        int i47 = fixedOrderComparator42.getUnknownObjectBehavior();
        int i48 = fixedOrderComparator29.compare(obj34, (java.lang.Object) i47);
        int i49 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b50 = fixedOrderComparator29.isLocked();
        java.lang.Object[] obj_array57 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array57);
        fixedOrderComparator59.setUnknownObjectBehavior((int) (short) 0);
        int i62 = fixedOrderComparator59.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator63.setUnknownObjectBehavior(0);
        int i66 = fixedOrderComparator63.getUnknownObjectBehavior();
        int i67 = fixedOrderComparator29.compare((java.lang.Object) i62, (java.lang.Object) fixedOrderComparator63);
        java.lang.Object[] obj_array68 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array68);
        java.lang.Object[] obj_array76 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array76);
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator(obj_array76);
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array76);
        int i80 = fixedOrderComparator79.getUnknownObjectBehavior();
        boolean b81 = fixedOrderComparator79.isLocked();
        int i82 = fixedOrderComparator63.compare((java.lang.Object) fixedOrderComparator69, (java.lang.Object) fixedOrderComparator79);
        try {
            boolean b83 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator63);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(b33 == true);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(i48 == (-1));
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertNotNull(obj_array57);
        org.junit.Assert.assertTrue(i62 == 0);
        org.junit.Assert.assertTrue(i66 == 0);
        org.junit.Assert.assertTrue(i67 == 1);
        org.junit.Assert.assertNotNull(obj_array68);
        org.junit.Assert.assertNotNull(obj_array76);
        org.junit.Assert.assertTrue(i80 == 2);
        org.junit.Assert.assertTrue(b81 == false);
        org.junit.Assert.assertTrue(i82 == 0);
    }

    @Test
    public void test410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test410");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        java.lang.Object[] obj_array27 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array27);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array27);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator30.setUnknownObjectBehavior(0);
        int i33 = fixedOrderComparator30.getUnknownObjectBehavior();
        boolean b35 = fixedOrderComparator29.addAsEqual((java.lang.Object) i33, (java.lang.Object) (short) 1);
        boolean b36 = fixedOrderComparator29.isLocked();
        boolean b37 = fixedOrderComparator12.add((java.lang.Object) b36);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertNotNull(obj_array27);
        org.junit.Assert.assertTrue(i33 == 0);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(b37 == true);
    }

    @Test
    public void test411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test411");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        int i12 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b13 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array14 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        java.lang.Object[] obj_array16 = new java.lang.Object[] { fixedOrderComparator15 };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array16);
        java.lang.Object[] obj_array25 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array25);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array25);
        fixedOrderComparator27.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array36 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array36);
        int i40 = fixedOrderComparator27.compare((java.lang.Object) fixedOrderComparator38, (java.lang.Object) (-1.0d));
        boolean b41 = fixedOrderComparator38.isLocked();
        java.lang.Object[] obj_array48 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array48);
        boolean b51 = fixedOrderComparator49.add((java.lang.Object) (-1.0f));
        fixedOrderComparator49.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array61 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array61);
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array61);
        fixedOrderComparator63.setUnknownObjectBehavior((int) (short) 0);
        int i66 = fixedOrderComparator49.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator63);
        java.lang.Object[] obj_array73 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator74 = new collections.comparators.FixedOrderComparator(obj_array73);
        java.lang.Object[] obj_array81 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array81);
        fixedOrderComparator82.setUnknownObjectBehavior(0);
        boolean b85 = fixedOrderComparator74.add((java.lang.Object) 0);
        fixedOrderComparator74.setUnknownObjectBehavior((int) (short) 0);
        boolean b88 = fixedOrderComparator74.isLocked();
        boolean b89 = fixedOrderComparator38.addAsEqual((java.lang.Object) i66, (java.lang.Object) b88);
        int i90 = fixedOrderComparator38.getUnknownObjectBehavior();
        int i91 = fixedOrderComparator7.compare((java.lang.Object) obj_array16, (java.lang.Object) i90);
        collections.comparators.FixedOrderComparator fixedOrderComparator92 = new collections.comparators.FixedOrderComparator(obj_array16);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertNotNull(obj_array25);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertNotNull(obj_array48);
        org.junit.Assert.assertTrue(b51 == true);
        org.junit.Assert.assertNotNull(obj_array61);
        org.junit.Assert.assertTrue(i66 == 0);
        org.junit.Assert.assertNotNull(obj_array73);
        org.junit.Assert.assertNotNull(obj_array81);
        org.junit.Assert.assertTrue(b85 == false);
        org.junit.Assert.assertTrue(b88 == false);
        org.junit.Assert.assertTrue(b89 == true);
        org.junit.Assert.assertTrue(i90 == 2);
        org.junit.Assert.assertTrue(i91 == 0);
    }

    @Test
    public void test412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test412");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        int i46 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Object obj48 = null;
        int i49 = fixedOrderComparator7.compare(obj47, obj48);
        java.lang.Object[] obj_array56 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array56);
        java.lang.Object[] obj_array64 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array64);
        int i68 = fixedOrderComparator7.compare((java.lang.Object) obj_array56, (java.lang.Object) fixedOrderComparator67);
        boolean b69 = fixedOrderComparator7.isLocked();
        int i70 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array77 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator(obj_array77);
        boolean b80 = fixedOrderComparator78.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator81.setUnknownObjectBehavior(0);
        int i84 = fixedOrderComparator81.getUnknownObjectBehavior();
        fixedOrderComparator81.setUnknownObjectBehavior((int) (byte) 0);
        boolean b87 = fixedOrderComparator78.add((java.lang.Object) fixedOrderComparator81);
        java.lang.Object obj89 = null;
        int i90 = fixedOrderComparator81.compare((java.lang.Object) 1.0d, obj89);
        boolean b91 = fixedOrderComparator81.isLocked();
        java.lang.Object[] obj_array92 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator93 = new collections.comparators.FixedOrderComparator(obj_array92);
        java.lang.Object[] obj_array94 = new java.lang.Object[] { fixedOrderComparator93 };
        collections.comparators.FixedOrderComparator fixedOrderComparator95 = new collections.comparators.FixedOrderComparator(obj_array94);
        collections.comparators.FixedOrderComparator fixedOrderComparator96 = new collections.comparators.FixedOrderComparator(obj_array94);
        collections.comparators.FixedOrderComparator fixedOrderComparator97 = new collections.comparators.FixedOrderComparator(obj_array94);
        int i98 = fixedOrderComparator7.compare((java.lang.Object) b91, (java.lang.Object) obj_array94);
        int i99 = fixedOrderComparator7.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertNotNull(obj_array56);
        org.junit.Assert.assertNotNull(obj_array64);
        org.junit.Assert.assertTrue(i68 == 0);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertTrue(i70 == 0);
        org.junit.Assert.assertNotNull(obj_array77);
        org.junit.Assert.assertTrue(b80 == true);
        org.junit.Assert.assertTrue(i84 == 0);
        org.junit.Assert.assertTrue(b87 == true);
        org.junit.Assert.assertTrue(i90 == 0);
        org.junit.Assert.assertTrue(b91 == true);
        org.junit.Assert.assertNotNull(obj_array92);
        org.junit.Assert.assertNotNull(obj_array94);
        org.junit.Assert.assertTrue(i98 == 0);
        org.junit.Assert.assertTrue(i99 == 0);
    }

    @Test
    public void test413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test413");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object obj13 = null;
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator();
        int i15 = fixedOrderComparator14.getUnknownObjectBehavior();
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b27 = fixedOrderComparator14.add((java.lang.Object) fixedOrderComparator26);
        fixedOrderComparator14.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array36 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array36);
        java.lang.Object[] obj_array43 = new java.lang.Object[] { fixedOrderComparator14, obj_array36 };
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array36);
        int i48 = fixedOrderComparator47.getUnknownObjectBehavior();
        try {
            boolean b49 = fixedOrderComparator12.addAsEqual(obj13, (java.lang.Object) fixedOrderComparator47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i15 == 2);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertNotNull(obj_array43);
        org.junit.Assert.assertTrue(i48 == 2);
    }

    @Test
    public void test414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test414");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b7 = fixedOrderComparator0.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array14);
        java.lang.Object[] obj_array17 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        boolean b19 = fixedOrderComparator16.add((java.lang.Object) obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array17);
        boolean b23 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator22);
        int i24 = fixedOrderComparator0.getUnknownObjectBehavior();
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(i24 == 0);
    }

    @Test
    public void test415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test415");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator8.setUnknownObjectBehavior(2);
        int i13 = fixedOrderComparator8.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator14.setUnknownObjectBehavior(0);
        int i17 = fixedOrderComparator14.getUnknownObjectBehavior();
        fixedOrderComparator14.setUnknownObjectBehavior((int) (byte) 0);
        boolean b20 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator14);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator21.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator21.isLocked();
        boolean b25 = fixedOrderComparator21.isLocked();
        java.lang.Object[] obj_array32 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        fixedOrderComparator33.setUnknownObjectBehavior(0);
        boolean b37 = fixedOrderComparator33.add((java.lang.Object) 1.0f);
        boolean b39 = fixedOrderComparator33.add((java.lang.Object) 1.0f);
        int i41 = fixedOrderComparator21.compare((java.lang.Object) fixedOrderComparator33, (java.lang.Object) 1.0d);
        fixedOrderComparator33.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array50 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator();
        int i56 = fixedOrderComparator55.getUnknownObjectBehavior();
        boolean b57 = fixedOrderComparator55.isLocked();
        fixedOrderComparator55.setUnknownObjectBehavior(0);
        int i60 = fixedOrderComparator33.compare((java.lang.Object) obj_array50, (java.lang.Object) fixedOrderComparator55);
        java.lang.Object[] obj_array67 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array67);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array67);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array67);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array67);
        try {
            boolean b72 = fixedOrderComparator8.addAsEqual((java.lang.Object) obj_array50, (java.lang.Object) obj_array67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i13 == 2);
        org.junit.Assert.assertTrue(i17 == 0);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertTrue(i41 == 0);
        org.junit.Assert.assertNotNull(obj_array50);
        org.junit.Assert.assertTrue(i56 == 2);
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertTrue(i60 == 0);
        org.junit.Assert.assertNotNull(obj_array67);
    }

    @Test
    public void test416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test416");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        fixedOrderComparator11.setUnknownObjectBehavior(0);
        boolean b15 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        boolean b17 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator();
        boolean b19 = fixedOrderComparator18.isLocked();
        boolean b21 = fixedOrderComparator18.add((java.lang.Object) 10.0d);
        int i22 = fixedOrderComparator0.compare((java.lang.Object) b17, (java.lang.Object) fixedOrderComparator18);
        boolean b23 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator();
        int i34 = fixedOrderComparator33.getUnknownObjectBehavior();
        java.lang.Object[] obj_array41 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array41);
        boolean b46 = fixedOrderComparator33.add((java.lang.Object) fixedOrderComparator45);
        fixedOrderComparator33.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array55 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array55);
        int i60 = fixedOrderComparator59.getUnknownObjectBehavior();
        int i61 = fixedOrderComparator59.getUnknownObjectBehavior();
        boolean b62 = fixedOrderComparator59.isLocked();
        int i63 = fixedOrderComparator59.getUnknownObjectBehavior();
        int i65 = fixedOrderComparator33.compare((java.lang.Object) fixedOrderComparator59, (java.lang.Object) 1L);
        int i66 = fixedOrderComparator0.compare((java.lang.Object) obj_array30, (java.lang.Object) i65);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array30);
        try {
            fixedOrderComparator67.setUnknownObjectBehavior((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(i34 == 2);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(i60 == 2);
        org.junit.Assert.assertTrue(i61 == 2);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertTrue(i63 == 2);
        org.junit.Assert.assertTrue(i65 == 0);
        org.junit.Assert.assertTrue(i66 == 0);
    }

    @Test
    public void test417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test417");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        boolean b1 = fixedOrderComparator0.isLocked();
        boolean b3 = fixedOrderComparator0.add((java.lang.Object) 10.0d);
        java.lang.Object obj4 = null;
        boolean b5 = fixedOrderComparator0.add(obj4);
        int i6 = fixedOrderComparator0.getUnknownObjectBehavior();
        try {
            fixedOrderComparator0.setUnknownObjectBehavior(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b1 == false);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue(b5 == true);
        org.junit.Assert.assertTrue(i6 == 2);
    }

    @Test
    public void test418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test418");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        boolean b1 = fixedOrderComparator0.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator2 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator2.setUnknownObjectBehavior(0);
        boolean b5 = fixedOrderComparator2.isLocked();
        boolean b6 = fixedOrderComparator2.isLocked();
        java.lang.Object[] obj_array13 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array13);
        fixedOrderComparator14.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator14.add((java.lang.Object) 1.0f);
        boolean b20 = fixedOrderComparator14.add((java.lang.Object) 1.0f);
        int i22 = fixedOrderComparator2.compare((java.lang.Object) fixedOrderComparator14, (java.lang.Object) 1.0d);
        boolean b23 = fixedOrderComparator2.isLocked();
        java.lang.Object obj24 = null;
        try {
            boolean b25 = fixedOrderComparator0.addAsEqual((java.lang.Object) b23, obj24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b1 == false);
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue(b6 == false);
        org.junit.Assert.assertNotNull(obj_array13);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
    }

    @Test
    public void test419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test419");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { fixedOrderComparator0, obj_array22 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array22);
        fixedOrderComparator33.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array42 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array42);
        java.lang.Object[] obj_array55 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array55);
        java.lang.Object[] obj_array64 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array64);
        fixedOrderComparator66.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array75 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array75);
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array75);
        int i79 = fixedOrderComparator66.compare((java.lang.Object) fixedOrderComparator77, (java.lang.Object) (-1.0d));
        boolean b80 = fixedOrderComparator57.add((java.lang.Object) fixedOrderComparator66);
        try {
            boolean b81 = fixedOrderComparator33.addAsEqual((java.lang.Object) fixedOrderComparator48, (java.lang.Object) b80);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertNotNull(obj_array64);
        org.junit.Assert.assertNotNull(obj_array75);
        org.junit.Assert.assertTrue(i79 == 0);
        org.junit.Assert.assertTrue(b80 == true);
    }

    @Test
    public void test420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test420");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b7 = fixedOrderComparator0.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        boolean b17 = fixedOrderComparator15.add((java.lang.Object) (-1.0f));
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator();
        int i19 = fixedOrderComparator18.getUnknownObjectBehavior();
        boolean b20 = fixedOrderComparator18.isLocked();
        fixedOrderComparator18.setUnknownObjectBehavior(0);
        int i23 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator15, (java.lang.Object) 0);
        int i24 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array31 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        fixedOrderComparator32.setUnknownObjectBehavior(0);
        boolean b36 = fixedOrderComparator32.add((java.lang.Object) 1.0f);
        int i37 = fixedOrderComparator32.getUnknownObjectBehavior();
        boolean b38 = fixedOrderComparator32.isLocked();
        java.lang.Object[] obj_array39 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array39);
        java.lang.Object[] obj_array41 = new java.lang.Object[] { fixedOrderComparator40 };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array41);
        java.lang.Object[] obj_array50 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array50);
        int i53 = fixedOrderComparator32.compare((java.lang.Object) fixedOrderComparator43, (java.lang.Object) obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array50);
        java.lang.Object[] obj_array62 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array62);
        fixedOrderComparator64.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator64.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array75 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array75);
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array75);
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator78.setUnknownObjectBehavior(0);
        int i81 = fixedOrderComparator78.getUnknownObjectBehavior();
        boolean b83 = fixedOrderComparator77.addAsEqual((java.lang.Object) i81, (java.lang.Object) (short) 1);
        int i84 = fixedOrderComparator77.getUnknownObjectBehavior();
        java.lang.Object[] obj_array91 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator92 = new collections.comparators.FixedOrderComparator(obj_array91);
        boolean b93 = fixedOrderComparator92.isLocked();
        boolean b94 = fixedOrderComparator77.add((java.lang.Object) fixedOrderComparator92);
        boolean b95 = fixedOrderComparator64.add((java.lang.Object) fixedOrderComparator77);
        int i96 = fixedOrderComparator0.compare((java.lang.Object) obj_array50, (java.lang.Object) fixedOrderComparator77);
        try {
            fixedOrderComparator77.setUnknownObjectBehavior(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(i19 == 2);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertTrue(i23 == 0);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(i37 == 0);
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertNotNull(obj_array39);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertNotNull(obj_array50);
        org.junit.Assert.assertTrue(i53 == 0);
        org.junit.Assert.assertNotNull(obj_array62);
        org.junit.Assert.assertNotNull(obj_array75);
        org.junit.Assert.assertTrue(i81 == 0);
        org.junit.Assert.assertTrue(b83 == true);
        org.junit.Assert.assertTrue(i84 == 2);
        org.junit.Assert.assertNotNull(obj_array91);
        org.junit.Assert.assertTrue(b93 == false);
        org.junit.Assert.assertTrue(b94 == true);
        org.junit.Assert.assertTrue(b95 == true);
        org.junit.Assert.assertTrue(i96 == 0);
    }

    @Test
    public void test421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test421");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array15 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array15);
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array15);
        fixedOrderComparator17.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array26);
        int i30 = fixedOrderComparator17.compare((java.lang.Object) fixedOrderComparator28, (java.lang.Object) (-1.0d));
        boolean b31 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator17);
        boolean b32 = fixedOrderComparator17.isLocked();
        int i33 = fixedOrderComparator17.getUnknownObjectBehavior();
        try {
            fixedOrderComparator17.setUnknownObjectBehavior((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array15);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertTrue(i33 == 0);
    }

    @Test
    public void test422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test422");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator8.setUnknownObjectBehavior(2);
        int i13 = fixedOrderComparator8.getUnknownObjectBehavior();
        int i14 = fixedOrderComparator8.getUnknownObjectBehavior();
        boolean b15 = fixedOrderComparator8.isLocked();
        try {
            fixedOrderComparator8.setUnknownObjectBehavior((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i13 == 2);
        org.junit.Assert.assertTrue(i14 == 2);
        org.junit.Assert.assertTrue(b15 == false);
    }

    @Test
    public void test423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test423");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        int i6 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i7 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b8 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array15 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array15);
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array15);
        java.lang.Object[] obj_array24 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array24);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array24);
        fixedOrderComparator26.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        int i39 = fixedOrderComparator26.compare((java.lang.Object) fixedOrderComparator37, (java.lang.Object) (-1.0d));
        boolean b40 = fixedOrderComparator17.add((java.lang.Object) fixedOrderComparator26);
        java.lang.Object[] obj_array47 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array47);
        boolean b50 = fixedOrderComparator49.isLocked();
        boolean b51 = fixedOrderComparator49.isLocked();
        int i52 = fixedOrderComparator49.getUnknownObjectBehavior();
        boolean b53 = fixedOrderComparator17.add((java.lang.Object) fixedOrderComparator49);
        java.lang.Object[] obj_array60 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array60);
        boolean b63 = fixedOrderComparator61.add((java.lang.Object) (-1.0f));
        int i64 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator17, (java.lang.Object) (-1.0f));
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(i6 == 0);
        org.junit.Assert.assertTrue(i7 == 0);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(obj_array15);
        org.junit.Assert.assertNotNull(obj_array24);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i39 == 0);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertNotNull(obj_array47);
        org.junit.Assert.assertTrue(b50 == false);
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertTrue(i52 == 2);
        org.junit.Assert.assertTrue(b53 == true);
        org.junit.Assert.assertNotNull(obj_array60);
        org.junit.Assert.assertTrue(b63 == true);
        org.junit.Assert.assertTrue(i64 == 0);
    }

    @Test
    public void test424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test424");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj18 = null;
        int i19 = fixedOrderComparator10.compare((java.lang.Object) 1.0d, obj18);
        int i20 = fixedOrderComparator10.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertTrue(i20 == 0);
    }

    @Test
    public void test425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test425");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        boolean b14 = fixedOrderComparator12.isLocked();
        boolean b15 = fixedOrderComparator12.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator16.setUnknownObjectBehavior(0);
        int i19 = fixedOrderComparator16.getUnknownObjectBehavior();
        fixedOrderComparator16.setUnknownObjectBehavior((int) (byte) 0);
        boolean b22 = fixedOrderComparator16.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator23.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array32 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        boolean b35 = fixedOrderComparator33.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator36.setUnknownObjectBehavior(0);
        int i39 = fixedOrderComparator36.getUnknownObjectBehavior();
        fixedOrderComparator36.setUnknownObjectBehavior((int) (byte) 0);
        boolean b42 = fixedOrderComparator33.add((java.lang.Object) fixedOrderComparator36);
        java.lang.Object obj44 = null;
        int i45 = fixedOrderComparator36.compare((java.lang.Object) 1.0d, obj44);
        boolean b46 = fixedOrderComparator36.isLocked();
        boolean b47 = fixedOrderComparator23.add((java.lang.Object) fixedOrderComparator36);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array54);
        fixedOrderComparator56.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array65 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array65);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array65);
        int i69 = fixedOrderComparator56.compare((java.lang.Object) fixedOrderComparator67, (java.lang.Object) (-1.0d));
        boolean b70 = fixedOrderComparator67.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator71.setUnknownObjectBehavior(0);
        boolean b74 = fixedOrderComparator71.isLocked();
        java.lang.Object[] obj_array81 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array81);
        fixedOrderComparator82.setUnknownObjectBehavior(0);
        boolean b86 = fixedOrderComparator82.add((java.lang.Object) 1.0f);
        boolean b88 = fixedOrderComparator82.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator89 = new collections.comparators.FixedOrderComparator();
        boolean b90 = fixedOrderComparator89.isLocked();
        boolean b92 = fixedOrderComparator89.add((java.lang.Object) 10.0d);
        int i93 = fixedOrderComparator71.compare((java.lang.Object) b88, (java.lang.Object) fixedOrderComparator89);
        boolean b94 = fixedOrderComparator71.isLocked();
        int i95 = fixedOrderComparator23.compare((java.lang.Object) b70, (java.lang.Object) fixedOrderComparator71);
        try {
            boolean b96 = fixedOrderComparator12.addAsEqual((java.lang.Object) fixedOrderComparator16, (java.lang.Object) fixedOrderComparator71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertTrue(b15 == false);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertTrue(i39 == 0);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertTrue(i45 == 0);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertNotNull(obj_array65);
        org.junit.Assert.assertTrue(i69 == 0);
        org.junit.Assert.assertTrue(b70 == false);
        org.junit.Assert.assertTrue(b74 == false);
        org.junit.Assert.assertNotNull(obj_array81);
        org.junit.Assert.assertTrue(b86 == true);
        org.junit.Assert.assertTrue(b88 == false);
        org.junit.Assert.assertTrue(b90 == false);
        org.junit.Assert.assertTrue(b92 == true);
        org.junit.Assert.assertTrue(i93 == 0);
        org.junit.Assert.assertTrue(b94 == true);
        org.junit.Assert.assertTrue(i95 == 0);
    }

    @Test
    public void test426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test426");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        int i11 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object obj13 = null;
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) 10.0f, obj13);
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator();
        int i16 = fixedOrderComparator15.getUnknownObjectBehavior();
        java.lang.Object[] obj_array23 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array23);
        boolean b28 = fixedOrderComparator15.add((java.lang.Object) fixedOrderComparator27);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b31 = fixedOrderComparator15.isLocked();
        int i33 = fixedOrderComparator8.compare((java.lang.Object) fixedOrderComparator15, (java.lang.Object) 2);
        java.lang.Object[] obj_array34 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array34);
        java.lang.Object[] obj_array36 = new java.lang.Object[] { fixedOrderComparator35 };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array36);
        boolean b40 = fixedOrderComparator15.add((java.lang.Object) fixedOrderComparator39);
        fixedOrderComparator39.setUnknownObjectBehavior((int) (short) 1);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i16 == 2);
        org.junit.Assert.assertNotNull(obj_array23);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertTrue(i33 == 0);
        org.junit.Assert.assertNotNull(obj_array34);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertTrue(b40 == true);
    }

    @Test
    public void test427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test427");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        java.lang.Object[] obj_array46 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array54);
        int i58 = fixedOrderComparator57.getUnknownObjectBehavior();
        boolean b59 = fixedOrderComparator57.isLocked();
        int i60 = fixedOrderComparator41.compare((java.lang.Object) fixedOrderComparator47, (java.lang.Object) fixedOrderComparator57);
        try {
            fixedOrderComparator41.setUnknownObjectBehavior(1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertTrue(i58 == 2);
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertTrue(i60 == 0);
    }

    @Test
    public void test428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test428");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        boolean b3 = fixedOrderComparator0.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator4 = new collections.comparators.FixedOrderComparator();
        int i5 = fixedOrderComparator4.getUnknownObjectBehavior();
        boolean b6 = fixedOrderComparator4.isLocked();
        fixedOrderComparator4.setUnknownObjectBehavior(0);
        boolean b9 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator4);
        boolean b10 = fixedOrderComparator0.isLocked();
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(i5 == 2);
        org.junit.Assert.assertTrue(b6 == false);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(b10 == false);
    }

    @Test
    public void test429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test429");
        java.lang.Object[] obj_array0 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator1 = new collections.comparators.FixedOrderComparator(obj_array0);
        java.lang.Object[] obj_array2 = new java.lang.Object[] { fixedOrderComparator1 };
        collections.comparators.FixedOrderComparator fixedOrderComparator3 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator4 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator4.setUnknownObjectBehavior(0);
        boolean b7 = fixedOrderComparator4.isLocked();
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b19 = fixedOrderComparator15.add((java.lang.Object) 1.0f);
        boolean b21 = fixedOrderComparator15.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator();
        boolean b23 = fixedOrderComparator22.isLocked();
        boolean b25 = fixedOrderComparator22.add((java.lang.Object) 10.0d);
        int i26 = fixedOrderComparator4.compare((java.lang.Object) b21, (java.lang.Object) fixedOrderComparator22);
        boolean b27 = fixedOrderComparator4.isLocked();
        java.lang.Object[] obj_array28 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        java.lang.Object[] obj_array30 = new java.lang.Object[] { fixedOrderComparator29 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array30);
        try {
            int i35 = fixedOrderComparator3.compare((java.lang.Object) fixedOrderComparator4, (java.lang.Object) fixedOrderComparator34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array0);
        org.junit.Assert.assertNotNull(obj_array2);
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(i26 == 0);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertNotNull(obj_array30);
    }

    @Test
    public void test430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test430");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array24 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array24);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array24);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array24);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array24);
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        java.lang.Object obj42 = null;
        boolean b43 = fixedOrderComparator37.addAsEqual((java.lang.Object) 10.0f, obj42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator();
        int i45 = fixedOrderComparator44.getUnknownObjectBehavior();
        java.lang.Object[] obj_array52 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array52);
        boolean b57 = fixedOrderComparator44.add((java.lang.Object) fixedOrderComparator56);
        fixedOrderComparator44.setUnknownObjectBehavior(0);
        boolean b60 = fixedOrderComparator44.isLocked();
        int i62 = fixedOrderComparator37.compare((java.lang.Object) fixedOrderComparator44, (java.lang.Object) 2);
        boolean b63 = fixedOrderComparator28.add((java.lang.Object) fixedOrderComparator44);
        int i64 = fixedOrderComparator0.compare((java.lang.Object) 100, (java.lang.Object) b63);
        int i65 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array72 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator(obj_array72);
        collections.comparators.FixedOrderComparator fixedOrderComparator74 = new collections.comparators.FixedOrderComparator(obj_array72);
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array72);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array72);
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array72);
        int i78 = fixedOrderComparator77.getUnknownObjectBehavior();
        fixedOrderComparator77.setUnknownObjectBehavior((int) (short) 0);
        try {
            boolean b81 = fixedOrderComparator0.add((java.lang.Object) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertNotNull(obj_array24);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertTrue(i45 == 2);
        org.junit.Assert.assertNotNull(obj_array52);
        org.junit.Assert.assertTrue(b57 == true);
        org.junit.Assert.assertTrue(b60 == false);
        org.junit.Assert.assertTrue(i62 == 0);
        org.junit.Assert.assertTrue(b63 == true);
        org.junit.Assert.assertTrue(i64 == 0);
        org.junit.Assert.assertTrue(i65 == 0);
        org.junit.Assert.assertNotNull(obj_array72);
        org.junit.Assert.assertTrue(i78 == 2);
    }

    @Test
    public void test431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test431");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { fixedOrderComparator0, obj_array22 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        java.lang.Object[] obj_array37 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array37);
        java.lang.Object[] obj_array46 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array46);
        int i50 = fixedOrderComparator49.getUnknownObjectBehavior();
        boolean b51 = fixedOrderComparator49.isLocked();
        int i52 = fixedOrderComparator49.getUnknownObjectBehavior();
        java.lang.Object[] obj_array59 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array59);
        boolean b64 = fixedOrderComparator49.add((java.lang.Object) fixedOrderComparator63);
        try {
            int i65 = fixedOrderComparator30.compare((java.lang.Object) obj_array37, (java.lang.Object) fixedOrderComparator49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertNotNull(obj_array37);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertTrue(i50 == 2);
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertTrue(i52 == 2);
        org.junit.Assert.assertNotNull(obj_array59);
        org.junit.Assert.assertTrue(b64 == true);
    }

    @Test
    public void test432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test432");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        boolean b1 = fixedOrderComparator0.isLocked();
        boolean b3 = fixedOrderComparator0.add((java.lang.Object) 10.0d);
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object obj5 = null;
        java.lang.Object[] obj_array12 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array12);
        java.lang.Object[] obj_array20 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        fixedOrderComparator21.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator13.add((java.lang.Object) 0);
        fixedOrderComparator13.setUnknownObjectBehavior((int) (short) 0);
        boolean b27 = fixedOrderComparator13.isLocked();
        boolean b28 = fixedOrderComparator13.isLocked();
        boolean b29 = fixedOrderComparator13.isLocked();
        try {
            boolean b30 = fixedOrderComparator0.addAsEqual(obj5, (java.lang.Object) fixedOrderComparator13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b1 == false);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array12);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertTrue(b29 == false);
    }

    @Test
    public void test433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test433");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        boolean b21 = fixedOrderComparator7.isLocked();
        boolean b22 = fixedOrderComparator7.isLocked();
        boolean b23 = fixedOrderComparator7.isLocked();
        int i24 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i25 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array32 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        fixedOrderComparator33.setUnknownObjectBehavior(0);
        boolean b37 = fixedOrderComparator33.add((java.lang.Object) 1.0f);
        java.lang.Object obj38 = null;
        java.lang.Object[] obj_array45 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array45);
        fixedOrderComparator46.setUnknownObjectBehavior(0);
        boolean b50 = fixedOrderComparator46.add((java.lang.Object) 1.0f);
        int i51 = fixedOrderComparator46.getUnknownObjectBehavior();
        int i52 = fixedOrderComparator33.compare(obj38, (java.lang.Object) i51);
        java.lang.Object[] obj_array59 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array59);
        java.lang.Object[] obj_array62 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array62);
        boolean b64 = fixedOrderComparator61.add((java.lang.Object) obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array62);
        boolean b68 = fixedOrderComparator7.addAsEqual((java.lang.Object) i51, (java.lang.Object) obj_array62);
        boolean b69 = fixedOrderComparator7.isLocked();
        int i70 = fixedOrderComparator7.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertNotNull(obj_array45);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertTrue(i51 == 0);
        org.junit.Assert.assertTrue(i52 == (-1));
        org.junit.Assert.assertNotNull(obj_array59);
        org.junit.Assert.assertNotNull(obj_array62);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue(b68 == true);
        org.junit.Assert.assertTrue(b69 == false);
        org.junit.Assert.assertTrue(i70 == 0);
    }

    @Test
    public void test434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test434");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj18 = null;
        int i19 = fixedOrderComparator10.compare((java.lang.Object) 1.0d, obj18);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        int i32 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b34 = fixedOrderComparator28.addAsEqual((java.lang.Object) i32, (java.lang.Object) (short) 1);
        int i35 = fixedOrderComparator28.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        boolean b44 = fixedOrderComparator43.isLocked();
        boolean b45 = fixedOrderComparator28.add((java.lang.Object) fixedOrderComparator43);
        int i47 = fixedOrderComparator10.compare((java.lang.Object) fixedOrderComparator28, (java.lang.Object) 1L);
        boolean b48 = fixedOrderComparator10.isLocked();
        int i49 = fixedOrderComparator10.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator51.setUnknownObjectBehavior(0);
        int i54 = fixedOrderComparator51.getUnknownObjectBehavior();
        fixedOrderComparator51.setUnknownObjectBehavior((int) (byte) 0);
        fixedOrderComparator51.setUnknownObjectBehavior(1);
        fixedOrderComparator51.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array67 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array67);
        fixedOrderComparator68.setUnknownObjectBehavior(0);
        boolean b72 = fixedOrderComparator68.add((java.lang.Object) 1.0f);
        boolean b74 = fixedOrderComparator68.add((java.lang.Object) 1.0f);
        boolean b75 = fixedOrderComparator68.isLocked();
        boolean b76 = fixedOrderComparator68.isLocked();
        int i77 = fixedOrderComparator68.getUnknownObjectBehavior();
        int i78 = fixedOrderComparator68.getUnknownObjectBehavior();
        boolean b79 = fixedOrderComparator51.add((java.lang.Object) fixedOrderComparator68);
        try {
            boolean b80 = fixedOrderComparator10.addAsEqual((java.lang.Object) (-1.0f), (java.lang.Object) fixedOrderComparator68);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertTrue(i54 == 0);
        org.junit.Assert.assertNotNull(obj_array67);
        org.junit.Assert.assertTrue(b72 == true);
        org.junit.Assert.assertTrue(b74 == false);
        org.junit.Assert.assertTrue(b75 == false);
        org.junit.Assert.assertTrue(b76 == false);
        org.junit.Assert.assertTrue(i77 == 0);
        org.junit.Assert.assertTrue(i78 == 0);
        org.junit.Assert.assertTrue(b79 == true);
    }

    @Test
    public void test435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test435");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        java.lang.Object obj17 = null;
        java.lang.Object[] obj_array24 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array24);
        fixedOrderComparator25.setUnknownObjectBehavior(0);
        boolean b29 = fixedOrderComparator25.add((java.lang.Object) 1.0f);
        int i30 = fixedOrderComparator25.getUnknownObjectBehavior();
        int i31 = fixedOrderComparator12.compare(obj17, (java.lang.Object) i30);
        int i32 = fixedOrderComparator12.getUnknownObjectBehavior();
        int i33 = fixedOrderComparator12.getUnknownObjectBehavior();
        int i35 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 10.0d);
        int i36 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i37 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b38 = fixedOrderComparator0.isLocked();
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertNotNull(obj_array24);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertTrue(i31 == (-1));
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(i33 == 0);
        org.junit.Assert.assertTrue(i35 == 0);
        org.junit.Assert.assertTrue(i36 == 0);
        org.junit.Assert.assertTrue(i37 == 0);
        org.junit.Assert.assertTrue(b38 == true);
    }

    @Test
    public void test436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test436");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array15 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array15);
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array15);
        fixedOrderComparator17.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array26);
        int i30 = fixedOrderComparator17.compare((java.lang.Object) fixedOrderComparator28, (java.lang.Object) (-1.0d));
        boolean b31 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator17);
        boolean b32 = fixedOrderComparator17.isLocked();
        int i33 = fixedOrderComparator17.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        boolean b37 = fixedOrderComparator34.isLocked();
        boolean b38 = fixedOrderComparator34.isLocked();
        java.lang.Object[] obj_array45 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array45);
        fixedOrderComparator46.setUnknownObjectBehavior(0);
        boolean b50 = fixedOrderComparator46.add((java.lang.Object) 1.0f);
        boolean b52 = fixedOrderComparator46.add((java.lang.Object) 1.0f);
        int i54 = fixedOrderComparator34.compare((java.lang.Object) fixedOrderComparator46, (java.lang.Object) 1.0d);
        fixedOrderComparator46.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array63 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator();
        int i69 = fixedOrderComparator68.getUnknownObjectBehavior();
        boolean b70 = fixedOrderComparator68.isLocked();
        fixedOrderComparator68.setUnknownObjectBehavior(0);
        int i73 = fixedOrderComparator46.compare((java.lang.Object) obj_array63, (java.lang.Object) fixedOrderComparator68);
        collections.comparators.FixedOrderComparator fixedOrderComparator74 = new collections.comparators.FixedOrderComparator(obj_array63);
        int i75 = fixedOrderComparator74.getUnknownObjectBehavior();
        try {
            boolean b76 = fixedOrderComparator17.add((java.lang.Object) i75);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array15);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertTrue(i33 == 0);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertNotNull(obj_array45);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertTrue(i54 == 0);
        org.junit.Assert.assertNotNull(obj_array63);
        org.junit.Assert.assertTrue(i69 == 2);
        org.junit.Assert.assertTrue(b70 == false);
        org.junit.Assert.assertTrue(i73 == 0);
        org.junit.Assert.assertTrue(i75 == 2);
    }

    @Test
    public void test437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test437");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array19 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator21.setUnknownObjectBehavior((int) (short) 0);
        int i24 = fixedOrderComparator7.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator21);
        int i25 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array32 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array32);
        fixedOrderComparator34.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator34.setUnknownObjectBehavior(2);
        int i39 = fixedOrderComparator34.getUnknownObjectBehavior();
        java.lang.Object[] obj_array46 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array46);
        boolean b54 = fixedOrderComparator34.add((java.lang.Object) obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator();
        int i56 = fixedOrderComparator55.getUnknownObjectBehavior();
        java.lang.Object[] obj_array63 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array63);
        boolean b68 = fixedOrderComparator55.add((java.lang.Object) fixedOrderComparator67);
        fixedOrderComparator55.setUnknownObjectBehavior(0);
        try {
            boolean b71 = fixedOrderComparator7.addAsEqual((java.lang.Object) fixedOrderComparator34, (java.lang.Object) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertTrue(i39 == 2);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertTrue(b54 == true);
        org.junit.Assert.assertTrue(i56 == 2);
        org.junit.Assert.assertNotNull(obj_array63);
        org.junit.Assert.assertTrue(b68 == true);
    }

    @Test
    public void test438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test438");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array19 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator21.setUnknownObjectBehavior((int) (short) 0);
        int i24 = fixedOrderComparator7.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator();
        int i26 = fixedOrderComparator25.getUnknownObjectBehavior();
        java.lang.Object[] obj_array33 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array33);
        boolean b38 = fixedOrderComparator25.add((java.lang.Object) fixedOrderComparator37);
        boolean b39 = fixedOrderComparator37.isLocked();
        boolean b40 = fixedOrderComparator37.isLocked();
        boolean b41 = fixedOrderComparator21.add((java.lang.Object) fixedOrderComparator37);
        boolean b42 = fixedOrderComparator21.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertTrue(i26 == 2);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertTrue(b42 == false);
    }

    @Test
    public void test439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test439");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj18 = null;
        int i19 = fixedOrderComparator10.compare((java.lang.Object) 1.0d, obj18);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        int i32 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b34 = fixedOrderComparator28.addAsEqual((java.lang.Object) i32, (java.lang.Object) (short) 1);
        int i35 = fixedOrderComparator28.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        boolean b44 = fixedOrderComparator43.isLocked();
        boolean b45 = fixedOrderComparator28.add((java.lang.Object) fixedOrderComparator43);
        int i47 = fixedOrderComparator10.compare((java.lang.Object) fixedOrderComparator28, (java.lang.Object) 1L);
        boolean b48 = fixedOrderComparator10.isLocked();
        int i49 = fixedOrderComparator10.getUnknownObjectBehavior();
        boolean b50 = fixedOrderComparator10.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertTrue(b50 == true);
    }

    @Test
    public void test440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test440");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i28 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b29 = fixedOrderComparator7.isLocked();
        int i30 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b31 = fixedOrderComparator7.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertTrue(b31 == true);
    }

    @Test
    public void test441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test441");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        java.lang.Object[] obj_array12 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array12);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array12);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        fixedOrderComparator23.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array32 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array32);
        int i36 = fixedOrderComparator23.compare((java.lang.Object) fixedOrderComparator34, (java.lang.Object) (-1.0d));
        boolean b37 = fixedOrderComparator14.add((java.lang.Object) fixedOrderComparator23);
        boolean b38 = fixedOrderComparator23.isLocked();
        boolean b39 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator23);
        boolean b40 = fixedOrderComparator23.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        boolean b44 = fixedOrderComparator41.isLocked();
        boolean b45 = fixedOrderComparator41.isLocked();
        java.lang.Object[] obj_array52 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array52);
        fixedOrderComparator53.setUnknownObjectBehavior(0);
        boolean b57 = fixedOrderComparator53.add((java.lang.Object) 1.0f);
        boolean b59 = fixedOrderComparator53.add((java.lang.Object) 1.0f);
        int i61 = fixedOrderComparator41.compare((java.lang.Object) fixedOrderComparator53, (java.lang.Object) 1.0d);
        int i62 = fixedOrderComparator41.getUnknownObjectBehavior();
        try {
            boolean b63 = fixedOrderComparator23.add((java.lang.Object) fixedOrderComparator41);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertNotNull(obj_array12);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertTrue(i36 == 0);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertTrue(b45 == false);
        org.junit.Assert.assertNotNull(obj_array52);
        org.junit.Assert.assertTrue(b57 == true);
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertTrue(i61 == 0);
        org.junit.Assert.assertTrue(i62 == 0);
    }

    @Test
    public void test442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test442");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        boolean b21 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array28 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator31.setUnknownObjectBehavior(0);
        int i34 = fixedOrderComparator31.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator30.addAsEqual((java.lang.Object) i34, (java.lang.Object) (short) 1);
        int i37 = fixedOrderComparator30.getUnknownObjectBehavior();
        java.lang.Object[] obj_array44 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array44);
        boolean b46 = fixedOrderComparator45.isLocked();
        boolean b47 = fixedOrderComparator30.add((java.lang.Object) fixedOrderComparator45);
        int i48 = fixedOrderComparator30.getUnknownObjectBehavior();
        java.lang.Object[] obj_array55 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        fixedOrderComparator56.setUnknownObjectBehavior(0);
        boolean b60 = fixedOrderComparator56.add((java.lang.Object) 1.0f);
        int i61 = fixedOrderComparator56.getUnknownObjectBehavior();
        boolean b62 = fixedOrderComparator56.isLocked();
        int i63 = fixedOrderComparator0.compare((java.lang.Object) i48, (java.lang.Object) fixedOrderComparator56);
        boolean b64 = fixedOrderComparator0.isLocked();
        boolean b65 = fixedOrderComparator0.isLocked();
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(i34 == 0);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(i37 == 2);
        org.junit.Assert.assertNotNull(obj_array44);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertTrue(i48 == 2);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertTrue(i61 == 0);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertTrue(i63 == 0);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue(b65 == true);
    }

    @Test
    public void test443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test443");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        fixedOrderComparator19.setUnknownObjectBehavior((int) (short) 0);
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        java.lang.Object obj24 = null;
        boolean b25 = fixedOrderComparator19.addAsEqual((java.lang.Object) 10.0f, obj24);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator();
        int i27 = fixedOrderComparator26.getUnknownObjectBehavior();
        java.lang.Object[] obj_array34 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array34);
        boolean b39 = fixedOrderComparator26.add((java.lang.Object) fixedOrderComparator38);
        fixedOrderComparator26.setUnknownObjectBehavior(0);
        boolean b42 = fixedOrderComparator26.isLocked();
        int i44 = fixedOrderComparator19.compare((java.lang.Object) fixedOrderComparator26, (java.lang.Object) 2);
        boolean b45 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator26);
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator46.setUnknownObjectBehavior(0);
        int i49 = fixedOrderComparator46.getUnknownObjectBehavior();
        fixedOrderComparator46.setUnknownObjectBehavior((int) (byte) 0);
        fixedOrderComparator46.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array60 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array60);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array60);
        boolean b63 = fixedOrderComparator62.isLocked();
        boolean b64 = fixedOrderComparator62.isLocked();
        int i65 = fixedOrderComparator26.compare((java.lang.Object) 1, (java.lang.Object) b64);
        try {
            fixedOrderComparator26.setUnknownObjectBehavior(0);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(i27 == 2);
        org.junit.Assert.assertNotNull(obj_array34);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertNotNull(obj_array60);
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertTrue(b64 == false);
        org.junit.Assert.assertTrue(i65 == 0);
    }

    @Test
    public void test444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test444");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i8 = fixedOrderComparator7.getUnknownObjectBehavior();
        try {
            fixedOrderComparator7.setUnknownObjectBehavior((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i8 == 2);
    }

    @Test
    public void test445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test445");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        int i11 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object obj13 = null;
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) 10.0f, obj13);
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator();
        int i16 = fixedOrderComparator15.getUnknownObjectBehavior();
        java.lang.Object[] obj_array23 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array23);
        boolean b28 = fixedOrderComparator15.add((java.lang.Object) fixedOrderComparator27);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b31 = fixedOrderComparator15.isLocked();
        int i33 = fixedOrderComparator8.compare((java.lang.Object) fixedOrderComparator15, (java.lang.Object) 2);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator();
        int i35 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator15.add((java.lang.Object) i35);
        boolean b37 = fixedOrderComparator15.isLocked();
        java.lang.Object[] obj_array44 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array44);
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array44);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array44);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array44);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array44);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array44);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array44);
        int i52 = fixedOrderComparator51.getUnknownObjectBehavior();
        int i53 = fixedOrderComparator51.getUnknownObjectBehavior();
        fixedOrderComparator51.setUnknownObjectBehavior((int) (byte) 0);
        java.lang.Object[] obj_array62 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array62);
        fixedOrderComparator63.setUnknownObjectBehavior(0);
        boolean b67 = fixedOrderComparator63.add((java.lang.Object) 1.0f);
        java.lang.Object obj68 = null;
        java.lang.Object[] obj_array75 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array75);
        fixedOrderComparator76.setUnknownObjectBehavior(0);
        boolean b80 = fixedOrderComparator76.add((java.lang.Object) 1.0f);
        int i81 = fixedOrderComparator76.getUnknownObjectBehavior();
        int i82 = fixedOrderComparator63.compare(obj68, (java.lang.Object) i81);
        int i83 = fixedOrderComparator63.getUnknownObjectBehavior();
        int i84 = fixedOrderComparator63.getUnknownObjectBehavior();
        boolean b85 = fixedOrderComparator63.isLocked();
        int i86 = fixedOrderComparator63.getUnknownObjectBehavior();
        try {
            boolean b87 = fixedOrderComparator15.addAsEqual((java.lang.Object) (byte) 0, (java.lang.Object) i86);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i16 == 2);
        org.junit.Assert.assertNotNull(obj_array23);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertTrue(i33 == 0);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertNotNull(obj_array44);
        org.junit.Assert.assertTrue(i52 == 2);
        org.junit.Assert.assertTrue(i53 == 2);
        org.junit.Assert.assertNotNull(obj_array62);
        org.junit.Assert.assertTrue(b67 == true);
        org.junit.Assert.assertNotNull(obj_array75);
        org.junit.Assert.assertTrue(b80 == true);
        org.junit.Assert.assertTrue(i81 == 0);
        org.junit.Assert.assertTrue(i82 == (-1));
        org.junit.Assert.assertTrue(i83 == 0);
        org.junit.Assert.assertTrue(i84 == 0);
        org.junit.Assert.assertTrue(b85 == true);
        org.junit.Assert.assertTrue(i86 == 0);
    }

    @Test
    public void test446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test446");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 1);
        fixedOrderComparator0.setUnknownObjectBehavior((int) (short) 1);
        org.junit.Assert.assertTrue(i3 == 0);
    }

    @Test
    public void test447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test447");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        boolean b1 = fixedOrderComparator0.isLocked();
        boolean b3 = fixedOrderComparator0.add((java.lang.Object) 10.0d);
        java.lang.Object obj4 = null;
        boolean b5 = fixedOrderComparator0.add(obj4);
        try {
            fixedOrderComparator0.setUnknownObjectBehavior((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b1 == false);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue(b5 == true);
    }

    @Test
    public void test448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test448");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        int i21 = fixedOrderComparator8.compare((java.lang.Object) fixedOrderComparator19, (java.lang.Object) (-1.0d));
        boolean b22 = fixedOrderComparator19.isLocked();
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        boolean b32 = fixedOrderComparator30.add((java.lang.Object) (-1.0f));
        fixedOrderComparator30.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array42 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        fixedOrderComparator44.setUnknownObjectBehavior((int) (short) 0);
        int i47 = fixedOrderComparator30.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator44);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        java.lang.Object[] obj_array62 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array62);
        fixedOrderComparator63.setUnknownObjectBehavior(0);
        boolean b66 = fixedOrderComparator55.add((java.lang.Object) 0);
        fixedOrderComparator55.setUnknownObjectBehavior((int) (short) 0);
        boolean b69 = fixedOrderComparator55.isLocked();
        boolean b70 = fixedOrderComparator19.addAsEqual((java.lang.Object) i47, (java.lang.Object) b69);
        fixedOrderComparator19.setUnknownObjectBehavior((int) (byte) 0);
        int i73 = fixedOrderComparator19.getUnknownObjectBehavior();
        try {
            fixedOrderComparator19.setUnknownObjectBehavior((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertNotNull(obj_array62);
        org.junit.Assert.assertTrue(b66 == false);
        org.junit.Assert.assertTrue(b69 == false);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertTrue(i73 == 0);
    }

    @Test
    public void test449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test449");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        int i46 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Object obj48 = null;
        int i49 = fixedOrderComparator7.compare(obj47, obj48);
        try {
            fixedOrderComparator7.setUnknownObjectBehavior(0);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertTrue(i49 == 0);
    }

    @Test
    public void test450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test450");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { fixedOrderComparator0, obj_array22 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator();
        int i36 = fixedOrderComparator35.getUnknownObjectBehavior();
        boolean b37 = fixedOrderComparator35.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator();
        int i39 = fixedOrderComparator38.getUnknownObjectBehavior();
        boolean b40 = fixedOrderComparator38.isLocked();
        boolean b41 = fixedOrderComparator35.add((java.lang.Object) b40);
        boolean b42 = fixedOrderComparator35.isLocked();
        int i43 = fixedOrderComparator35.getUnknownObjectBehavior();
        int i44 = fixedOrderComparator35.getUnknownObjectBehavior();
        boolean b45 = fixedOrderComparator35.isLocked();
        boolean b46 = fixedOrderComparator35.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator();
        int i48 = fixedOrderComparator47.getUnknownObjectBehavior();
        java.lang.Object[] obj_array55 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array55);
        boolean b60 = fixedOrderComparator47.add((java.lang.Object) fixedOrderComparator59);
        boolean b61 = fixedOrderComparator59.isLocked();
        try {
            int i62 = fixedOrderComparator34.compare((java.lang.Object) fixedOrderComparator35, (java.lang.Object) fixedOrderComparator59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i36 == 2);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(i39 == 2);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertTrue(i43 == 2);
        org.junit.Assert.assertTrue(i44 == 2);
        org.junit.Assert.assertTrue(b45 == false);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue(i48 == 2);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertTrue(b61 == false);
    }

    @Test
    public void test451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test451");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        fixedOrderComparator11.setUnknownObjectBehavior(0);
        boolean b15 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        boolean b17 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator();
        boolean b19 = fixedOrderComparator18.isLocked();
        boolean b21 = fixedOrderComparator18.add((java.lang.Object) 10.0d);
        int i22 = fixedOrderComparator0.compare((java.lang.Object) b17, (java.lang.Object) fixedOrderComparator18);
        boolean b23 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator();
        int i34 = fixedOrderComparator33.getUnknownObjectBehavior();
        java.lang.Object[] obj_array41 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array41);
        boolean b46 = fixedOrderComparator33.add((java.lang.Object) fixedOrderComparator45);
        fixedOrderComparator33.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array55 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array55);
        int i60 = fixedOrderComparator59.getUnknownObjectBehavior();
        int i61 = fixedOrderComparator59.getUnknownObjectBehavior();
        boolean b62 = fixedOrderComparator59.isLocked();
        int i63 = fixedOrderComparator59.getUnknownObjectBehavior();
        int i65 = fixedOrderComparator33.compare((java.lang.Object) fixedOrderComparator59, (java.lang.Object) 1L);
        int i66 = fixedOrderComparator0.compare((java.lang.Object) obj_array30, (java.lang.Object) i65);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array30);
        boolean b68 = fixedOrderComparator67.isLocked();
        java.lang.Object[] obj_array75 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array75);
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array75);
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator(obj_array75);
        boolean b79 = fixedOrderComparator67.add((java.lang.Object) obj_array75);
        java.lang.Object obj80 = null;
        java.lang.Object[] obj_array81 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array81);
        java.lang.Object[] obj_array83 = new java.lang.Object[] { fixedOrderComparator82 };
        collections.comparators.FixedOrderComparator fixedOrderComparator84 = new collections.comparators.FixedOrderComparator(obj_array83);
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array83);
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array83);
        collections.comparators.FixedOrderComparator fixedOrderComparator87 = new collections.comparators.FixedOrderComparator(obj_array83);
        collections.comparators.FixedOrderComparator fixedOrderComparator88 = new collections.comparators.FixedOrderComparator(obj_array83);
        collections.comparators.FixedOrderComparator fixedOrderComparator89 = new collections.comparators.FixedOrderComparator(obj_array83);
        try {
            int i90 = fixedOrderComparator67.compare(obj80, (java.lang.Object) fixedOrderComparator89);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(i34 == 2);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(i60 == 2);
        org.junit.Assert.assertTrue(i61 == 2);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertTrue(i63 == 2);
        org.junit.Assert.assertTrue(i65 == 0);
        org.junit.Assert.assertTrue(i66 == 0);
        org.junit.Assert.assertTrue(b68 == false);
        org.junit.Assert.assertNotNull(obj_array75);
        org.junit.Assert.assertTrue(b79 == true);
        org.junit.Assert.assertNotNull(obj_array81);
        org.junit.Assert.assertNotNull(obj_array83);
    }

    @Test
    public void test452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test452");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        fixedOrderComparator11.setUnknownObjectBehavior(0);
        boolean b15 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        boolean b17 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator();
        boolean b19 = fixedOrderComparator18.isLocked();
        boolean b21 = fixedOrderComparator18.add((java.lang.Object) 10.0d);
        int i22 = fixedOrderComparator0.compare((java.lang.Object) b17, (java.lang.Object) fixedOrderComparator18);
        boolean b23 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator();
        int i34 = fixedOrderComparator33.getUnknownObjectBehavior();
        java.lang.Object[] obj_array41 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array41);
        boolean b46 = fixedOrderComparator33.add((java.lang.Object) fixedOrderComparator45);
        fixedOrderComparator33.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array55 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array55);
        int i60 = fixedOrderComparator59.getUnknownObjectBehavior();
        int i61 = fixedOrderComparator59.getUnknownObjectBehavior();
        boolean b62 = fixedOrderComparator59.isLocked();
        int i63 = fixedOrderComparator59.getUnknownObjectBehavior();
        int i65 = fixedOrderComparator33.compare((java.lang.Object) fixedOrderComparator59, (java.lang.Object) 1L);
        int i66 = fixedOrderComparator0.compare((java.lang.Object) obj_array30, (java.lang.Object) i65);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array30);
        boolean b69 = fixedOrderComparator68.isLocked();
        boolean b70 = fixedOrderComparator68.isLocked();
        try {
            fixedOrderComparator68.setUnknownObjectBehavior((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(i34 == 2);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(i60 == 2);
        org.junit.Assert.assertTrue(i61 == 2);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertTrue(i63 == 2);
        org.junit.Assert.assertTrue(i65 == 0);
        org.junit.Assert.assertTrue(i66 == 0);
        org.junit.Assert.assertTrue(b69 == false);
        org.junit.Assert.assertTrue(b70 == false);
    }

    @Test
    public void test453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test453");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        boolean b46 = fixedOrderComparator41.isLocked();
        try {
            fixedOrderComparator41.setUnknownObjectBehavior((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertTrue(b46 == false);
    }

    @Test
    public void test454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test454");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        int i5 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i6 = fixedOrderComparator0.getUnknownObjectBehavior();
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertTrue(i5 == 0);
        org.junit.Assert.assertTrue(i6 == 0);
    }

    @Test
    public void test455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test455");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b13 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b14 = fixedOrderComparator7.isLocked();
        int i15 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object obj16 = null;
        java.lang.Object obj17 = null;
        int i18 = fixedOrderComparator7.compare(obj16, obj17);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertTrue(i15 == 0);
        org.junit.Assert.assertTrue(i18 == 0);
    }

    @Test
    public void test456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test456");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array19 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator21.setUnknownObjectBehavior((int) (short) 0);
        int i24 = fixedOrderComparator7.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator21);
        int i25 = fixedOrderComparator21.getUnknownObjectBehavior();
        fixedOrderComparator21.setUnknownObjectBehavior(1);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator();
        int i29 = fixedOrderComparator28.getUnknownObjectBehavior();
        boolean b30 = fixedOrderComparator28.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator31.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        boolean b43 = fixedOrderComparator41.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator44.setUnknownObjectBehavior(0);
        int i47 = fixedOrderComparator44.getUnknownObjectBehavior();
        fixedOrderComparator44.setUnknownObjectBehavior((int) (byte) 0);
        boolean b50 = fixedOrderComparator41.add((java.lang.Object) fixedOrderComparator44);
        java.lang.Object obj52 = null;
        int i53 = fixedOrderComparator44.compare((java.lang.Object) 1.0d, obj52);
        boolean b54 = fixedOrderComparator44.isLocked();
        boolean b55 = fixedOrderComparator31.add((java.lang.Object) fixedOrderComparator44);
        boolean b56 = fixedOrderComparator44.isLocked();
        boolean b57 = fixedOrderComparator44.isLocked();
        int i58 = fixedOrderComparator44.getUnknownObjectBehavior();
        try {
            boolean b59 = fixedOrderComparator21.addAsEqual((java.lang.Object) fixedOrderComparator28, (java.lang.Object) i58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i29 == 2);
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertTrue(i53 == 0);
        org.junit.Assert.assertTrue(b54 == true);
        org.junit.Assert.assertTrue(b55 == true);
        org.junit.Assert.assertTrue(b56 == true);
        org.junit.Assert.assertTrue(b57 == true);
        org.junit.Assert.assertTrue(i58 == 0);
    }

    @Test
    public void test457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test457");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        int i46 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Object obj48 = null;
        int i49 = fixedOrderComparator7.compare(obj47, obj48);
        java.lang.Object[] obj_array56 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array56);
        java.lang.Object[] obj_array64 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array64);
        int i68 = fixedOrderComparator7.compare((java.lang.Object) obj_array56, (java.lang.Object) fixedOrderComparator67);
        boolean b69 = fixedOrderComparator67.isLocked();
        boolean b70 = fixedOrderComparator67.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertNotNull(obj_array56);
        org.junit.Assert.assertNotNull(obj_array64);
        org.junit.Assert.assertTrue(i68 == 0);
        org.junit.Assert.assertTrue(b69 == false);
        org.junit.Assert.assertTrue(b70 == false);
    }

    @Test
    public void test458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test458");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array10);
        java.lang.Object[] obj_array20 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array20);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        fixedOrderComparator31.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array40);
        int i44 = fixedOrderComparator31.compare((java.lang.Object) fixedOrderComparator42, (java.lang.Object) (-1.0d));
        boolean b45 = fixedOrderComparator22.add((java.lang.Object) fixedOrderComparator31);
        boolean b46 = fixedOrderComparator31.isLocked();
        int i47 = fixedOrderComparator31.getUnknownObjectBehavior();
        int i48 = fixedOrderComparator0.compare((java.lang.Object) obj_array10, (java.lang.Object) fixedOrderComparator31);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array10);
        java.lang.Object obj55 = null;
        java.lang.Object[] obj_array62 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array62);
        fixedOrderComparator64.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator64.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array75 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array75);
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array75);
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator78.setUnknownObjectBehavior(0);
        int i81 = fixedOrderComparator78.getUnknownObjectBehavior();
        boolean b83 = fixedOrderComparator77.addAsEqual((java.lang.Object) i81, (java.lang.Object) (short) 1);
        int i84 = fixedOrderComparator77.getUnknownObjectBehavior();
        java.lang.Object[] obj_array91 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator92 = new collections.comparators.FixedOrderComparator(obj_array91);
        boolean b93 = fixedOrderComparator92.isLocked();
        boolean b94 = fixedOrderComparator77.add((java.lang.Object) fixedOrderComparator92);
        boolean b95 = fixedOrderComparator64.add((java.lang.Object) fixedOrderComparator77);
        try {
            int i96 = fixedOrderComparator54.compare(obj55, (java.lang.Object) fixedOrderComparator77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(i48 == 0);
        org.junit.Assert.assertNotNull(obj_array62);
        org.junit.Assert.assertNotNull(obj_array75);
        org.junit.Assert.assertTrue(i81 == 0);
        org.junit.Assert.assertTrue(b83 == true);
        org.junit.Assert.assertTrue(i84 == 2);
        org.junit.Assert.assertNotNull(obj_array91);
        org.junit.Assert.assertTrue(b93 == false);
        org.junit.Assert.assertTrue(b94 == true);
        org.junit.Assert.assertTrue(b95 == true);
    }

    @Test
    public void test459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test459");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        int i11 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object obj13 = null;
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) 10.0f, obj13);
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator();
        int i16 = fixedOrderComparator15.getUnknownObjectBehavior();
        java.lang.Object[] obj_array23 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array23);
        boolean b28 = fixedOrderComparator15.add((java.lang.Object) fixedOrderComparator27);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b31 = fixedOrderComparator15.isLocked();
        int i33 = fixedOrderComparator8.compare((java.lang.Object) fixedOrderComparator15, (java.lang.Object) 2);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator();
        int i35 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator15.add((java.lang.Object) i35);
        boolean b37 = fixedOrderComparator15.isLocked();
        boolean b38 = fixedOrderComparator15.isLocked();
        java.lang.Object[] obj_array45 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array45);
        fixedOrderComparator46.setUnknownObjectBehavior(0);
        boolean b50 = fixedOrderComparator46.add((java.lang.Object) 1.0f);
        boolean b52 = fixedOrderComparator46.add((java.lang.Object) 1.0f);
        fixedOrderComparator46.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array61 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array61);
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array61);
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array61);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array61);
        int i66 = fixedOrderComparator65.getUnknownObjectBehavior();
        int i67 = fixedOrderComparator65.getUnknownObjectBehavior();
        boolean b68 = fixedOrderComparator65.isLocked();
        int i69 = fixedOrderComparator65.getUnknownObjectBehavior();
        java.lang.Object[] obj_array76 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array76);
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator(obj_array76);
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array76);
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array76);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array76);
        boolean b82 = fixedOrderComparator65.add((java.lang.Object) obj_array76);
        try {
            boolean b83 = fixedOrderComparator15.addAsEqual((java.lang.Object) 1, (java.lang.Object) b82);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i16 == 2);
        org.junit.Assert.assertNotNull(obj_array23);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertTrue(i33 == 0);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertNotNull(obj_array45);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertNotNull(obj_array61);
        org.junit.Assert.assertTrue(i66 == 2);
        org.junit.Assert.assertTrue(i67 == 2);
        org.junit.Assert.assertTrue(b68 == false);
        org.junit.Assert.assertTrue(i69 == 2);
        org.junit.Assert.assertNotNull(obj_array76);
        org.junit.Assert.assertTrue(b82 == true);
    }

    @Test
    public void test460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test460");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        fixedOrderComparator11.setUnknownObjectBehavior(0);
        boolean b15 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        boolean b17 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator();
        boolean b19 = fixedOrderComparator18.isLocked();
        boolean b21 = fixedOrderComparator18.add((java.lang.Object) 10.0d);
        int i22 = fixedOrderComparator0.compare((java.lang.Object) b17, (java.lang.Object) fixedOrderComparator18);
        boolean b23 = fixedOrderComparator0.isLocked();
        try {
            fixedOrderComparator0.setUnknownObjectBehavior((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
    }

    @Test
    public void test461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test461");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array7 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array7);
        boolean b10 = fixedOrderComparator8.add((java.lang.Object) (-1.0f));
        int i11 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object[] obj_array18 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array18);
        fixedOrderComparator20.setUnknownObjectBehavior((int) (short) 0);
        int i23 = fixedOrderComparator20.getUnknownObjectBehavior();
        boolean b24 = fixedOrderComparator8.add((java.lang.Object) i23);
        boolean b25 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator8);
        int i26 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object[] obj_array33 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        boolean b36 = fixedOrderComparator34.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator37.setUnknownObjectBehavior(0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        fixedOrderComparator37.setUnknownObjectBehavior((int) (byte) 0);
        boolean b43 = fixedOrderComparator34.add((java.lang.Object) fixedOrderComparator37);
        java.lang.Object obj45 = null;
        int i46 = fixedOrderComparator37.compare((java.lang.Object) 1.0d, obj45);
        boolean b47 = fixedOrderComparator37.isLocked();
        boolean b48 = fixedOrderComparator37.isLocked();
        try {
            boolean b50 = fixedOrderComparator8.addAsEqual((java.lang.Object) fixedOrderComparator37, (java.lang.Object) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array7);
        org.junit.Assert.assertTrue(b10 == true);
        org.junit.Assert.assertTrue(i11 == 2);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertTrue(i23 == 0);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(i26 == 2);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertTrue(b48 == true);
    }

    @Test
    public void test462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test462");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        boolean b21 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array28 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator31.setUnknownObjectBehavior(0);
        int i34 = fixedOrderComparator31.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator30.addAsEqual((java.lang.Object) i34, (java.lang.Object) (short) 1);
        int i37 = fixedOrderComparator30.getUnknownObjectBehavior();
        java.lang.Object[] obj_array44 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array44);
        boolean b46 = fixedOrderComparator45.isLocked();
        boolean b47 = fixedOrderComparator30.add((java.lang.Object) fixedOrderComparator45);
        int i48 = fixedOrderComparator30.getUnknownObjectBehavior();
        java.lang.Object[] obj_array55 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        fixedOrderComparator56.setUnknownObjectBehavior(0);
        boolean b60 = fixedOrderComparator56.add((java.lang.Object) 1.0f);
        int i61 = fixedOrderComparator56.getUnknownObjectBehavior();
        boolean b62 = fixedOrderComparator56.isLocked();
        int i63 = fixedOrderComparator0.compare((java.lang.Object) i48, (java.lang.Object) fixedOrderComparator56);
        boolean b64 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array71 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array71);
        fixedOrderComparator72.setUnknownObjectBehavior((int) (short) 1);
        try {
            boolean b75 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator72);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(i34 == 0);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(i37 == 2);
        org.junit.Assert.assertNotNull(obj_array44);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertTrue(i48 == 2);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertTrue(i61 == 0);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertTrue(i63 == 0);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertNotNull(obj_array71);
    }

    @Test
    public void test463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test463");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        boolean b11 = fixedOrderComparator8.isLocked();
        java.lang.Object[] obj_array18 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array18);
        int i22 = fixedOrderComparator21.getUnknownObjectBehavior();
        boolean b23 = fixedOrderComparator21.isLocked();
        int i24 = fixedOrderComparator21.getUnknownObjectBehavior();
        java.lang.Object[] obj_array31 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array31);
        boolean b36 = fixedOrderComparator21.add((java.lang.Object) fixedOrderComparator35);
        boolean b37 = fixedOrderComparator21.isLocked();
        int i38 = fixedOrderComparator21.getUnknownObjectBehavior();
        java.lang.Object[] obj_array45 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array45);
        fixedOrderComparator46.setUnknownObjectBehavior(0);
        boolean b50 = fixedOrderComparator46.add((java.lang.Object) 1.0f);
        java.lang.Object obj51 = null;
        java.lang.Object[] obj_array58 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array58);
        fixedOrderComparator59.setUnknownObjectBehavior(0);
        boolean b63 = fixedOrderComparator59.add((java.lang.Object) 1.0f);
        int i64 = fixedOrderComparator59.getUnknownObjectBehavior();
        int i65 = fixedOrderComparator46.compare(obj51, (java.lang.Object) i64);
        int i66 = fixedOrderComparator46.getUnknownObjectBehavior();
        boolean b67 = fixedOrderComparator46.isLocked();
        int i68 = fixedOrderComparator46.getUnknownObjectBehavior();
        int i69 = fixedOrderComparator46.getUnknownObjectBehavior();
        int i70 = fixedOrderComparator8.compare((java.lang.Object) fixedOrderComparator21, (java.lang.Object) fixedOrderComparator46);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertTrue(i22 == 2);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue(i24 == 2);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(i38 == 2);
        org.junit.Assert.assertNotNull(obj_array45);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertNotNull(obj_array58);
        org.junit.Assert.assertTrue(b63 == true);
        org.junit.Assert.assertTrue(i64 == 0);
        org.junit.Assert.assertTrue(i65 == (-1));
        org.junit.Assert.assertTrue(i66 == 0);
        org.junit.Assert.assertTrue(b67 == true);
        org.junit.Assert.assertTrue(i68 == 0);
        org.junit.Assert.assertTrue(i69 == 0);
        org.junit.Assert.assertTrue(i70 == 0);
    }

    @Test
    public void test464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test464");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator8.isLocked();
        java.lang.Object[] obj_array16 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array16);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        boolean b29 = fixedOrderComparator27.add((java.lang.Object) (-1.0f));
        fixedOrderComparator27.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array38 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array38);
        int i42 = fixedOrderComparator41.getUnknownObjectBehavior();
        boolean b43 = fixedOrderComparator41.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array51 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array51);
        boolean b54 = fixedOrderComparator52.add((java.lang.Object) (-1.0f));
        int i55 = fixedOrderComparator52.getUnknownObjectBehavior();
        java.lang.Object[] obj_array62 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array62);
        fixedOrderComparator64.setUnknownObjectBehavior((int) (short) 0);
        int i67 = fixedOrderComparator64.getUnknownObjectBehavior();
        boolean b68 = fixedOrderComparator52.add((java.lang.Object) i67);
        boolean b69 = fixedOrderComparator44.add((java.lang.Object) fixedOrderComparator52);
        int i70 = fixedOrderComparator27.compare((java.lang.Object) b43, (java.lang.Object) fixedOrderComparator44);
        java.lang.Object[] obj_array78 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array78);
        java.lang.Object[] obj_array83 = new java.lang.Object[] { fixedOrderComparator44, (byte) 10, obj_array78 };
        collections.comparators.FixedOrderComparator fixedOrderComparator84 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array78);
        boolean b86 = fixedOrderComparator19.add((java.lang.Object) fixedOrderComparator85);
        boolean b87 = fixedOrderComparator19.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator88 = new collections.comparators.FixedOrderComparator();
        boolean b89 = fixedOrderComparator88.isLocked();
        boolean b91 = fixedOrderComparator88.add((java.lang.Object) 10.0d);
        boolean b92 = fixedOrderComparator88.isLocked();
        int i93 = fixedOrderComparator88.getUnknownObjectBehavior();
        try {
            int i94 = fixedOrderComparator8.compare((java.lang.Object) fixedOrderComparator19, (java.lang.Object) fixedOrderComparator88);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertNotNull(obj_array38);
        org.junit.Assert.assertTrue(i42 == 2);
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertNotNull(obj_array51);
        org.junit.Assert.assertTrue(b54 == true);
        org.junit.Assert.assertTrue(i55 == 2);
        org.junit.Assert.assertNotNull(obj_array62);
        org.junit.Assert.assertTrue(i67 == 0);
        org.junit.Assert.assertTrue(b68 == false);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertTrue(i70 == 0);
        org.junit.Assert.assertNotNull(obj_array78);
        org.junit.Assert.assertNotNull(obj_array83);
        org.junit.Assert.assertTrue(b86 == true);
        org.junit.Assert.assertTrue(b87 == false);
        org.junit.Assert.assertTrue(b89 == false);
        org.junit.Assert.assertTrue(b91 == true);
        org.junit.Assert.assertTrue(b92 == false);
        org.junit.Assert.assertTrue(i93 == 2);
    }

    @Test
    public void test465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test465");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i10 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b11 = fixedOrderComparator9.isLocked();
        int i12 = fixedOrderComparator9.getUnknownObjectBehavior();
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array19);
        boolean b24 = fixedOrderComparator9.add((java.lang.Object) fixedOrderComparator23);
        boolean b25 = fixedOrderComparator23.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i10 == 2);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertTrue(i12 == 2);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(b25 == false);
    }

    @Test
    public void test466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test466");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { fixedOrderComparator0, obj_array22 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b39 = fixedOrderComparator37.add((java.lang.Object) (-1.0d));
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 1);
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(b39 == true);
    }

    @Test
    public void test467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test467");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        java.lang.Object[] obj_array46 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array54);
        int i58 = fixedOrderComparator57.getUnknownObjectBehavior();
        boolean b59 = fixedOrderComparator57.isLocked();
        int i60 = fixedOrderComparator41.compare((java.lang.Object) fixedOrderComparator47, (java.lang.Object) fixedOrderComparator57);
        fixedOrderComparator47.setUnknownObjectBehavior(1);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertTrue(i58 == 2);
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertTrue(i60 == 0);
    }

    @Test
    public void test468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test468");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj17 = null;
        boolean b18 = fixedOrderComparator7.add(obj17);
        java.lang.Object[] obj_array25 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array25);
        fixedOrderComparator26.setUnknownObjectBehavior(0);
        boolean b30 = fixedOrderComparator26.add((java.lang.Object) 1.0f);
        boolean b32 = fixedOrderComparator26.add((java.lang.Object) 1.0f);
        boolean b33 = fixedOrderComparator26.isLocked();
        boolean b34 = fixedOrderComparator26.isLocked();
        boolean b35 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator26);
        int i36 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b37 = fixedOrderComparator7.isLocked();
        boolean b38 = fixedOrderComparator7.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator();
        int i40 = fixedOrderComparator39.getUnknownObjectBehavior();
        boolean b41 = fixedOrderComparator39.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator();
        int i43 = fixedOrderComparator42.getUnknownObjectBehavior();
        boolean b44 = fixedOrderComparator42.isLocked();
        boolean b45 = fixedOrderComparator39.add((java.lang.Object) b44);
        boolean b46 = fixedOrderComparator39.isLocked();
        int i47 = fixedOrderComparator39.getUnknownObjectBehavior();
        java.lang.Object[] obj_array54 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array54);
        java.lang.Object[] obj_array69 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator74 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array69);
        boolean b76 = fixedOrderComparator62.add((java.lang.Object) obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array69);
        java.lang.Object[] obj_array84 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array84);
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array84);
        boolean b87 = fixedOrderComparator77.add((java.lang.Object) obj_array84);
        collections.comparators.FixedOrderComparator fixedOrderComparator88 = new collections.comparators.FixedOrderComparator(obj_array84);
        collections.comparators.FixedOrderComparator fixedOrderComparator89 = new collections.comparators.FixedOrderComparator(obj_array84);
        try {
            boolean b90 = fixedOrderComparator7.addAsEqual((java.lang.Object) fixedOrderComparator39, (java.lang.Object) fixedOrderComparator89);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertNotNull(obj_array25);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertTrue(i36 == 2);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertTrue(i40 == 2);
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertTrue(i43 == 2);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue(i47 == 2);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertNotNull(obj_array69);
        org.junit.Assert.assertTrue(b76 == true);
        org.junit.Assert.assertNotNull(obj_array84);
        org.junit.Assert.assertTrue(b87 == true);
    }

    @Test
    public void test469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test469");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        boolean b21 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array28 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator31.setUnknownObjectBehavior(0);
        int i34 = fixedOrderComparator31.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator30.addAsEqual((java.lang.Object) i34, (java.lang.Object) (short) 1);
        int i37 = fixedOrderComparator30.getUnknownObjectBehavior();
        java.lang.Object[] obj_array44 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array44);
        boolean b46 = fixedOrderComparator45.isLocked();
        boolean b47 = fixedOrderComparator30.add((java.lang.Object) fixedOrderComparator45);
        int i48 = fixedOrderComparator30.getUnknownObjectBehavior();
        java.lang.Object[] obj_array55 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        fixedOrderComparator56.setUnknownObjectBehavior(0);
        boolean b60 = fixedOrderComparator56.add((java.lang.Object) 1.0f);
        int i61 = fixedOrderComparator56.getUnknownObjectBehavior();
        boolean b62 = fixedOrderComparator56.isLocked();
        int i63 = fixedOrderComparator0.compare((java.lang.Object) i48, (java.lang.Object) fixedOrderComparator56);
        try {
            fixedOrderComparator0.setUnknownObjectBehavior(0);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(i34 == 0);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(i37 == 2);
        org.junit.Assert.assertNotNull(obj_array44);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertTrue(i48 == 2);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertTrue(i61 == 0);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertTrue(i63 == 0);
    }

    @Test
    public void test470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test470");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b12 = fixedOrderComparator10.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        boolean b19 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object obj21 = null;
        int i22 = fixedOrderComparator13.compare((java.lang.Object) 1.0d, obj21);
        boolean b23 = fixedOrderComparator13.isLocked();
        boolean b24 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object[] obj_array31 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array31);
        fixedOrderComparator33.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        int i46 = fixedOrderComparator33.compare((java.lang.Object) fixedOrderComparator44, (java.lang.Object) (-1.0d));
        boolean b47 = fixedOrderComparator44.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator48.setUnknownObjectBehavior(0);
        boolean b51 = fixedOrderComparator48.isLocked();
        java.lang.Object[] obj_array58 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array58);
        fixedOrderComparator59.setUnknownObjectBehavior(0);
        boolean b63 = fixedOrderComparator59.add((java.lang.Object) 1.0f);
        boolean b65 = fixedOrderComparator59.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator();
        boolean b67 = fixedOrderComparator66.isLocked();
        boolean b69 = fixedOrderComparator66.add((java.lang.Object) 10.0d);
        int i70 = fixedOrderComparator48.compare((java.lang.Object) b65, (java.lang.Object) fixedOrderComparator66);
        boolean b71 = fixedOrderComparator48.isLocked();
        int i72 = fixedOrderComparator0.compare((java.lang.Object) b47, (java.lang.Object) fixedOrderComparator48);
        try {
            boolean b74 = fixedOrderComparator48.add((java.lang.Object) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertTrue(b47 == false);
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertNotNull(obj_array58);
        org.junit.Assert.assertTrue(b63 == true);
        org.junit.Assert.assertTrue(b65 == false);
        org.junit.Assert.assertTrue(b67 == false);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertTrue(i70 == 0);
        org.junit.Assert.assertTrue(b71 == true);
        org.junit.Assert.assertTrue(i72 == 0);
    }

    @Test
    public void test471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test471");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator();
        int i35 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator34.isLocked();
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        int i39 = fixedOrderComparator12.compare((java.lang.Object) obj_array29, (java.lang.Object) fixedOrderComparator34);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array29);
        java.lang.Object[] obj_array49 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array49);
        fixedOrderComparator50.setUnknownObjectBehavior(0);
        boolean b54 = fixedOrderComparator50.add((java.lang.Object) 1.0f);
        java.lang.Object obj55 = null;
        java.lang.Object[] obj_array62 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array62);
        fixedOrderComparator63.setUnknownObjectBehavior(0);
        boolean b67 = fixedOrderComparator63.add((java.lang.Object) 1.0f);
        int i68 = fixedOrderComparator63.getUnknownObjectBehavior();
        int i69 = fixedOrderComparator50.compare(obj55, (java.lang.Object) i68);
        boolean b70 = fixedOrderComparator50.isLocked();
        java.lang.Object[] obj_array71 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array71);
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator(obj_array71);
        try {
            boolean b74 = fixedOrderComparator42.addAsEqual((java.lang.Object) b70, (java.lang.Object) obj_array71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(i39 == 0);
        org.junit.Assert.assertNotNull(obj_array49);
        org.junit.Assert.assertTrue(b54 == true);
        org.junit.Assert.assertNotNull(obj_array62);
        org.junit.Assert.assertTrue(b67 == true);
        org.junit.Assert.assertTrue(i68 == 0);
        org.junit.Assert.assertTrue(i69 == (-1));
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertNotNull(obj_array71);
    }

    @Test
    public void test472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test472");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        boolean b11 = fixedOrderComparator8.isLocked();
        int i12 = fixedOrderComparator8.getUnknownObjectBehavior();
        int i13 = fixedOrderComparator8.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(i13 == 0);
    }

    @Test
    public void test473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test473");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array18 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        fixedOrderComparator19.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array28 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator31.setUnknownObjectBehavior(0);
        int i34 = fixedOrderComparator31.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator30.addAsEqual((java.lang.Object) i34, (java.lang.Object) (short) 1);
        int i38 = fixedOrderComparator19.compare((java.lang.Object) fixedOrderComparator30, (java.lang.Object) '#');
        java.lang.Object[] obj_array45 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array45);
        boolean b48 = fixedOrderComparator46.add((java.lang.Object) (-1.0f));
        fixedOrderComparator46.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array57 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array57);
        int i61 = fixedOrderComparator60.getUnknownObjectBehavior();
        boolean b62 = fixedOrderComparator60.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array70 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array70);
        boolean b73 = fixedOrderComparator71.add((java.lang.Object) (-1.0f));
        int i74 = fixedOrderComparator71.getUnknownObjectBehavior();
        java.lang.Object[] obj_array81 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array81);
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator(obj_array81);
        fixedOrderComparator83.setUnknownObjectBehavior((int) (short) 0);
        int i86 = fixedOrderComparator83.getUnknownObjectBehavior();
        boolean b87 = fixedOrderComparator71.add((java.lang.Object) i86);
        boolean b88 = fixedOrderComparator63.add((java.lang.Object) fixedOrderComparator71);
        int i89 = fixedOrderComparator46.compare((java.lang.Object) b62, (java.lang.Object) fixedOrderComparator63);
        int i90 = fixedOrderComparator7.compare((java.lang.Object) '#', (java.lang.Object) i89);
        int i91 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i92 = fixedOrderComparator7.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(i34 == 0);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(i38 == 0);
        org.junit.Assert.assertNotNull(obj_array45);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertNotNull(obj_array57);
        org.junit.Assert.assertTrue(i61 == 2);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertNotNull(obj_array70);
        org.junit.Assert.assertTrue(b73 == true);
        org.junit.Assert.assertTrue(i74 == 2);
        org.junit.Assert.assertNotNull(obj_array81);
        org.junit.Assert.assertTrue(i86 == 0);
        org.junit.Assert.assertTrue(b87 == false);
        org.junit.Assert.assertTrue(b88 == true);
        org.junit.Assert.assertTrue(i89 == 0);
        org.junit.Assert.assertTrue(i90 == (-1));
        org.junit.Assert.assertTrue(i91 == 0);
        org.junit.Assert.assertTrue(i92 == 0);
    }

    @Test
    public void test474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test474");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator19.setUnknownObjectBehavior(0);
        boolean b22 = fixedOrderComparator19.isLocked();
        boolean b23 = fixedOrderComparator19.isLocked();
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        fixedOrderComparator31.setUnknownObjectBehavior(0);
        boolean b35 = fixedOrderComparator31.add((java.lang.Object) 1.0f);
        boolean b37 = fixedOrderComparator31.add((java.lang.Object) 1.0f);
        int i39 = fixedOrderComparator19.compare((java.lang.Object) fixedOrderComparator31, (java.lang.Object) 1.0d);
        int i40 = fixedOrderComparator19.getUnknownObjectBehavior();
        boolean b41 = fixedOrderComparator19.isLocked();
        boolean b42 = fixedOrderComparator19.isLocked();
        boolean b43 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator19);
        java.lang.Object[] obj_array44 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array44);
        java.lang.Object[] obj_array46 = new java.lang.Object[] { fixedOrderComparator45 };
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        try {
            boolean b48 = fixedOrderComparator19.add((java.lang.Object) obj_array46);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(i39 == 0);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertNotNull(obj_array44);
        org.junit.Assert.assertNotNull(obj_array46);
    }

    @Test
    public void test475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test475");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator9.setUnknownObjectBehavior(0);
        int i12 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) i12, (java.lang.Object) (short) 1);
        int i15 = fixedOrderComparator8.getUnknownObjectBehavior();
        fixedOrderComparator8.setUnknownObjectBehavior((int) (byte) 0);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator18.setUnknownObjectBehavior(0);
        boolean b21 = fixedOrderComparator18.isLocked();
        java.lang.Object[] obj_array28 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        boolean b33 = fixedOrderComparator29.add((java.lang.Object) 1.0f);
        boolean b35 = fixedOrderComparator29.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator();
        boolean b37 = fixedOrderComparator36.isLocked();
        boolean b39 = fixedOrderComparator36.add((java.lang.Object) 10.0d);
        int i40 = fixedOrderComparator18.compare((java.lang.Object) b35, (java.lang.Object) fixedOrderComparator36);
        java.lang.Object[] obj_array47 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array47);
        boolean b50 = fixedOrderComparator48.add((java.lang.Object) (short) 10);
        boolean b51 = fixedOrderComparator8.addAsEqual((java.lang.Object) i40, (java.lang.Object) b50);
        int i52 = fixedOrderComparator8.getUnknownObjectBehavior();
        boolean b53 = fixedOrderComparator8.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i15 == 2);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(b33 == true);
        org.junit.Assert.assertTrue(b35 == false);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertNotNull(obj_array47);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertTrue(b51 == true);
        org.junit.Assert.assertTrue(i52 == 0);
        org.junit.Assert.assertTrue(b53 == false);
    }

    @Test
    public void test476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test476");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator();
        int i35 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator34.isLocked();
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        int i39 = fixedOrderComparator12.compare((java.lang.Object) obj_array29, (java.lang.Object) fixedOrderComparator34);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array29);
        try {
            fixedOrderComparator42.setUnknownObjectBehavior((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(i39 == 0);
    }

    @Test
    public void test477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test477");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b12 = fixedOrderComparator10.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        boolean b19 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object obj21 = null;
        int i22 = fixedOrderComparator13.compare((java.lang.Object) 1.0d, obj21);
        boolean b23 = fixedOrderComparator13.isLocked();
        boolean b24 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator13);
        boolean b25 = fixedOrderComparator13.isLocked();
        boolean b26 = fixedOrderComparator13.isLocked();
        int i27 = fixedOrderComparator13.getUnknownObjectBehavior();
        int i30 = fixedOrderComparator13.compare((java.lang.Object) ' ', (java.lang.Object) 10L);
        boolean b31 = fixedOrderComparator13.isLocked();
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertTrue(b31 == true);
    }

    @Test
    public void test478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test478");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object[] obj_array23 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array23);
        fixedOrderComparator24.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array33 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator36.setUnknownObjectBehavior(0);
        int i39 = fixedOrderComparator36.getUnknownObjectBehavior();
        boolean b41 = fixedOrderComparator35.addAsEqual((java.lang.Object) i39, (java.lang.Object) (short) 1);
        int i43 = fixedOrderComparator24.compare((java.lang.Object) fixedOrderComparator35, (java.lang.Object) '#');
        int i44 = fixedOrderComparator35.getUnknownObjectBehavior();
        java.lang.Object[] obj_array51 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array51);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array51);
        fixedOrderComparator53.setUnknownObjectBehavior((int) (short) 0);
        int i56 = fixedOrderComparator53.getUnknownObjectBehavior();
        java.lang.Object obj58 = null;
        boolean b59 = fixedOrderComparator53.addAsEqual((java.lang.Object) 10.0f, obj58);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator60.setUnknownObjectBehavior(0);
        int i63 = fixedOrderComparator60.getUnknownObjectBehavior();
        fixedOrderComparator60.setUnknownObjectBehavior((int) (byte) 0);
        boolean b66 = fixedOrderComparator60.isLocked();
        int i67 = fixedOrderComparator60.getUnknownObjectBehavior();
        java.lang.Object[] obj_array74 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array74);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array74);
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array74);
        int i78 = fixedOrderComparator77.getUnknownObjectBehavior();
        int i79 = fixedOrderComparator53.compare((java.lang.Object) fixedOrderComparator60, (java.lang.Object) i78);
        try {
            int i80 = fixedOrderComparator7.compare((java.lang.Object) fixedOrderComparator35, (java.lang.Object) fixedOrderComparator60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertNotNull(obj_array23);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertTrue(i39 == 0);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertTrue(i43 == 0);
        org.junit.Assert.assertTrue(i44 == 2);
        org.junit.Assert.assertNotNull(obj_array51);
        org.junit.Assert.assertTrue(i56 == 0);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertTrue(i63 == 0);
        org.junit.Assert.assertTrue(b66 == false);
        org.junit.Assert.assertTrue(i67 == 0);
        org.junit.Assert.assertNotNull(obj_array74);
        org.junit.Assert.assertTrue(i78 == 2);
        org.junit.Assert.assertTrue(i79 == 0);
    }

    @Test
    public void test479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test479");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator9.setUnknownObjectBehavior(0);
        int i12 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) i12, (java.lang.Object) (short) 1);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b28 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator27);
        int i29 = fixedOrderComparator27.getUnknownObjectBehavior();
        boolean b30 = fixedOrderComparator27.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(i29 == 2);
        org.junit.Assert.assertTrue(b30 == false);
    }

    @Test
    public void test480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test480");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator();
        int i35 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator34.isLocked();
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        int i39 = fixedOrderComparator12.compare((java.lang.Object) obj_array29, (java.lang.Object) fixedOrderComparator34);
        int i40 = fixedOrderComparator12.getUnknownObjectBehavior();
        int i41 = fixedOrderComparator12.getUnknownObjectBehavior();
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(i39 == 0);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i41 == 0);
    }

    @Test
    public void test481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test481");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b28 = fixedOrderComparator14.add((java.lang.Object) obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array21);
        java.lang.Object[] obj_array38 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        boolean b46 = fixedOrderComparator40.addAsEqual((java.lang.Object) i44, (java.lang.Object) (short) 1);
        int i47 = fixedOrderComparator40.getUnknownObjectBehavior();
        java.lang.Object[] obj_array54 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        boolean b56 = fixedOrderComparator55.isLocked();
        boolean b57 = fixedOrderComparator40.add((java.lang.Object) fixedOrderComparator55);
        java.lang.Object[] obj_array64 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array64);
        boolean b69 = fixedOrderComparator68.isLocked();
        try {
            int i70 = fixedOrderComparator31.compare((java.lang.Object) fixedOrderComparator55, (java.lang.Object) fixedOrderComparator68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array38);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(i47 == 2);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertTrue(b56 == false);
        org.junit.Assert.assertTrue(b57 == true);
        org.junit.Assert.assertNotNull(obj_array64);
        org.junit.Assert.assertTrue(b69 == false);
    }

    @Test
    public void test482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test482");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array19 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator21.setUnknownObjectBehavior((int) (short) 0);
        int i24 = fixedOrderComparator7.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator();
        int i26 = fixedOrderComparator25.getUnknownObjectBehavior();
        java.lang.Object[] obj_array33 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array33);
        boolean b38 = fixedOrderComparator25.add((java.lang.Object) fixedOrderComparator37);
        boolean b39 = fixedOrderComparator37.isLocked();
        boolean b40 = fixedOrderComparator37.isLocked();
        boolean b41 = fixedOrderComparator21.add((java.lang.Object) fixedOrderComparator37);
        int i42 = fixedOrderComparator37.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertTrue(i26 == 2);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertTrue(i42 == 2);
    }

    @Test
    public void test483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test483");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        try {
            fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test484");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator6 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator6.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array15 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array15);
        boolean b18 = fixedOrderComparator16.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator19.setUnknownObjectBehavior(0);
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        fixedOrderComparator19.setUnknownObjectBehavior((int) (byte) 0);
        boolean b25 = fixedOrderComparator16.add((java.lang.Object) fixedOrderComparator19);
        java.lang.Object obj27 = null;
        int i28 = fixedOrderComparator19.compare((java.lang.Object) 1.0d, obj27);
        boolean b29 = fixedOrderComparator19.isLocked();
        boolean b30 = fixedOrderComparator6.add((java.lang.Object) fixedOrderComparator19);
        java.lang.Object[] obj_array37 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array37);
        fixedOrderComparator39.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array48 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array48);
        int i52 = fixedOrderComparator39.compare((java.lang.Object) fixedOrderComparator50, (java.lang.Object) (-1.0d));
        boolean b53 = fixedOrderComparator50.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator54.setUnknownObjectBehavior(0);
        boolean b57 = fixedOrderComparator54.isLocked();
        java.lang.Object[] obj_array64 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array64);
        fixedOrderComparator65.setUnknownObjectBehavior(0);
        boolean b69 = fixedOrderComparator65.add((java.lang.Object) 1.0f);
        boolean b71 = fixedOrderComparator65.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator();
        boolean b73 = fixedOrderComparator72.isLocked();
        boolean b75 = fixedOrderComparator72.add((java.lang.Object) 10.0d);
        int i76 = fixedOrderComparator54.compare((java.lang.Object) b71, (java.lang.Object) fixedOrderComparator72);
        boolean b77 = fixedOrderComparator54.isLocked();
        int i78 = fixedOrderComparator6.compare((java.lang.Object) b53, (java.lang.Object) fixedOrderComparator54);
        int i79 = fixedOrderComparator0.compare((java.lang.Object) 100.0f, (java.lang.Object) fixedOrderComparator6);
        int i80 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b81 = fixedOrderComparator0.isLocked();
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array15);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertNotNull(obj_array37);
        org.junit.Assert.assertNotNull(obj_array48);
        org.junit.Assert.assertTrue(i52 == 0);
        org.junit.Assert.assertTrue(b53 == false);
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertNotNull(obj_array64);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertTrue(b71 == false);
        org.junit.Assert.assertTrue(b73 == false);
        org.junit.Assert.assertTrue(b75 == true);
        org.junit.Assert.assertTrue(i76 == 0);
        org.junit.Assert.assertTrue(b77 == true);
        org.junit.Assert.assertTrue(i78 == 0);
        org.junit.Assert.assertTrue(i79 == 0);
        org.junit.Assert.assertTrue(i80 == 0);
        org.junit.Assert.assertTrue(b81 == true);
    }

    @Test
    public void test485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test485");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        fixedOrderComparator11.setUnknownObjectBehavior(0);
        boolean b15 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        boolean b17 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator();
        boolean b19 = fixedOrderComparator18.isLocked();
        boolean b21 = fixedOrderComparator18.add((java.lang.Object) 10.0d);
        int i22 = fixedOrderComparator0.compare((java.lang.Object) b17, (java.lang.Object) fixedOrderComparator18);
        boolean b23 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator();
        int i34 = fixedOrderComparator33.getUnknownObjectBehavior();
        java.lang.Object[] obj_array41 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array41);
        boolean b46 = fixedOrderComparator33.add((java.lang.Object) fixedOrderComparator45);
        fixedOrderComparator33.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array55 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array55);
        int i60 = fixedOrderComparator59.getUnknownObjectBehavior();
        int i61 = fixedOrderComparator59.getUnknownObjectBehavior();
        boolean b62 = fixedOrderComparator59.isLocked();
        int i63 = fixedOrderComparator59.getUnknownObjectBehavior();
        int i65 = fixedOrderComparator33.compare((java.lang.Object) fixedOrderComparator59, (java.lang.Object) 1L);
        int i66 = fixedOrderComparator0.compare((java.lang.Object) obj_array30, (java.lang.Object) i65);
        try {
            fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(i34 == 2);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(i60 == 2);
        org.junit.Assert.assertTrue(i61 == 2);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertTrue(i63 == 2);
        org.junit.Assert.assertTrue(i65 == 0);
        org.junit.Assert.assertTrue(i66 == 0);
    }

    @Test
    public void test486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test486");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b12 = fixedOrderComparator10.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        boolean b19 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object obj21 = null;
        int i22 = fixedOrderComparator13.compare((java.lang.Object) 1.0d, obj21);
        boolean b23 = fixedOrderComparator13.isLocked();
        boolean b24 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object[] obj_array31 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array31);
        fixedOrderComparator33.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        int i46 = fixedOrderComparator33.compare((java.lang.Object) fixedOrderComparator44, (java.lang.Object) (-1.0d));
        boolean b47 = fixedOrderComparator44.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator48.setUnknownObjectBehavior(0);
        boolean b51 = fixedOrderComparator48.isLocked();
        java.lang.Object[] obj_array58 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array58);
        fixedOrderComparator59.setUnknownObjectBehavior(0);
        boolean b63 = fixedOrderComparator59.add((java.lang.Object) 1.0f);
        boolean b65 = fixedOrderComparator59.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator();
        boolean b67 = fixedOrderComparator66.isLocked();
        boolean b69 = fixedOrderComparator66.add((java.lang.Object) 10.0d);
        int i70 = fixedOrderComparator48.compare((java.lang.Object) b65, (java.lang.Object) fixedOrderComparator66);
        boolean b71 = fixedOrderComparator48.isLocked();
        int i72 = fixedOrderComparator0.compare((java.lang.Object) b47, (java.lang.Object) fixedOrderComparator48);
        boolean b73 = fixedOrderComparator48.isLocked();
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertTrue(b47 == false);
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertNotNull(obj_array58);
        org.junit.Assert.assertTrue(b63 == true);
        org.junit.Assert.assertTrue(b65 == false);
        org.junit.Assert.assertTrue(b67 == false);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertTrue(i70 == 0);
        org.junit.Assert.assertTrue(b71 == true);
        org.junit.Assert.assertTrue(i72 == 0);
        org.junit.Assert.assertTrue(b73 == true);
    }

    @Test
    public void test487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test487");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array15 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array15);
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array15);
        fixedOrderComparator17.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array26);
        int i30 = fixedOrderComparator17.compare((java.lang.Object) fixedOrderComparator28, (java.lang.Object) (-1.0d));
        boolean b31 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator17);
        try {
            fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array15);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertTrue(b31 == true);
    }

    @Test
    public void test488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test488");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i15 = fixedOrderComparator14.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i15 == 2);
    }

    @Test
    public void test489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test489");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        boolean b1 = fixedOrderComparator0.isLocked();
        boolean b3 = fixedOrderComparator0.add((java.lang.Object) 10.0d);
        java.lang.Object obj4 = null;
        boolean b5 = fixedOrderComparator0.add(obj4);
        fixedOrderComparator0.setUnknownObjectBehavior(1);
        boolean b8 = fixedOrderComparator0.isLocked();
        org.junit.Assert.assertTrue(b1 == false);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue(b5 == true);
        org.junit.Assert.assertTrue(b8 == false);
    }

    @Test
    public void test490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test490");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj17 = null;
        boolean b18 = fixedOrderComparator7.add(obj17);
        java.lang.Object[] obj_array25 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array25);
        boolean b28 = fixedOrderComparator26.add((java.lang.Object) (-1.0f));
        int i29 = fixedOrderComparator26.getUnknownObjectBehavior();
        java.lang.Object[] obj_array36 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array36);
        fixedOrderComparator38.setUnknownObjectBehavior((int) (short) 0);
        int i41 = fixedOrderComparator38.getUnknownObjectBehavior();
        boolean b42 = fixedOrderComparator26.add((java.lang.Object) i41);
        int i43 = fixedOrderComparator26.getUnknownObjectBehavior();
        int i44 = fixedOrderComparator26.getUnknownObjectBehavior();
        java.lang.Object[] obj_array51 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array51);
        fixedOrderComparator52.setUnknownObjectBehavior(0);
        boolean b56 = fixedOrderComparator52.add((java.lang.Object) 1.0f);
        int i57 = fixedOrderComparator52.getUnknownObjectBehavior();
        int i58 = fixedOrderComparator52.getUnknownObjectBehavior();
        int i59 = fixedOrderComparator52.getUnknownObjectBehavior();
        try {
            boolean b60 = fixedOrderComparator7.addAsEqual((java.lang.Object) fixedOrderComparator26, (java.lang.Object) i59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertNotNull(obj_array25);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(i29 == 2);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertTrue(i41 == 0);
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertTrue(i43 == 2);
        org.junit.Assert.assertTrue(i44 == 2);
        org.junit.Assert.assertNotNull(obj_array51);
        org.junit.Assert.assertTrue(b56 == true);
        org.junit.Assert.assertTrue(i57 == 0);
        org.junit.Assert.assertTrue(i58 == 0);
        org.junit.Assert.assertTrue(i59 == 0);
    }

    @Test
    public void test491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test491");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        boolean b21 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array28 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator31.setUnknownObjectBehavior(0);
        int i34 = fixedOrderComparator31.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator30.addAsEqual((java.lang.Object) i34, (java.lang.Object) (short) 1);
        int i37 = fixedOrderComparator30.getUnknownObjectBehavior();
        java.lang.Object[] obj_array44 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array44);
        boolean b46 = fixedOrderComparator45.isLocked();
        boolean b47 = fixedOrderComparator30.add((java.lang.Object) fixedOrderComparator45);
        int i48 = fixedOrderComparator30.getUnknownObjectBehavior();
        java.lang.Object[] obj_array55 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        fixedOrderComparator56.setUnknownObjectBehavior(0);
        boolean b60 = fixedOrderComparator56.add((java.lang.Object) 1.0f);
        int i61 = fixedOrderComparator56.getUnknownObjectBehavior();
        boolean b62 = fixedOrderComparator56.isLocked();
        int i63 = fixedOrderComparator0.compare((java.lang.Object) i48, (java.lang.Object) fixedOrderComparator56);
        boolean b64 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array71 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array71);
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator(obj_array71);
        fixedOrderComparator73.setUnknownObjectBehavior((int) (short) 0);
        int i76 = fixedOrderComparator73.getUnknownObjectBehavior();
        try {
            boolean b77 = fixedOrderComparator0.add((java.lang.Object) i76);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(i34 == 0);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(i37 == 2);
        org.junit.Assert.assertNotNull(obj_array44);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertTrue(i48 == 2);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertTrue(i61 == 0);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertTrue(i63 == 0);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertNotNull(obj_array71);
        org.junit.Assert.assertTrue(i76 == 0);
    }

    @Test
    public void test492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test492");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array17 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array17);
        int i23 = fixedOrderComparator22.getUnknownObjectBehavior();
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array30);
        java.lang.Object[] obj_array41 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array41);
        fixedOrderComparator42.setUnknownObjectBehavior(0);
        boolean b46 = fixedOrderComparator42.add((java.lang.Object) 1.0f);
        boolean b48 = fixedOrderComparator42.add((java.lang.Object) 1.0f);
        boolean b49 = fixedOrderComparator42.isLocked();
        boolean b50 = fixedOrderComparator34.add((java.lang.Object) fixedOrderComparator42);
        boolean b51 = fixedOrderComparator34.isLocked();
        try {
            boolean b52 = fixedOrderComparator8.addAsEqual((java.lang.Object) i23, (java.lang.Object) fixedOrderComparator34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(i23 == 2);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertTrue(b49 == false);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertTrue(b51 == false);
    }

    @Test
    public void test493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test493");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        fixedOrderComparator19.setUnknownObjectBehavior((int) (short) 0);
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        java.lang.Object obj24 = null;
        boolean b25 = fixedOrderComparator19.addAsEqual((java.lang.Object) 10.0f, obj24);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator();
        int i27 = fixedOrderComparator26.getUnknownObjectBehavior();
        java.lang.Object[] obj_array34 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array34);
        boolean b39 = fixedOrderComparator26.add((java.lang.Object) fixedOrderComparator38);
        fixedOrderComparator26.setUnknownObjectBehavior(0);
        boolean b42 = fixedOrderComparator26.isLocked();
        int i44 = fixedOrderComparator19.compare((java.lang.Object) fixedOrderComparator26, (java.lang.Object) 2);
        boolean b45 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator26);
        java.lang.Object[] obj_array52 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array52);
        fixedOrderComparator53.setUnknownObjectBehavior(0);
        boolean b57 = fixedOrderComparator53.add((java.lang.Object) 1.0f);
        java.lang.Object obj58 = null;
        java.lang.Object[] obj_array65 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array65);
        fixedOrderComparator66.setUnknownObjectBehavior(0);
        boolean b70 = fixedOrderComparator66.add((java.lang.Object) 1.0f);
        int i71 = fixedOrderComparator66.getUnknownObjectBehavior();
        int i72 = fixedOrderComparator53.compare(obj58, (java.lang.Object) i71);
        int i73 = fixedOrderComparator53.getUnknownObjectBehavior();
        boolean b74 = fixedOrderComparator53.isLocked();
        java.lang.Object[] obj_array81 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array81);
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator(obj_array81);
        fixedOrderComparator83.setUnknownObjectBehavior((int) (short) 0);
        int i86 = fixedOrderComparator83.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator87 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator87.setUnknownObjectBehavior(0);
        int i90 = fixedOrderComparator87.getUnknownObjectBehavior();
        int i91 = fixedOrderComparator53.compare((java.lang.Object) i86, (java.lang.Object) fixedOrderComparator87);
        boolean b92 = fixedOrderComparator26.add((java.lang.Object) fixedOrderComparator87);
        int i93 = fixedOrderComparator87.getUnknownObjectBehavior();
        boolean b94 = fixedOrderComparator87.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(i27 == 2);
        org.junit.Assert.assertNotNull(obj_array34);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertNotNull(obj_array52);
        org.junit.Assert.assertTrue(b57 == true);
        org.junit.Assert.assertNotNull(obj_array65);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertTrue(i71 == 0);
        org.junit.Assert.assertTrue(i72 == (-1));
        org.junit.Assert.assertTrue(i73 == 0);
        org.junit.Assert.assertTrue(b74 == true);
        org.junit.Assert.assertNotNull(obj_array81);
        org.junit.Assert.assertTrue(i86 == 0);
        org.junit.Assert.assertTrue(i90 == 0);
        org.junit.Assert.assertTrue(i91 == 1);
        org.junit.Assert.assertTrue(b92 == true);
        org.junit.Assert.assertTrue(i93 == 0);
        org.junit.Assert.assertTrue(b94 == false);
    }

    @Test
    public void test494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test494");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        boolean b27 = fixedOrderComparator7.isLocked();
        int i28 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i29 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array36 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        fixedOrderComparator37.setUnknownObjectBehavior(0);
        boolean b41 = fixedOrderComparator37.add((java.lang.Object) 1.0f);
        int i42 = fixedOrderComparator37.getUnknownObjectBehavior();
        java.lang.Object[] obj_array49 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array49);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array49);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array49);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array49);
        java.lang.Object[] obj_array60 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array60);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array60);
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array60);
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array60);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array60);
        int i66 = fixedOrderComparator37.compare((java.lang.Object) fixedOrderComparator53, (java.lang.Object) fixedOrderComparator65);
        boolean b67 = fixedOrderComparator37.isLocked();
        int i68 = fixedOrderComparator37.getUnknownObjectBehavior();
        try {
            boolean b69 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator37);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertTrue(i29 == 0);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertTrue(i42 == 0);
        org.junit.Assert.assertNotNull(obj_array49);
        org.junit.Assert.assertNotNull(obj_array60);
        org.junit.Assert.assertTrue(i66 == 0);
        org.junit.Assert.assertTrue(b67 == true);
        org.junit.Assert.assertTrue(i68 == 0);
    }

    @Test
    public void test495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test495");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b28 = fixedOrderComparator14.add((java.lang.Object) obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array21);
        java.lang.Object[] obj_array36 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array36);
        boolean b39 = fixedOrderComparator29.add((java.lang.Object) obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array36);
        java.lang.Object obj41 = null;
        boolean b42 = fixedOrderComparator40.add(obj41);
        boolean b43 = fixedOrderComparator40.isLocked();
        fixedOrderComparator40.setUnknownObjectBehavior((int) (byte) 1);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertTrue(b43 == false);
    }

    @Test
    public void test496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test496");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array10);
        java.lang.Object[] obj_array20 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array20);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        fixedOrderComparator31.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array40);
        int i44 = fixedOrderComparator31.compare((java.lang.Object) fixedOrderComparator42, (java.lang.Object) (-1.0d));
        boolean b45 = fixedOrderComparator22.add((java.lang.Object) fixedOrderComparator31);
        boolean b46 = fixedOrderComparator31.isLocked();
        int i47 = fixedOrderComparator31.getUnknownObjectBehavior();
        int i48 = fixedOrderComparator0.compare((java.lang.Object) obj_array10, (java.lang.Object) fixedOrderComparator31);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array10);
        java.lang.Object[] obj_array56 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array56);
        fixedOrderComparator58.setUnknownObjectBehavior((int) (short) 0);
        int i61 = fixedOrderComparator58.getUnknownObjectBehavior();
        boolean b62 = fixedOrderComparator49.add((java.lang.Object) fixedOrderComparator58);
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(i48 == 0);
        org.junit.Assert.assertNotNull(obj_array56);
        org.junit.Assert.assertTrue(i61 == 0);
        org.junit.Assert.assertTrue(b62 == true);
    }

    @Test
    public void test497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test497");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator8.setUnknownObjectBehavior(2);
        int i13 = fixedOrderComparator8.getUnknownObjectBehavior();
        int i14 = fixedOrderComparator8.getUnknownObjectBehavior();
        boolean b15 = fixedOrderComparator8.isLocked();
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        fixedOrderComparator24.setUnknownObjectBehavior((int) (short) 0);
        int i27 = fixedOrderComparator24.getUnknownObjectBehavior();
        java.lang.Object obj29 = null;
        boolean b30 = fixedOrderComparator24.addAsEqual((java.lang.Object) 10.0f, obj29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator();
        int i32 = fixedOrderComparator31.getUnknownObjectBehavior();
        java.lang.Object[] obj_array39 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array39);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array39);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array39);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array39);
        boolean b44 = fixedOrderComparator31.add((java.lang.Object) fixedOrderComparator43);
        fixedOrderComparator31.setUnknownObjectBehavior(0);
        boolean b47 = fixedOrderComparator31.isLocked();
        int i49 = fixedOrderComparator24.compare((java.lang.Object) fixedOrderComparator31, (java.lang.Object) 2);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator();
        int i51 = fixedOrderComparator50.getUnknownObjectBehavior();
        boolean b52 = fixedOrderComparator31.add((java.lang.Object) i51);
        boolean b53 = fixedOrderComparator31.isLocked();
        java.lang.Object[] obj_array54 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        int i56 = fixedOrderComparator55.getUnknownObjectBehavior();
        boolean b57 = fixedOrderComparator31.add((java.lang.Object) i56);
        java.lang.Object obj58 = null;
        try {
            int i59 = fixedOrderComparator8.compare((java.lang.Object) b57, obj58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i13 == 2);
        org.junit.Assert.assertTrue(i14 == 2);
        org.junit.Assert.assertTrue(b15 == false);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue(i32 == 2);
        org.junit.Assert.assertNotNull(obj_array39);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertTrue(b47 == false);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertTrue(i51 == 2);
        org.junit.Assert.assertTrue(b52 == true);
        org.junit.Assert.assertTrue(b53 == false);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertTrue(i56 == 2);
        org.junit.Assert.assertTrue(b57 == false);
    }

    @Test
    public void test498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test498");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        fixedOrderComparator11.setUnknownObjectBehavior(0);
        boolean b15 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        boolean b17 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator();
        boolean b19 = fixedOrderComparator18.isLocked();
        boolean b21 = fixedOrderComparator18.add((java.lang.Object) 10.0d);
        int i22 = fixedOrderComparator0.compare((java.lang.Object) b17, (java.lang.Object) fixedOrderComparator18);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        fixedOrderComparator31.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array40);
        int i44 = fixedOrderComparator31.compare((java.lang.Object) fixedOrderComparator42, (java.lang.Object) (-1.0d));
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator45.setUnknownObjectBehavior(0);
        boolean b48 = fixedOrderComparator45.isLocked();
        boolean b49 = fixedOrderComparator42.add((java.lang.Object) fixedOrderComparator45);
        boolean b50 = fixedOrderComparator18.add((java.lang.Object) fixedOrderComparator42);
        int i51 = fixedOrderComparator42.getUnknownObjectBehavior();
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertTrue(i51 == 2);
    }

    @Test
    public void test499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test499");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj18 = null;
        int i19 = fixedOrderComparator10.compare((java.lang.Object) 1.0d, obj18);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        int i32 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b34 = fixedOrderComparator28.addAsEqual((java.lang.Object) i32, (java.lang.Object) (short) 1);
        int i35 = fixedOrderComparator28.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        boolean b44 = fixedOrderComparator43.isLocked();
        boolean b45 = fixedOrderComparator28.add((java.lang.Object) fixedOrderComparator43);
        int i47 = fixedOrderComparator10.compare((java.lang.Object) fixedOrderComparator28, (java.lang.Object) 1L);
        boolean b48 = fixedOrderComparator10.isLocked();
        int i49 = fixedOrderComparator10.getUnknownObjectBehavior();
        int i50 = fixedOrderComparator10.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertTrue(i50 == 0);
    }

    @Test
    public void test500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test500");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        int i21 = fixedOrderComparator8.compare((java.lang.Object) fixedOrderComparator19, (java.lang.Object) (-1.0d));
        boolean b22 = fixedOrderComparator19.isLocked();
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        boolean b32 = fixedOrderComparator30.add((java.lang.Object) (-1.0f));
        fixedOrderComparator30.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array42 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        fixedOrderComparator44.setUnknownObjectBehavior((int) (short) 0);
        int i47 = fixedOrderComparator30.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator44);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        java.lang.Object[] obj_array62 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array62);
        fixedOrderComparator63.setUnknownObjectBehavior(0);
        boolean b66 = fixedOrderComparator55.add((java.lang.Object) 0);
        fixedOrderComparator55.setUnknownObjectBehavior((int) (short) 0);
        boolean b69 = fixedOrderComparator55.isLocked();
        boolean b70 = fixedOrderComparator19.addAsEqual((java.lang.Object) i47, (java.lang.Object) b69);
        fixedOrderComparator19.setUnknownObjectBehavior((int) (byte) 0);
        int i73 = fixedOrderComparator19.getUnknownObjectBehavior();
        boolean b74 = fixedOrderComparator19.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertNotNull(obj_array62);
        org.junit.Assert.assertTrue(b66 == false);
        org.junit.Assert.assertTrue(b69 == false);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertTrue(i73 == 0);
        org.junit.Assert.assertTrue(b74 == false);
    }

    @Test
    public void test501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test501");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        boolean b12 = fixedOrderComparator7.isLocked();
        fixedOrderComparator7.setUnknownObjectBehavior(2);
        int i15 = fixedOrderComparator7.getUnknownObjectBehavior();
        try {
            fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(i15 == 2);
    }

    @Test
    public void test502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test502");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { fixedOrderComparator0, obj_array22 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array22);
        int i34 = fixedOrderComparator33.getUnknownObjectBehavior();
        try {
            fixedOrderComparator33.setUnknownObjectBehavior((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i34 == 2);
    }

    @Test
    public void test503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test503");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i13 = fixedOrderComparator12.getUnknownObjectBehavior();
        java.lang.Object[] obj_array20 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator23.setUnknownObjectBehavior(0);
        int i26 = fixedOrderComparator23.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator22.addAsEqual((java.lang.Object) i26, (java.lang.Object) (short) 1);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        int i32 = fixedOrderComparator29.getUnknownObjectBehavior();
        fixedOrderComparator29.setUnknownObjectBehavior((int) (byte) 0);
        fixedOrderComparator29.setUnknownObjectBehavior(1);
        boolean b37 = fixedOrderComparator22.add((java.lang.Object) 1);
        boolean b38 = fixedOrderComparator12.add((java.lang.Object) 1);
        java.lang.Object[] obj_array45 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array45);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array45);
        fixedOrderComparator47.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator47.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array58 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator61.setUnknownObjectBehavior(0);
        int i64 = fixedOrderComparator61.getUnknownObjectBehavior();
        boolean b66 = fixedOrderComparator60.addAsEqual((java.lang.Object) i64, (java.lang.Object) (short) 1);
        int i67 = fixedOrderComparator60.getUnknownObjectBehavior();
        java.lang.Object[] obj_array74 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array74);
        boolean b76 = fixedOrderComparator75.isLocked();
        boolean b77 = fixedOrderComparator60.add((java.lang.Object) fixedOrderComparator75);
        boolean b78 = fixedOrderComparator47.add((java.lang.Object) fixedOrderComparator60);
        boolean b79 = fixedOrderComparator12.add((java.lang.Object) fixedOrderComparator47);
        try {
            fixedOrderComparator47.setUnknownObjectBehavior((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i13 == 2);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertTrue(i26 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertNotNull(obj_array45);
        org.junit.Assert.assertNotNull(obj_array58);
        org.junit.Assert.assertTrue(i64 == 0);
        org.junit.Assert.assertTrue(b66 == true);
        org.junit.Assert.assertTrue(i67 == 2);
        org.junit.Assert.assertNotNull(obj_array74);
        org.junit.Assert.assertTrue(b76 == false);
        org.junit.Assert.assertTrue(b77 == true);
        org.junit.Assert.assertTrue(b78 == true);
        org.junit.Assert.assertTrue(b79 == true);
    }

    @Test
    public void test504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test504");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i10 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b11 = fixedOrderComparator9.isLocked();
        int i12 = fixedOrderComparator9.getUnknownObjectBehavior();
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array19);
        boolean b24 = fixedOrderComparator9.add((java.lang.Object) fixedOrderComparator23);
        boolean b25 = fixedOrderComparator9.isLocked();
        int i26 = fixedOrderComparator9.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator27.setUnknownObjectBehavior(0);
        int i30 = fixedOrderComparator27.getUnknownObjectBehavior();
        java.lang.Object[] obj_array37 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array37);
        java.lang.Object[] obj_array47 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array47);
        java.lang.Object[] obj_array56 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array56);
        fixedOrderComparator58.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array67 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array67);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array67);
        int i71 = fixedOrderComparator58.compare((java.lang.Object) fixedOrderComparator69, (java.lang.Object) (-1.0d));
        boolean b72 = fixedOrderComparator49.add((java.lang.Object) fixedOrderComparator58);
        boolean b73 = fixedOrderComparator58.isLocked();
        int i74 = fixedOrderComparator58.getUnknownObjectBehavior();
        int i75 = fixedOrderComparator27.compare((java.lang.Object) obj_array37, (java.lang.Object) fixedOrderComparator58);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array37);
        boolean b82 = fixedOrderComparator9.add((java.lang.Object) fixedOrderComparator81);
        int i83 = fixedOrderComparator81.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i10 == 2);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertTrue(i12 == 2);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertTrue(i26 == 2);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertNotNull(obj_array37);
        org.junit.Assert.assertNotNull(obj_array47);
        org.junit.Assert.assertNotNull(obj_array56);
        org.junit.Assert.assertNotNull(obj_array67);
        org.junit.Assert.assertTrue(i71 == 0);
        org.junit.Assert.assertTrue(b72 == true);
        org.junit.Assert.assertTrue(b73 == true);
        org.junit.Assert.assertTrue(i74 == 0);
        org.junit.Assert.assertTrue(i75 == 0);
        org.junit.Assert.assertTrue(b82 == true);
        org.junit.Assert.assertTrue(i83 == 2);
    }

    @Test
    public void test505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test505");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array10);
        java.lang.Object[] obj_array20 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array20);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        fixedOrderComparator31.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array40);
        int i44 = fixedOrderComparator31.compare((java.lang.Object) fixedOrderComparator42, (java.lang.Object) (-1.0d));
        boolean b45 = fixedOrderComparator22.add((java.lang.Object) fixedOrderComparator31);
        boolean b46 = fixedOrderComparator31.isLocked();
        int i47 = fixedOrderComparator31.getUnknownObjectBehavior();
        int i48 = fixedOrderComparator0.compare((java.lang.Object) obj_array10, (java.lang.Object) fixedOrderComparator31);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array10);
        java.lang.Object[] obj_array61 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array61);
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array61);
        fixedOrderComparator63.setUnknownObjectBehavior((int) (short) 0);
        int i66 = fixedOrderComparator63.getUnknownObjectBehavior();
        java.lang.Object obj68 = null;
        boolean b69 = fixedOrderComparator63.addAsEqual((java.lang.Object) 10.0f, obj68);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator();
        int i71 = fixedOrderComparator70.getUnknownObjectBehavior();
        java.lang.Object[] obj_array78 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array78);
        boolean b83 = fixedOrderComparator70.add((java.lang.Object) fixedOrderComparator82);
        fixedOrderComparator70.setUnknownObjectBehavior(0);
        boolean b86 = fixedOrderComparator70.isLocked();
        int i88 = fixedOrderComparator63.compare((java.lang.Object) fixedOrderComparator70, (java.lang.Object) 2);
        collections.comparators.FixedOrderComparator fixedOrderComparator89 = new collections.comparators.FixedOrderComparator();
        int i90 = fixedOrderComparator89.getUnknownObjectBehavior();
        boolean b91 = fixedOrderComparator70.add((java.lang.Object) i90);
        boolean b92 = fixedOrderComparator54.add((java.lang.Object) b91);
        fixedOrderComparator54.setUnknownObjectBehavior(0);
        boolean b95 = fixedOrderComparator54.isLocked();
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(i48 == 0);
        org.junit.Assert.assertNotNull(obj_array61);
        org.junit.Assert.assertTrue(i66 == 0);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertTrue(i71 == 2);
        org.junit.Assert.assertNotNull(obj_array78);
        org.junit.Assert.assertTrue(b83 == true);
        org.junit.Assert.assertTrue(b86 == false);
        org.junit.Assert.assertTrue(i88 == 0);
        org.junit.Assert.assertTrue(i90 == 2);
        org.junit.Assert.assertTrue(b91 == true);
        org.junit.Assert.assertTrue(b92 == true);
        org.junit.Assert.assertTrue(b95 == false);
    }

    @Test
    public void test506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test506");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array18 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array18);
        int i22 = fixedOrderComparator21.getUnknownObjectBehavior();
        boolean b23 = fixedOrderComparator21.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array31 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        boolean b34 = fixedOrderComparator32.add((java.lang.Object) (-1.0f));
        int i35 = fixedOrderComparator32.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        fixedOrderComparator44.setUnknownObjectBehavior((int) (short) 0);
        int i47 = fixedOrderComparator44.getUnknownObjectBehavior();
        boolean b48 = fixedOrderComparator32.add((java.lang.Object) i47);
        boolean b49 = fixedOrderComparator24.add((java.lang.Object) fixedOrderComparator32);
        int i50 = fixedOrderComparator7.compare((java.lang.Object) b23, (java.lang.Object) fixedOrderComparator24);
        java.lang.Object[] obj_array58 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array58);
        java.lang.Object[] obj_array63 = new java.lang.Object[] { fixedOrderComparator24, (byte) 10, obj_array58 };
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array58);
        boolean b69 = fixedOrderComparator68.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertTrue(i22 == 2);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(i50 == 0);
        org.junit.Assert.assertNotNull(obj_array58);
        org.junit.Assert.assertNotNull(obj_array63);
        org.junit.Assert.assertTrue(b69 == false);
    }

    @Test
    public void test507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test507");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array18 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array18);
        int i22 = fixedOrderComparator21.getUnknownObjectBehavior();
        boolean b23 = fixedOrderComparator21.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array31 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        boolean b34 = fixedOrderComparator32.add((java.lang.Object) (-1.0f));
        int i35 = fixedOrderComparator32.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        fixedOrderComparator44.setUnknownObjectBehavior((int) (short) 0);
        int i47 = fixedOrderComparator44.getUnknownObjectBehavior();
        boolean b48 = fixedOrderComparator32.add((java.lang.Object) i47);
        boolean b49 = fixedOrderComparator24.add((java.lang.Object) fixedOrderComparator32);
        int i50 = fixedOrderComparator7.compare((java.lang.Object) b23, (java.lang.Object) fixedOrderComparator24);
        int i51 = fixedOrderComparator24.getUnknownObjectBehavior();
        boolean b53 = fixedOrderComparator24.add((java.lang.Object) (-1L));
        boolean b54 = fixedOrderComparator24.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertTrue(i22 == 2);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(i50 == 0);
        org.junit.Assert.assertTrue(i51 == 2);
        org.junit.Assert.assertTrue(b53 == true);
        org.junit.Assert.assertTrue(b54 == false);
    }

    @Test
    public void test508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test508");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator9.setUnknownObjectBehavior(0);
        int i12 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) i12, (java.lang.Object) (short) 1);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b28 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator27);
        try {
            fixedOrderComparator27.setUnknownObjectBehavior((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b28 == true);
    }

    @Test
    public void test509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test509");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b6 = fixedOrderComparator0.isLocked();
        int i7 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i8 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i9 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array16 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        boolean b19 = fixedOrderComparator17.add((java.lang.Object) (-1.0f));
        int i20 = fixedOrderComparator17.getUnknownObjectBehavior();
        java.lang.Object[] obj_array27 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array27);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array27);
        fixedOrderComparator29.setUnknownObjectBehavior((int) (short) 0);
        int i32 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b33 = fixedOrderComparator17.add((java.lang.Object) i32);
        int i34 = fixedOrderComparator17.getUnknownObjectBehavior();
        int i35 = fixedOrderComparator17.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator17.isLocked();
        java.lang.Object[] obj_array43 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array43);
        boolean b46 = fixedOrderComparator45.isLocked();
        int i47 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator17, (java.lang.Object) fixedOrderComparator45);
        int i48 = fixedOrderComparator17.getUnknownObjectBehavior();
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b6 == false);
        org.junit.Assert.assertTrue(i7 == 0);
        org.junit.Assert.assertTrue(i8 == 0);
        org.junit.Assert.assertTrue(i9 == 0);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i20 == 2);
        org.junit.Assert.assertNotNull(obj_array27);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertTrue(i34 == 2);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertNotNull(obj_array43);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(i48 == 2);
    }

    @Test
    public void test510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test510");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator19.setUnknownObjectBehavior(0);
        boolean b22 = fixedOrderComparator19.isLocked();
        boolean b23 = fixedOrderComparator19.isLocked();
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        fixedOrderComparator31.setUnknownObjectBehavior(0);
        boolean b35 = fixedOrderComparator31.add((java.lang.Object) 1.0f);
        boolean b37 = fixedOrderComparator31.add((java.lang.Object) 1.0f);
        int i39 = fixedOrderComparator19.compare((java.lang.Object) fixedOrderComparator31, (java.lang.Object) 1.0d);
        int i40 = fixedOrderComparator19.getUnknownObjectBehavior();
        boolean b41 = fixedOrderComparator19.isLocked();
        boolean b42 = fixedOrderComparator19.isLocked();
        boolean b43 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator19);
        boolean b45 = fixedOrderComparator7.add((java.lang.Object) 1);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(i39 == 0);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertTrue(b45 == true);
    }

    @Test
    public void test511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test511");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator9.setUnknownObjectBehavior(0);
        int i12 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) i12, (java.lang.Object) (short) 1);
        int i15 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        fixedOrderComparator24.setUnknownObjectBehavior((int) (short) 0);
        int i27 = fixedOrderComparator24.getUnknownObjectBehavior();
        int i28 = fixedOrderComparator24.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        int i32 = fixedOrderComparator29.getUnknownObjectBehavior();
        fixedOrderComparator29.setUnknownObjectBehavior((int) (byte) 0);
        int i35 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator24.add((java.lang.Object) i35);
        boolean b37 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator24);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator();
        boolean b39 = fixedOrderComparator38.isLocked();
        boolean b41 = fixedOrderComparator38.add((java.lang.Object) 10.0d);
        java.lang.Object[] obj_array48 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array48);
        boolean b51 = fixedOrderComparator49.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator52.setUnknownObjectBehavior(0);
        int i55 = fixedOrderComparator52.getUnknownObjectBehavior();
        fixedOrderComparator52.setUnknownObjectBehavior((int) (byte) 0);
        boolean b58 = fixedOrderComparator49.add((java.lang.Object) fixedOrderComparator52);
        java.lang.Object obj59 = null;
        boolean b60 = fixedOrderComparator49.add(obj59);
        java.lang.Object[] obj_array67 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array67);
        fixedOrderComparator68.setUnknownObjectBehavior(0);
        boolean b72 = fixedOrderComparator68.add((java.lang.Object) 1.0f);
        boolean b74 = fixedOrderComparator68.add((java.lang.Object) 1.0f);
        boolean b75 = fixedOrderComparator68.isLocked();
        boolean b76 = fixedOrderComparator68.isLocked();
        boolean b77 = fixedOrderComparator49.add((java.lang.Object) fixedOrderComparator68);
        java.lang.Object[] obj_array84 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array84);
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array84);
        boolean b87 = fixedOrderComparator49.add((java.lang.Object) fixedOrderComparator86);
        int i88 = fixedOrderComparator24.compare((java.lang.Object) fixedOrderComparator38, (java.lang.Object) b87);
        int i89 = fixedOrderComparator38.getUnknownObjectBehavior();
        try {
            fixedOrderComparator38.setUnknownObjectBehavior((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i15 == 2);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(i35 == 0);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertNotNull(obj_array48);
        org.junit.Assert.assertTrue(b51 == true);
        org.junit.Assert.assertTrue(i55 == 0);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertNotNull(obj_array67);
        org.junit.Assert.assertTrue(b72 == true);
        org.junit.Assert.assertTrue(b74 == false);
        org.junit.Assert.assertTrue(b75 == false);
        org.junit.Assert.assertTrue(b76 == false);
        org.junit.Assert.assertTrue(b77 == true);
        org.junit.Assert.assertNotNull(obj_array84);
        org.junit.Assert.assertTrue(b87 == true);
        org.junit.Assert.assertTrue(i88 == 0);
        org.junit.Assert.assertTrue(i89 == 2);
    }

    @Test
    public void test512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test512");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        boolean b21 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array28 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator31.setUnknownObjectBehavior(0);
        int i34 = fixedOrderComparator31.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator30.addAsEqual((java.lang.Object) i34, (java.lang.Object) (short) 1);
        int i37 = fixedOrderComparator30.getUnknownObjectBehavior();
        java.lang.Object[] obj_array44 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array44);
        boolean b46 = fixedOrderComparator45.isLocked();
        boolean b47 = fixedOrderComparator30.add((java.lang.Object) fixedOrderComparator45);
        int i48 = fixedOrderComparator30.getUnknownObjectBehavior();
        java.lang.Object[] obj_array55 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        fixedOrderComparator56.setUnknownObjectBehavior(0);
        boolean b60 = fixedOrderComparator56.add((java.lang.Object) 1.0f);
        int i61 = fixedOrderComparator56.getUnknownObjectBehavior();
        boolean b62 = fixedOrderComparator56.isLocked();
        int i63 = fixedOrderComparator0.compare((java.lang.Object) i48, (java.lang.Object) fixedOrderComparator56);
        boolean b64 = fixedOrderComparator56.isLocked();
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(i34 == 0);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(i37 == 2);
        org.junit.Assert.assertNotNull(obj_array44);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertTrue(i48 == 2);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertTrue(i61 == 0);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertTrue(i63 == 0);
        org.junit.Assert.assertTrue(b64 == false);
    }

    @Test
    public void test513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test513");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b7 = fixedOrderComparator0.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array14);
        java.lang.Object[] obj_array17 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        boolean b19 = fixedOrderComparator16.add((java.lang.Object) obj_array17);
        boolean b20 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator16);
        fixedOrderComparator16.setUnknownObjectBehavior((int) (short) 0);
        int i23 = fixedOrderComparator16.getUnknownObjectBehavior();
        try {
            fixedOrderComparator16.setUnknownObjectBehavior((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertTrue(i23 == 0);
    }

    @Test
    public void test514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test514");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b13 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        fixedOrderComparator7.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b31 = fixedOrderComparator7.add((java.lang.Object) obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b36 = fixedOrderComparator35.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(b36 == false);
    }

    @Test
    public void test515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test515");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        try {
            fixedOrderComparator10.setUnknownObjectBehavior(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
    }

    @Test
    public void test516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test516");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        int i46 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Object obj48 = null;
        int i49 = fixedOrderComparator7.compare(obj47, obj48);
        java.lang.Object[] obj_array56 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array56);
        java.lang.Object[] obj_array64 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array64);
        int i68 = fixedOrderComparator7.compare((java.lang.Object) obj_array56, (java.lang.Object) fixedOrderComparator67);
        int i69 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b70 = fixedOrderComparator7.isLocked();
        boolean b71 = fixedOrderComparator7.isLocked();
        int i72 = fixedOrderComparator7.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertNotNull(obj_array56);
        org.junit.Assert.assertNotNull(obj_array64);
        org.junit.Assert.assertTrue(i68 == 0);
        org.junit.Assert.assertTrue(i69 == 0);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertTrue(b71 == true);
        org.junit.Assert.assertTrue(i72 == 0);
    }

    @Test
    public void test517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test517");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b12 = fixedOrderComparator11.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b12 == false);
    }

    @Test
    public void test518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test518");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator0.isLocked();
        try {
            fixedOrderComparator0.setUnknownObjectBehavior((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertTrue(b16 == false);
    }

    @Test
    public void test519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test519");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i12 = fixedOrderComparator11.getUnknownObjectBehavior();
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator26.setUnknownObjectBehavior(0);
        int i29 = fixedOrderComparator26.getUnknownObjectBehavior();
        java.lang.Object[] obj_array36 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array36);
        java.lang.Object[] obj_array46 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array46);
        java.lang.Object[] obj_array55 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array55);
        fixedOrderComparator57.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array66 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array66);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array66);
        int i70 = fixedOrderComparator57.compare((java.lang.Object) fixedOrderComparator68, (java.lang.Object) (-1.0d));
        boolean b71 = fixedOrderComparator48.add((java.lang.Object) fixedOrderComparator57);
        boolean b72 = fixedOrderComparator57.isLocked();
        int i73 = fixedOrderComparator57.getUnknownObjectBehavior();
        int i74 = fixedOrderComparator26.compare((java.lang.Object) obj_array36, (java.lang.Object) fixedOrderComparator57);
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array36);
        boolean b76 = fixedOrderComparator11.addAsEqual((java.lang.Object) i25, (java.lang.Object) fixedOrderComparator75);
        boolean b77 = fixedOrderComparator75.isLocked();
        fixedOrderComparator75.setUnknownObjectBehavior((int) (short) 0);
        boolean b80 = fixedOrderComparator75.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i12 == 2);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i29 == 0);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertNotNull(obj_array66);
        org.junit.Assert.assertTrue(i70 == 0);
        org.junit.Assert.assertTrue(b71 == true);
        org.junit.Assert.assertTrue(b72 == true);
        org.junit.Assert.assertTrue(i73 == 0);
        org.junit.Assert.assertTrue(i74 == 0);
        org.junit.Assert.assertTrue(b76 == true);
        org.junit.Assert.assertTrue(b77 == false);
        org.junit.Assert.assertTrue(b80 == false);
    }

    @Test
    public void test520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test520");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b13 = fixedOrderComparator12.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b13 == false);
    }

    @Test
    public void test521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test521");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator8.isLocked();
        java.lang.Object[] obj_array16 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        fixedOrderComparator17.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        int i32 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b34 = fixedOrderComparator28.addAsEqual((java.lang.Object) i32, (java.lang.Object) (short) 1);
        int i36 = fixedOrderComparator17.compare((java.lang.Object) fixedOrderComparator28, (java.lang.Object) '#');
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator37.setUnknownObjectBehavior(0);
        boolean b40 = fixedOrderComparator37.isLocked();
        boolean b41 = fixedOrderComparator37.isLocked();
        java.lang.Object[] obj_array48 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array48);
        fixedOrderComparator49.setUnknownObjectBehavior(0);
        boolean b53 = fixedOrderComparator49.add((java.lang.Object) 1.0f);
        boolean b55 = fixedOrderComparator49.add((java.lang.Object) 1.0f);
        int i57 = fixedOrderComparator37.compare((java.lang.Object) fixedOrderComparator49, (java.lang.Object) 1.0d);
        fixedOrderComparator49.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array66 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array66);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array66);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array66);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array66);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator();
        int i72 = fixedOrderComparator71.getUnknownObjectBehavior();
        boolean b73 = fixedOrderComparator71.isLocked();
        fixedOrderComparator71.setUnknownObjectBehavior(0);
        int i76 = fixedOrderComparator49.compare((java.lang.Object) obj_array66, (java.lang.Object) fixedOrderComparator71);
        boolean b77 = fixedOrderComparator28.add((java.lang.Object) fixedOrderComparator49);
        java.lang.Object[] obj_array84 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array84);
        boolean b87 = fixedOrderComparator85.add((java.lang.Object) (-1.0f));
        fixedOrderComparator85.setUnknownObjectBehavior((int) (short) 0);
        boolean b90 = fixedOrderComparator85.isLocked();
        fixedOrderComparator85.setUnknownObjectBehavior(2);
        try {
            int i93 = fixedOrderComparator8.compare((java.lang.Object) b77, (java.lang.Object) fixedOrderComparator85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i36 == 0);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertNotNull(obj_array48);
        org.junit.Assert.assertTrue(b53 == true);
        org.junit.Assert.assertTrue(b55 == false);
        org.junit.Assert.assertTrue(i57 == 0);
        org.junit.Assert.assertNotNull(obj_array66);
        org.junit.Assert.assertTrue(i72 == 2);
        org.junit.Assert.assertTrue(b73 == false);
        org.junit.Assert.assertTrue(i76 == 0);
        org.junit.Assert.assertTrue(b77 == true);
        org.junit.Assert.assertNotNull(obj_array84);
        org.junit.Assert.assertTrue(b87 == true);
        org.junit.Assert.assertTrue(b90 == false);
    }

    @Test
    public void test522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test522");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array9 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b11 = fixedOrderComparator8.add((java.lang.Object) obj_array9);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b13 = fixedOrderComparator12.isLocked();
        java.lang.Object[] obj_array20 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array20);
        int i23 = fixedOrderComparator22.getUnknownObjectBehavior();
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        boolean b33 = fixedOrderComparator31.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        int i37 = fixedOrderComparator34.getUnknownObjectBehavior();
        fixedOrderComparator34.setUnknownObjectBehavior((int) (byte) 0);
        boolean b40 = fixedOrderComparator31.add((java.lang.Object) fixedOrderComparator34);
        java.lang.Object obj42 = null;
        int i43 = fixedOrderComparator34.compare((java.lang.Object) 1.0d, obj42);
        java.lang.Object[] obj_array50 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator53.setUnknownObjectBehavior(0);
        int i56 = fixedOrderComparator53.getUnknownObjectBehavior();
        boolean b58 = fixedOrderComparator52.addAsEqual((java.lang.Object) i56, (java.lang.Object) (short) 1);
        int i59 = fixedOrderComparator52.getUnknownObjectBehavior();
        java.lang.Object[] obj_array66 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array66);
        boolean b68 = fixedOrderComparator67.isLocked();
        boolean b69 = fixedOrderComparator52.add((java.lang.Object) fixedOrderComparator67);
        int i71 = fixedOrderComparator34.compare((java.lang.Object) fixedOrderComparator52, (java.lang.Object) 1L);
        boolean b72 = fixedOrderComparator34.isLocked();
        try {
            int i73 = fixedOrderComparator12.compare((java.lang.Object) fixedOrderComparator22, (java.lang.Object) b72);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertTrue(i23 == 2);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(b33 == true);
        org.junit.Assert.assertTrue(i37 == 0);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertTrue(i43 == 0);
        org.junit.Assert.assertNotNull(obj_array50);
        org.junit.Assert.assertTrue(i56 == 0);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertTrue(i59 == 2);
        org.junit.Assert.assertNotNull(obj_array66);
        org.junit.Assert.assertTrue(b68 == false);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertTrue(i71 == 0);
        org.junit.Assert.assertTrue(b72 == true);
    }

    @Test
    public void test523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test523");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        int i6 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i7 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        int i10 = fixedOrderComparator9.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator();
        boolean b12 = fixedOrderComparator11.isLocked();
        boolean b14 = fixedOrderComparator11.add((java.lang.Object) 10.0d);
        boolean b15 = fixedOrderComparator11.isLocked();
        try {
            boolean b16 = fixedOrderComparator0.addAsEqual((java.lang.Object) fixedOrderComparator9, (java.lang.Object) b15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(i6 == 0);
        org.junit.Assert.assertTrue(i7 == 0);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(i10 == 2);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(b15 == false);
    }

    @Test
    public void test524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test524");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        int i10 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        fixedOrderComparator19.setUnknownObjectBehavior((int) (short) 0);
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        boolean b23 = fixedOrderComparator7.add((java.lang.Object) i22);
        int i24 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i25 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array32 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        fixedOrderComparator33.setUnknownObjectBehavior(0);
        boolean b37 = fixedOrderComparator33.add((java.lang.Object) 1.0f);
        int i38 = fixedOrderComparator33.getUnknownObjectBehavior();
        java.lang.Object[] obj_array45 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array45);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array45);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array45);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array45);
        java.lang.Object[] obj_array56 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array56);
        int i62 = fixedOrderComparator33.compare((java.lang.Object) fixedOrderComparator49, (java.lang.Object) fixedOrderComparator61);
        boolean b63 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator49);
        boolean b64 = fixedOrderComparator7.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i10 == 2);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue(i24 == 2);
        org.junit.Assert.assertTrue(i25 == 2);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertTrue(i38 == 0);
        org.junit.Assert.assertNotNull(obj_array45);
        org.junit.Assert.assertNotNull(obj_array56);
        org.junit.Assert.assertTrue(i62 == 0);
        org.junit.Assert.assertTrue(b63 == true);
        org.junit.Assert.assertTrue(b64 == false);
    }

    @Test
    public void test525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test525");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        int i10 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        fixedOrderComparator19.setUnknownObjectBehavior((int) (short) 0);
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        boolean b23 = fixedOrderComparator7.add((java.lang.Object) i22);
        int i24 = fixedOrderComparator7.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator25.setUnknownObjectBehavior(0);
        int i28 = fixedOrderComparator25.getUnknownObjectBehavior();
        fixedOrderComparator25.setUnknownObjectBehavior((int) (byte) 0);
        boolean b32 = fixedOrderComparator25.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array39 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array39);
        boolean b42 = fixedOrderComparator40.add((java.lang.Object) (-1.0f));
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator();
        int i44 = fixedOrderComparator43.getUnknownObjectBehavior();
        boolean b45 = fixedOrderComparator43.isLocked();
        fixedOrderComparator43.setUnknownObjectBehavior(0);
        int i48 = fixedOrderComparator25.compare((java.lang.Object) fixedOrderComparator40, (java.lang.Object) 0);
        java.lang.Object[] obj_array55 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        fixedOrderComparator56.setUnknownObjectBehavior(0);
        boolean b59 = fixedOrderComparator40.add((java.lang.Object) fixedOrderComparator56);
        boolean b60 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator40);
        boolean b61 = fixedOrderComparator40.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i10 == 2);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue(i24 == 2);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertNotNull(obj_array39);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertTrue(i44 == 2);
        org.junit.Assert.assertTrue(b45 == false);
        org.junit.Assert.assertTrue(i48 == 0);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertTrue(b61 == false);
    }

    @Test
    public void test526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test526");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        boolean b12 = fixedOrderComparator7.isLocked();
        fixedOrderComparator7.setUnknownObjectBehavior(2);
        int i15 = fixedOrderComparator7.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator16.setUnknownObjectBehavior(0);
        int i19 = fixedOrderComparator16.getUnknownObjectBehavior();
        fixedOrderComparator16.setUnknownObjectBehavior((int) (byte) 0);
        boolean b23 = fixedOrderComparator16.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array30);
        java.lang.Object[] obj_array33 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        boolean b35 = fixedOrderComparator32.add((java.lang.Object) obj_array33);
        boolean b36 = fixedOrderComparator16.add((java.lang.Object) fixedOrderComparator32);
        fixedOrderComparator32.setUnknownObjectBehavior((int) (short) 0);
        int i39 = fixedOrderComparator32.getUnknownObjectBehavior();
        java.lang.Object[] obj_array46 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        boolean b49 = fixedOrderComparator47.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator50.setUnknownObjectBehavior(0);
        int i53 = fixedOrderComparator50.getUnknownObjectBehavior();
        fixedOrderComparator50.setUnknownObjectBehavior((int) (byte) 0);
        boolean b56 = fixedOrderComparator47.add((java.lang.Object) fixedOrderComparator50);
        java.lang.Object obj58 = null;
        int i59 = fixedOrderComparator50.compare((java.lang.Object) 1.0d, obj58);
        java.lang.Object[] obj_array66 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array66);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array66);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator69.setUnknownObjectBehavior(0);
        int i72 = fixedOrderComparator69.getUnknownObjectBehavior();
        boolean b74 = fixedOrderComparator68.addAsEqual((java.lang.Object) i72, (java.lang.Object) (short) 1);
        int i75 = fixedOrderComparator68.getUnknownObjectBehavior();
        java.lang.Object[] obj_array82 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator(obj_array82);
        boolean b84 = fixedOrderComparator83.isLocked();
        boolean b85 = fixedOrderComparator68.add((java.lang.Object) fixedOrderComparator83);
        int i87 = fixedOrderComparator50.compare((java.lang.Object) fixedOrderComparator68, (java.lang.Object) 1L);
        boolean b88 = fixedOrderComparator50.isLocked();
        boolean b89 = fixedOrderComparator50.isLocked();
        try {
            int i90 = fixedOrderComparator7.compare((java.lang.Object) fixedOrderComparator32, (java.lang.Object) b89);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(i15 == 2);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(i39 == 0);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(i53 == 0);
        org.junit.Assert.assertTrue(b56 == true);
        org.junit.Assert.assertTrue(i59 == 0);
        org.junit.Assert.assertNotNull(obj_array66);
        org.junit.Assert.assertTrue(i72 == 0);
        org.junit.Assert.assertTrue(b74 == true);
        org.junit.Assert.assertTrue(i75 == 2);
        org.junit.Assert.assertNotNull(obj_array82);
        org.junit.Assert.assertTrue(b84 == false);
        org.junit.Assert.assertTrue(b85 == true);
        org.junit.Assert.assertTrue(i87 == 0);
        org.junit.Assert.assertTrue(b88 == true);
        org.junit.Assert.assertTrue(b89 == true);
    }

    @Test
    public void test527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test527");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        int i11 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object obj13 = null;
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) 10.0f, obj13);
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator();
        int i16 = fixedOrderComparator15.getUnknownObjectBehavior();
        java.lang.Object[] obj_array23 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array23);
        boolean b28 = fixedOrderComparator15.add((java.lang.Object) fixedOrderComparator27);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b31 = fixedOrderComparator15.isLocked();
        int i33 = fixedOrderComparator8.compare((java.lang.Object) fixedOrderComparator15, (java.lang.Object) 2);
        java.lang.Object[] obj_array34 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array34);
        java.lang.Object[] obj_array36 = new java.lang.Object[] { fixedOrderComparator35 };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array36);
        boolean b40 = fixedOrderComparator15.add((java.lang.Object) fixedOrderComparator39);
        int i41 = fixedOrderComparator15.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i16 == 2);
        org.junit.Assert.assertNotNull(obj_array23);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertTrue(i33 == 0);
        org.junit.Assert.assertNotNull(obj_array34);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertTrue(i41 == 0);
    }

    @Test
    public void test528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test528");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b13 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        fixedOrderComparator7.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b31 = fixedOrderComparator7.add((java.lang.Object) obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array22);
        java.lang.Object[] obj_array39 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array39);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array39);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator42.setUnknownObjectBehavior(0);
        int i45 = fixedOrderComparator42.getUnknownObjectBehavior();
        boolean b47 = fixedOrderComparator41.addAsEqual((java.lang.Object) i45, (java.lang.Object) (short) 1);
        int i48 = fixedOrderComparator41.getUnknownObjectBehavior();
        java.lang.Object[] obj_array55 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        boolean b57 = fixedOrderComparator56.isLocked();
        boolean b58 = fixedOrderComparator41.add((java.lang.Object) fixedOrderComparator56);
        fixedOrderComparator41.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array61 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array61);
        java.lang.Object[] obj_array63 = new java.lang.Object[] { fixedOrderComparator62 };
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array63);
        try {
            int i69 = fixedOrderComparator32.compare((java.lang.Object) fixedOrderComparator41, (java.lang.Object) obj_array63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertNotNull(obj_array39);
        org.junit.Assert.assertTrue(i45 == 0);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertTrue(i48 == 2);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertNotNull(obj_array61);
        org.junit.Assert.assertNotNull(obj_array63);
    }

    @Test
    public void test529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test529");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        int i11 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object obj13 = null;
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) 10.0f, obj13);
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator();
        int i16 = fixedOrderComparator15.getUnknownObjectBehavior();
        java.lang.Object[] obj_array23 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array23);
        boolean b28 = fixedOrderComparator15.add((java.lang.Object) fixedOrderComparator27);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b31 = fixedOrderComparator15.isLocked();
        int i33 = fixedOrderComparator8.compare((java.lang.Object) fixedOrderComparator15, (java.lang.Object) 2);
        java.lang.Object[] obj_array34 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array34);
        java.lang.Object[] obj_array36 = new java.lang.Object[] { fixedOrderComparator35 };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array36);
        boolean b40 = fixedOrderComparator15.add((java.lang.Object) fixedOrderComparator39);
        int i41 = fixedOrderComparator39.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i16 == 2);
        org.junit.Assert.assertNotNull(obj_array23);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertTrue(i33 == 0);
        org.junit.Assert.assertNotNull(obj_array34);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertTrue(i41 == 2);
    }

    @Test
    public void test530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test530");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        int i10 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        fixedOrderComparator19.setUnknownObjectBehavior((int) (short) 0);
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        boolean b23 = fixedOrderComparator7.add((java.lang.Object) i22);
        int i24 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i25 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b26 = fixedOrderComparator7.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator();
        boolean b28 = fixedOrderComparator27.isLocked();
        boolean b30 = fixedOrderComparator27.add((java.lang.Object) 10.0d);
        java.lang.Object obj31 = null;
        boolean b32 = fixedOrderComparator27.add(obj31);
        fixedOrderComparator27.setUnknownObjectBehavior(1);
        boolean b35 = fixedOrderComparator7.add((java.lang.Object) 1);
        try {
            fixedOrderComparator7.setUnknownObjectBehavior((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i10 == 2);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue(i24 == 2);
        org.junit.Assert.assertTrue(i25 == 2);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertTrue(b35 == true);
    }

    @Test
    public void test531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test531");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        boolean b10 = fixedOrderComparator7.isLocked();
        int i11 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array18 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        boolean b21 = fixedOrderComparator19.add((java.lang.Object) (-1.0f));
        fixedOrderComparator19.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array31 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array31);
        fixedOrderComparator33.setUnknownObjectBehavior((int) (short) 0);
        int i36 = fixedOrderComparator19.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator33);
        fixedOrderComparator33.setUnknownObjectBehavior((int) (byte) 0);
        try {
            boolean b40 = fixedOrderComparator7.addAsEqual((java.lang.Object) (byte) 0, (java.lang.Object) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(b10 == false);
        org.junit.Assert.assertTrue(i11 == 2);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertTrue(i36 == 0);
    }

    @Test
    public void test532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test532");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        int i6 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i7 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i8 = fixedOrderComparator0.getUnknownObjectBehavior();
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(i6 == 0);
        org.junit.Assert.assertTrue(i7 == 0);
        org.junit.Assert.assertTrue(i8 == 0);
    }

    @Test
    public void test533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test533");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj18 = null;
        int i19 = fixedOrderComparator10.compare((java.lang.Object) 1.0d, obj18);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        int i32 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b34 = fixedOrderComparator28.addAsEqual((java.lang.Object) i32, (java.lang.Object) (short) 1);
        int i35 = fixedOrderComparator28.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        boolean b44 = fixedOrderComparator43.isLocked();
        boolean b45 = fixedOrderComparator28.add((java.lang.Object) fixedOrderComparator43);
        int i47 = fixedOrderComparator10.compare((java.lang.Object) fixedOrderComparator28, (java.lang.Object) 1L);
        int i48 = fixedOrderComparator10.getUnknownObjectBehavior();
        try {
            fixedOrderComparator10.setUnknownObjectBehavior((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(i48 == 0);
    }

    @Test
    public void test534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test534");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        fixedOrderComparator0.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array14);
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array14);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array14);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array14);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array14);
        int i21 = fixedOrderComparator20.getUnknownObjectBehavior();
        java.lang.Object[] obj_array28 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        boolean b33 = fixedOrderComparator29.add((java.lang.Object) 1.0f);
        java.lang.Object obj34 = null;
        java.lang.Object[] obj_array41 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array41);
        fixedOrderComparator42.setUnknownObjectBehavior(0);
        boolean b46 = fixedOrderComparator42.add((java.lang.Object) 1.0f);
        int i47 = fixedOrderComparator42.getUnknownObjectBehavior();
        int i48 = fixedOrderComparator29.compare(obj34, (java.lang.Object) i47);
        int i49 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b50 = fixedOrderComparator29.isLocked();
        java.lang.Object[] obj_array57 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array57);
        fixedOrderComparator59.setUnknownObjectBehavior((int) (short) 0);
        int i62 = fixedOrderComparator59.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator63.setUnknownObjectBehavior(0);
        int i66 = fixedOrderComparator63.getUnknownObjectBehavior();
        int i67 = fixedOrderComparator29.compare((java.lang.Object) i62, (java.lang.Object) fixedOrderComparator63);
        java.lang.Object[] obj_array75 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array75);
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array75);
        fixedOrderComparator77.setUnknownObjectBehavior((int) (short) 0);
        int i80 = fixedOrderComparator77.getUnknownObjectBehavior();
        int i81 = fixedOrderComparator63.compare((java.lang.Object) (byte) 100, (java.lang.Object) fixedOrderComparator77);
        boolean b82 = fixedOrderComparator20.add((java.lang.Object) fixedOrderComparator77);
        java.lang.Object obj83 = null;
        int i84 = fixedOrderComparator0.compare((java.lang.Object) b82, obj83);
        try {
            fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(i21 == 2);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(b33 == true);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(i48 == (-1));
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertNotNull(obj_array57);
        org.junit.Assert.assertTrue(i62 == 0);
        org.junit.Assert.assertTrue(i66 == 0);
        org.junit.Assert.assertTrue(i67 == 1);
        org.junit.Assert.assertNotNull(obj_array75);
        org.junit.Assert.assertTrue(i80 == 0);
        org.junit.Assert.assertTrue(i81 == 0);
        org.junit.Assert.assertTrue(b82 == true);
        org.junit.Assert.assertTrue(i84 == 0);
    }

    @Test
    public void test535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test535");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array19 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator21.setUnknownObjectBehavior((int) (short) 0);
        int i24 = fixedOrderComparator7.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator21);
        fixedOrderComparator21.setUnknownObjectBehavior((int) (byte) 0);
        int i27 = fixedOrderComparator21.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertTrue(i27 == 0);
    }

    @Test
    public void test536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test536");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        boolean b3 = fixedOrderComparator0.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator4 = new collections.comparators.FixedOrderComparator();
        int i5 = fixedOrderComparator4.getUnknownObjectBehavior();
        boolean b6 = fixedOrderComparator4.isLocked();
        fixedOrderComparator4.setUnknownObjectBehavior(0);
        boolean b9 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator4);
        java.lang.Object[] obj_array16 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array16);
        java.lang.Object[] obj_array31 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array31);
        boolean b38 = fixedOrderComparator24.add((java.lang.Object) obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array31);
        boolean b41 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator40);
        java.lang.Object[] obj_array48 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array48);
        java.lang.Object[] obj_array63 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array63);
        boolean b70 = fixedOrderComparator56.add((java.lang.Object) obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array63);
        boolean b73 = fixedOrderComparator40.add((java.lang.Object) fixedOrderComparator72);
        int i74 = fixedOrderComparator72.getUnknownObjectBehavior();
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(i5 == 2);
        org.junit.Assert.assertTrue(b6 == false);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertNotNull(obj_array48);
        org.junit.Assert.assertNotNull(obj_array63);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertTrue(b73 == true);
        org.junit.Assert.assertTrue(i74 == 2);
    }

    @Test
    public void test537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test537");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array15 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array15);
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array15);
        fixedOrderComparator17.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array26);
        int i30 = fixedOrderComparator17.compare((java.lang.Object) fixedOrderComparator28, (java.lang.Object) (-1.0d));
        boolean b31 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator17);
        try {
            fixedOrderComparator17.setUnknownObjectBehavior((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array15);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertTrue(b31 == true);
    }

    @Test
    public void test538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test538");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        int i23 = fixedOrderComparator12.getUnknownObjectBehavior();
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        fixedOrderComparator31.setUnknownObjectBehavior(0);
        boolean b35 = fixedOrderComparator31.add((java.lang.Object) 1.0f);
        boolean b36 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertTrue(i23 == 0);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertTrue(b36 == false);
    }

    @Test
    public void test539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test539");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator8.setUnknownObjectBehavior(2);
        int i13 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object[] obj_array20 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array20);
        boolean b28 = fixedOrderComparator8.add((java.lang.Object) obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array20);
        try {
            fixedOrderComparator29.setUnknownObjectBehavior((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i13 == 2);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertTrue(b28 == true);
    }

    @Test
    public void test540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test540");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator3 = new collections.comparators.FixedOrderComparator();
        int i4 = fixedOrderComparator3.getUnknownObjectBehavior();
        boolean b5 = fixedOrderComparator3.isLocked();
        boolean b6 = fixedOrderComparator0.add((java.lang.Object) b5);
        java.lang.Object[] obj_array13 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array13);
        boolean b16 = fixedOrderComparator14.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator17.setUnknownObjectBehavior(0);
        int i20 = fixedOrderComparator17.getUnknownObjectBehavior();
        fixedOrderComparator17.setUnknownObjectBehavior((int) (byte) 0);
        boolean b23 = fixedOrderComparator14.add((java.lang.Object) fixedOrderComparator17);
        java.lang.Object obj25 = null;
        int i26 = fixedOrderComparator17.compare((java.lang.Object) 1.0d, obj25);
        java.lang.Object[] obj_array33 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator36.setUnknownObjectBehavior(0);
        int i39 = fixedOrderComparator36.getUnknownObjectBehavior();
        boolean b41 = fixedOrderComparator35.addAsEqual((java.lang.Object) i39, (java.lang.Object) (short) 1);
        int i42 = fixedOrderComparator35.getUnknownObjectBehavior();
        java.lang.Object[] obj_array49 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array49);
        boolean b51 = fixedOrderComparator50.isLocked();
        boolean b52 = fixedOrderComparator35.add((java.lang.Object) fixedOrderComparator50);
        int i54 = fixedOrderComparator17.compare((java.lang.Object) fixedOrderComparator35, (java.lang.Object) 1L);
        boolean b55 = fixedOrderComparator17.isLocked();
        try {
            boolean b57 = fixedOrderComparator0.addAsEqual((java.lang.Object) fixedOrderComparator17, (java.lang.Object) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(i4 == 2);
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertNotNull(obj_array13);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(i26 == 0);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertTrue(i39 == 0);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertTrue(i42 == 2);
        org.junit.Assert.assertNotNull(obj_array49);
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertTrue(b52 == true);
        org.junit.Assert.assertTrue(i54 == 0);
        org.junit.Assert.assertTrue(b55 == true);
    }

    @Test
    public void test541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test541");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        fixedOrderComparator11.setUnknownObjectBehavior(0);
        boolean b15 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        boolean b17 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator();
        boolean b19 = fixedOrderComparator18.isLocked();
        boolean b21 = fixedOrderComparator18.add((java.lang.Object) 10.0d);
        int i22 = fixedOrderComparator0.compare((java.lang.Object) b17, (java.lang.Object) fixedOrderComparator18);
        boolean b23 = fixedOrderComparator18.isLocked();
        java.lang.Object[] obj_array30 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator33.setUnknownObjectBehavior(0);
        int i36 = fixedOrderComparator33.getUnknownObjectBehavior();
        boolean b38 = fixedOrderComparator32.addAsEqual((java.lang.Object) i36, (java.lang.Object) (short) 1);
        int i39 = fixedOrderComparator32.getUnknownObjectBehavior();
        java.lang.Object[] obj_array46 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array46);
        fixedOrderComparator48.setUnknownObjectBehavior((int) (short) 0);
        int i51 = fixedOrderComparator48.getUnknownObjectBehavior();
        int i52 = fixedOrderComparator48.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator53.setUnknownObjectBehavior(0);
        int i56 = fixedOrderComparator53.getUnknownObjectBehavior();
        fixedOrderComparator53.setUnknownObjectBehavior((int) (byte) 0);
        int i59 = fixedOrderComparator53.getUnknownObjectBehavior();
        boolean b60 = fixedOrderComparator48.add((java.lang.Object) i59);
        boolean b61 = fixedOrderComparator32.add((java.lang.Object) fixedOrderComparator48);
        boolean b62 = fixedOrderComparator18.add((java.lang.Object) fixedOrderComparator48);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(i36 == 0);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(i39 == 2);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertTrue(i51 == 0);
        org.junit.Assert.assertTrue(i52 == 0);
        org.junit.Assert.assertTrue(i56 == 0);
        org.junit.Assert.assertTrue(i59 == 0);
        org.junit.Assert.assertTrue(b60 == false);
        org.junit.Assert.assertTrue(b61 == true);
        org.junit.Assert.assertTrue(b62 == true);
    }

    @Test
    public void test542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test542");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        int i12 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator7.add((java.lang.Object) 10L);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b24 = fixedOrderComparator22.add((java.lang.Object) (-1.0f));
        fixedOrderComparator22.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array33 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array33);
        int i37 = fixedOrderComparator36.getUnknownObjectBehavior();
        boolean b38 = fixedOrderComparator36.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array46 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        boolean b49 = fixedOrderComparator47.add((java.lang.Object) (-1.0f));
        int i50 = fixedOrderComparator47.getUnknownObjectBehavior();
        java.lang.Object[] obj_array57 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array57);
        fixedOrderComparator59.setUnknownObjectBehavior((int) (short) 0);
        int i62 = fixedOrderComparator59.getUnknownObjectBehavior();
        boolean b63 = fixedOrderComparator47.add((java.lang.Object) i62);
        boolean b64 = fixedOrderComparator39.add((java.lang.Object) fixedOrderComparator47);
        int i65 = fixedOrderComparator22.compare((java.lang.Object) b38, (java.lang.Object) fixedOrderComparator39);
        java.lang.Object[] obj_array73 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator74 = new collections.comparators.FixedOrderComparator(obj_array73);
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array73);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array73);
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array73);
        java.lang.Object[] obj_array78 = new java.lang.Object[] { fixedOrderComparator39, (byte) 10, obj_array73 };
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array73);
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array73);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array73);
        boolean b82 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator81);
        boolean b83 = fixedOrderComparator7.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertTrue(i37 == 2);
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(i50 == 2);
        org.junit.Assert.assertNotNull(obj_array57);
        org.junit.Assert.assertTrue(i62 == 0);
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue(i65 == 0);
        org.junit.Assert.assertNotNull(obj_array73);
        org.junit.Assert.assertNotNull(obj_array78);
        org.junit.Assert.assertTrue(b82 == true);
        org.junit.Assert.assertTrue(b83 == false);
    }

    @Test
    public void test543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test543");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        boolean b21 = fixedOrderComparator7.isLocked();
        boolean b22 = fixedOrderComparator7.isLocked();
        boolean b23 = fixedOrderComparator7.isLocked();
        int i24 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i25 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array32 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        fixedOrderComparator33.setUnknownObjectBehavior(0);
        boolean b37 = fixedOrderComparator33.add((java.lang.Object) 1.0f);
        java.lang.Object obj38 = null;
        java.lang.Object[] obj_array45 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array45);
        fixedOrderComparator46.setUnknownObjectBehavior(0);
        boolean b50 = fixedOrderComparator46.add((java.lang.Object) 1.0f);
        int i51 = fixedOrderComparator46.getUnknownObjectBehavior();
        int i52 = fixedOrderComparator33.compare(obj38, (java.lang.Object) i51);
        java.lang.Object[] obj_array59 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array59);
        java.lang.Object[] obj_array62 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array62);
        boolean b64 = fixedOrderComparator61.add((java.lang.Object) obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array62);
        boolean b68 = fixedOrderComparator7.addAsEqual((java.lang.Object) i51, (java.lang.Object) obj_array62);
        fixedOrderComparator7.setUnknownObjectBehavior(2);
        java.lang.Object obj71 = null;
        boolean b72 = fixedOrderComparator7.add(obj71);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertNotNull(obj_array45);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertTrue(i51 == 0);
        org.junit.Assert.assertTrue(i52 == (-1));
        org.junit.Assert.assertNotNull(obj_array59);
        org.junit.Assert.assertNotNull(obj_array62);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue(b68 == true);
        org.junit.Assert.assertTrue(b72 == true);
    }

    @Test
    public void test544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test544");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator3 = new collections.comparators.FixedOrderComparator();
        int i4 = fixedOrderComparator3.getUnknownObjectBehavior();
        boolean b5 = fixedOrderComparator3.isLocked();
        boolean b6 = fixedOrderComparator0.add((java.lang.Object) b5);
        boolean b7 = fixedOrderComparator0.isLocked();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b10 = fixedOrderComparator0.isLocked();
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(i4 == 2);
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertTrue(b10 == false);
    }

    @Test
    public void test545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test545");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        boolean b10 = fixedOrderComparator7.isLocked();
        int i11 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b12 = fixedOrderComparator7.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(b10 == false);
        org.junit.Assert.assertTrue(i11 == 2);
        org.junit.Assert.assertTrue(b12 == false);
    }

    @Test
    public void test546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test546");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { fixedOrderComparator0, obj_array22 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array22);
        try {
            fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertNotNull(obj_array29);
    }

    @Test
    public void test547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test547");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b28 = fixedOrderComparator14.add((java.lang.Object) obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array21);
        fixedOrderComparator29.setUnknownObjectBehavior((int) (byte) 0);
        boolean b32 = fixedOrderComparator29.isLocked();
        int i33 = fixedOrderComparator29.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertTrue(i33 == 0);
    }

    @Test
    public void test548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test548");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        boolean b1 = fixedOrderComparator0.isLocked();
        boolean b3 = fixedOrderComparator0.add((java.lang.Object) 10.0d);
        java.lang.Object obj4 = null;
        boolean b5 = fixedOrderComparator0.add(obj4);
        java.lang.Object[] obj_array12 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array12);
        java.lang.Object[] obj_array20 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        fixedOrderComparator21.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator13.add((java.lang.Object) 0);
        fixedOrderComparator13.setUnknownObjectBehavior((int) (short) 0);
        boolean b27 = fixedOrderComparator13.isLocked();
        boolean b28 = fixedOrderComparator13.isLocked();
        boolean b29 = fixedOrderComparator13.isLocked();
        int i30 = fixedOrderComparator13.getUnknownObjectBehavior();
        int i31 = fixedOrderComparator13.getUnknownObjectBehavior();
        java.lang.Object[] obj_array38 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array38);
        fixedOrderComparator39.setUnknownObjectBehavior(0);
        boolean b43 = fixedOrderComparator39.add((java.lang.Object) 1.0f);
        java.lang.Object obj44 = null;
        java.lang.Object[] obj_array51 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array51);
        fixedOrderComparator52.setUnknownObjectBehavior(0);
        boolean b56 = fixedOrderComparator52.add((java.lang.Object) 1.0f);
        int i57 = fixedOrderComparator52.getUnknownObjectBehavior();
        int i58 = fixedOrderComparator39.compare(obj44, (java.lang.Object) i57);
        java.lang.Object[] obj_array65 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array65);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array65);
        java.lang.Object[] obj_array68 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array68);
        boolean b70 = fixedOrderComparator67.add((java.lang.Object) obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator(obj_array68);
        boolean b74 = fixedOrderComparator13.addAsEqual((java.lang.Object) i57, (java.lang.Object) obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array68);
        boolean b77 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator76);
        java.lang.Object[] obj_array84 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array84);
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array84);
        collections.comparators.FixedOrderComparator fixedOrderComparator87 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator87.setUnknownObjectBehavior(0);
        int i90 = fixedOrderComparator87.getUnknownObjectBehavior();
        boolean b92 = fixedOrderComparator86.addAsEqual((java.lang.Object) i90, (java.lang.Object) (short) 1);
        int i93 = fixedOrderComparator86.getUnknownObjectBehavior();
        boolean b94 = fixedOrderComparator86.isLocked();
        boolean b95 = fixedOrderComparator0.add((java.lang.Object) b94);
        org.junit.Assert.assertTrue(b1 == false);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue(b5 == true);
        org.junit.Assert.assertNotNull(obj_array12);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertTrue(i31 == 0);
        org.junit.Assert.assertNotNull(obj_array38);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertNotNull(obj_array51);
        org.junit.Assert.assertTrue(b56 == true);
        org.junit.Assert.assertTrue(i57 == 0);
        org.junit.Assert.assertTrue(i58 == (-1));
        org.junit.Assert.assertNotNull(obj_array65);
        org.junit.Assert.assertNotNull(obj_array68);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertTrue(b74 == true);
        org.junit.Assert.assertTrue(b77 == true);
        org.junit.Assert.assertNotNull(obj_array84);
        org.junit.Assert.assertTrue(i90 == 0);
        org.junit.Assert.assertTrue(b92 == true);
        org.junit.Assert.assertTrue(i93 == 2);
        org.junit.Assert.assertTrue(b94 == false);
        org.junit.Assert.assertTrue(b95 == true);
    }

    @Test
    public void test549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test549");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b28 = fixedOrderComparator14.add((java.lang.Object) obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array21);
        java.lang.Object[] obj_array36 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array36);
        boolean b39 = fixedOrderComparator29.add((java.lang.Object) obj_array36);
        java.lang.Object obj40 = null;
        java.lang.Object[] obj_array47 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array47);
        boolean b50 = fixedOrderComparator48.add((java.lang.Object) (-1.0f));
        int i51 = fixedOrderComparator48.getUnknownObjectBehavior();
        java.lang.Object[] obj_array58 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array58);
        fixedOrderComparator60.setUnknownObjectBehavior((int) (short) 0);
        int i63 = fixedOrderComparator60.getUnknownObjectBehavior();
        boolean b64 = fixedOrderComparator48.add((java.lang.Object) i63);
        java.lang.Object[] obj_array71 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array71);
        fixedOrderComparator72.setUnknownObjectBehavior(0);
        boolean b76 = fixedOrderComparator72.add((java.lang.Object) 1.0f);
        boolean b78 = fixedOrderComparator72.add((java.lang.Object) 1.0f);
        fixedOrderComparator72.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array87 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator88 = new collections.comparators.FixedOrderComparator(obj_array87);
        collections.comparators.FixedOrderComparator fixedOrderComparator89 = new collections.comparators.FixedOrderComparator(obj_array87);
        collections.comparators.FixedOrderComparator fixedOrderComparator90 = new collections.comparators.FixedOrderComparator(obj_array87);
        collections.comparators.FixedOrderComparator fixedOrderComparator91 = new collections.comparators.FixedOrderComparator(obj_array87);
        collections.comparators.FixedOrderComparator fixedOrderComparator92 = new collections.comparators.FixedOrderComparator(obj_array87);
        collections.comparators.FixedOrderComparator fixedOrderComparator93 = new collections.comparators.FixedOrderComparator(obj_array87);
        collections.comparators.FixedOrderComparator fixedOrderComparator94 = new collections.comparators.FixedOrderComparator(obj_array87);
        collections.comparators.FixedOrderComparator fixedOrderComparator95 = new collections.comparators.FixedOrderComparator(obj_array87);
        boolean b96 = fixedOrderComparator72.add((java.lang.Object) obj_array87);
        collections.comparators.FixedOrderComparator fixedOrderComparator97 = new collections.comparators.FixedOrderComparator(obj_array87);
        boolean b98 = fixedOrderComparator48.add((java.lang.Object) fixedOrderComparator97);
        try {
            boolean b99 = fixedOrderComparator29.addAsEqual(obj40, (java.lang.Object) b98);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertNotNull(obj_array47);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertTrue(i51 == 2);
        org.junit.Assert.assertNotNull(obj_array58);
        org.junit.Assert.assertTrue(i63 == 0);
        org.junit.Assert.assertTrue(b64 == false);
        org.junit.Assert.assertNotNull(obj_array71);
        org.junit.Assert.assertTrue(b76 == true);
        org.junit.Assert.assertTrue(b78 == false);
        org.junit.Assert.assertNotNull(obj_array87);
        org.junit.Assert.assertTrue(b96 == true);
        org.junit.Assert.assertTrue(b98 == true);
    }

    @Test
    public void test550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test550");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { fixedOrderComparator0, obj_array22 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array22);
        int i38 = fixedOrderComparator37.getUnknownObjectBehavior();
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i38 == 2);
    }

    @Test
    public void test551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test551");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b7 = fixedOrderComparator0.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array14);
        java.lang.Object[] obj_array17 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        boolean b19 = fixedOrderComparator16.add((java.lang.Object) obj_array17);
        boolean b20 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator16);
        int i21 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object obj22 = null;
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        fixedOrderComparator30.setUnknownObjectBehavior(0);
        boolean b34 = fixedOrderComparator30.add((java.lang.Object) 1.0f);
        int i35 = fixedOrderComparator30.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator30.isLocked();
        java.lang.Object[] obj_array37 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array37);
        java.lang.Object[] obj_array39 = new java.lang.Object[] { fixedOrderComparator38 };
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array39);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array39);
        java.lang.Object[] obj_array48 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array48);
        int i51 = fixedOrderComparator30.compare((java.lang.Object) fixedOrderComparator41, (java.lang.Object) obj_array48);
        try {
            boolean b52 = fixedOrderComparator0.addAsEqual(obj22, (java.lang.Object) fixedOrderComparator41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 0);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertNotNull(obj_array37);
        org.junit.Assert.assertNotNull(obj_array39);
        org.junit.Assert.assertNotNull(obj_array48);
        org.junit.Assert.assertTrue(i51 == 0);
    }

    @Test
    public void test552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test552");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        fixedOrderComparator11.setUnknownObjectBehavior(0);
        boolean b15 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        boolean b17 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator();
        boolean b19 = fixedOrderComparator18.isLocked();
        boolean b21 = fixedOrderComparator18.add((java.lang.Object) 10.0d);
        int i22 = fixedOrderComparator0.compare((java.lang.Object) b17, (java.lang.Object) fixedOrderComparator18);
        boolean b23 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator();
        int i34 = fixedOrderComparator33.getUnknownObjectBehavior();
        java.lang.Object[] obj_array41 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array41);
        boolean b46 = fixedOrderComparator33.add((java.lang.Object) fixedOrderComparator45);
        fixedOrderComparator33.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array55 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array55);
        int i60 = fixedOrderComparator59.getUnknownObjectBehavior();
        int i61 = fixedOrderComparator59.getUnknownObjectBehavior();
        boolean b62 = fixedOrderComparator59.isLocked();
        int i63 = fixedOrderComparator59.getUnknownObjectBehavior();
        int i65 = fixedOrderComparator33.compare((java.lang.Object) fixedOrderComparator59, (java.lang.Object) 1L);
        int i66 = fixedOrderComparator0.compare((java.lang.Object) obj_array30, (java.lang.Object) i65);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array30);
        boolean b68 = fixedOrderComparator67.isLocked();
        int i69 = fixedOrderComparator67.getUnknownObjectBehavior();
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(i34 == 2);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(i60 == 2);
        org.junit.Assert.assertTrue(i61 == 2);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertTrue(i63 == 2);
        org.junit.Assert.assertTrue(i65 == 0);
        org.junit.Assert.assertTrue(i66 == 0);
        org.junit.Assert.assertTrue(b68 == false);
        org.junit.Assert.assertTrue(i69 == 2);
    }

    @Test
    public void test553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test553");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator();
        int i35 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator34.isLocked();
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        int i39 = fixedOrderComparator12.compare((java.lang.Object) obj_array29, (java.lang.Object) fixedOrderComparator34);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array29);
        boolean b41 = fixedOrderComparator40.isLocked();
        java.lang.Object[] obj_array48 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array48);
        fixedOrderComparator49.setUnknownObjectBehavior(0);
        boolean b53 = fixedOrderComparator49.add((java.lang.Object) 1.0f);
        int i54 = fixedOrderComparator49.getUnknownObjectBehavior();
        boolean b55 = fixedOrderComparator49.isLocked();
        java.lang.Object[] obj_array56 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array56);
        java.lang.Object[] obj_array58 = new java.lang.Object[] { fixedOrderComparator57 };
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array58);
        java.lang.Object[] obj_array67 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array67);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array67);
        int i70 = fixedOrderComparator49.compare((java.lang.Object) fixedOrderComparator60, (java.lang.Object) obj_array67);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array67);
        boolean b72 = fixedOrderComparator40.add((java.lang.Object) fixedOrderComparator71);
        int i73 = fixedOrderComparator40.getUnknownObjectBehavior();
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(i39 == 0);
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertNotNull(obj_array48);
        org.junit.Assert.assertTrue(b53 == true);
        org.junit.Assert.assertTrue(i54 == 0);
        org.junit.Assert.assertTrue(b55 == false);
        org.junit.Assert.assertNotNull(obj_array56);
        org.junit.Assert.assertNotNull(obj_array58);
        org.junit.Assert.assertNotNull(obj_array67);
        org.junit.Assert.assertTrue(i70 == 0);
        org.junit.Assert.assertTrue(b72 == true);
        org.junit.Assert.assertTrue(i73 == 2);
    }

    @Test
    public void test554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test554");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator8.setUnknownObjectBehavior(2);
        int i13 = fixedOrderComparator8.getUnknownObjectBehavior();
        int i14 = fixedOrderComparator8.getUnknownObjectBehavior();
        boolean b15 = fixedOrderComparator8.isLocked();
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator();
        int i28 = fixedOrderComparator27.getUnknownObjectBehavior();
        boolean b29 = fixedOrderComparator27.isLocked();
        boolean b30 = fixedOrderComparator27.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator();
        int i32 = fixedOrderComparator31.getUnknownObjectBehavior();
        boolean b33 = fixedOrderComparator31.isLocked();
        fixedOrderComparator31.setUnknownObjectBehavior(0);
        boolean b36 = fixedOrderComparator27.add((java.lang.Object) fixedOrderComparator31);
        java.lang.Object[] obj_array43 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array43);
        java.lang.Object[] obj_array58 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array58);
        boolean b65 = fixedOrderComparator51.add((java.lang.Object) obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array58);
        boolean b68 = fixedOrderComparator27.add((java.lang.Object) fixedOrderComparator67);
        int i69 = fixedOrderComparator67.getUnknownObjectBehavior();
        try {
            boolean b70 = fixedOrderComparator8.addAsEqual((java.lang.Object) fixedOrderComparator26, (java.lang.Object) fixedOrderComparator67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i13 == 2);
        org.junit.Assert.assertTrue(i14 == 2);
        org.junit.Assert.assertTrue(b15 == false);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(i28 == 2);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertTrue(i32 == 2);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertNotNull(obj_array43);
        org.junit.Assert.assertNotNull(obj_array58);
        org.junit.Assert.assertTrue(b65 == true);
        org.junit.Assert.assertTrue(b68 == true);
        org.junit.Assert.assertTrue(i69 == 2);
    }

    @Test
    public void test555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test555");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b13 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        fixedOrderComparator7.setUnknownObjectBehavior(1);
        boolean b16 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array23 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array23);
        fixedOrderComparator25.setUnknownObjectBehavior((int) (short) 0);
        int i28 = fixedOrderComparator25.getUnknownObjectBehavior();
        java.lang.Object obj30 = null;
        boolean b31 = fixedOrderComparator25.addAsEqual((java.lang.Object) 10.0f, obj30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator32.setUnknownObjectBehavior(0);
        int i35 = fixedOrderComparator32.getUnknownObjectBehavior();
        fixedOrderComparator32.setUnknownObjectBehavior((int) (byte) 0);
        boolean b38 = fixedOrderComparator32.isLocked();
        int i39 = fixedOrderComparator32.getUnknownObjectBehavior();
        java.lang.Object[] obj_array46 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array46);
        int i50 = fixedOrderComparator49.getUnknownObjectBehavior();
        int i51 = fixedOrderComparator25.compare((java.lang.Object) fixedOrderComparator32, (java.lang.Object) i50);
        boolean b52 = fixedOrderComparator7.add((java.lang.Object) i50);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator();
        int i54 = fixedOrderComparator53.getUnknownObjectBehavior();
        boolean b55 = fixedOrderComparator53.isLocked();
        boolean b56 = fixedOrderComparator53.isLocked();
        java.lang.Object[] obj_array63 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array63);
        fixedOrderComparator64.setUnknownObjectBehavior(0);
        boolean b68 = fixedOrderComparator64.add((java.lang.Object) 1.0f);
        int i69 = fixedOrderComparator64.getUnknownObjectBehavior();
        int i70 = fixedOrderComparator64.getUnknownObjectBehavior();
        int i71 = fixedOrderComparator64.getUnknownObjectBehavior();
        try {
            boolean b72 = fixedOrderComparator7.addAsEqual((java.lang.Object) fixedOrderComparator53, (java.lang.Object) i71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertNotNull(obj_array23);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(i35 == 0);
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertTrue(i39 == 0);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertTrue(i50 == 2);
        org.junit.Assert.assertTrue(i51 == 0);
        org.junit.Assert.assertTrue(b52 == true);
        org.junit.Assert.assertTrue(i54 == 2);
        org.junit.Assert.assertTrue(b55 == false);
        org.junit.Assert.assertTrue(b56 == false);
        org.junit.Assert.assertNotNull(obj_array63);
        org.junit.Assert.assertTrue(b68 == true);
        org.junit.Assert.assertTrue(i69 == 0);
        org.junit.Assert.assertTrue(i70 == 0);
        org.junit.Assert.assertTrue(i71 == 0);
    }

    @Test
    public void test556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test556");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array10);
        java.lang.Object[] obj_array20 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array20);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        fixedOrderComparator31.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array40);
        int i44 = fixedOrderComparator31.compare((java.lang.Object) fixedOrderComparator42, (java.lang.Object) (-1.0d));
        boolean b45 = fixedOrderComparator22.add((java.lang.Object) fixedOrderComparator31);
        boolean b46 = fixedOrderComparator31.isLocked();
        int i47 = fixedOrderComparator31.getUnknownObjectBehavior();
        int i48 = fixedOrderComparator0.compare((java.lang.Object) obj_array10, (java.lang.Object) fixedOrderComparator31);
        try {
            fixedOrderComparator0.setUnknownObjectBehavior(0);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(i48 == 0);
    }

    @Test
    public void test557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test557");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        boolean b29 = fixedOrderComparator7.isLocked();
        try {
            fixedOrderComparator7.setUnknownObjectBehavior(100);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(b29 == true);
    }

    @Test
    public void test558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test558");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        boolean b19 = fixedOrderComparator7.isLocked();
        boolean b20 = fixedOrderComparator7.isLocked();
        int i21 = fixedOrderComparator7.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertTrue(i21 == 2);
    }

    @Test
    public void test559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test559");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { fixedOrderComparator0, obj_array22 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b31 = fixedOrderComparator30.isLocked();
        int i32 = fixedOrderComparator30.getUnknownObjectBehavior();
        try {
            fixedOrderComparator30.setUnknownObjectBehavior((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertTrue(i32 == 2);
    }

    @Test
    public void test560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test560");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array18 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array18);
        int i22 = fixedOrderComparator21.getUnknownObjectBehavior();
        boolean b23 = fixedOrderComparator21.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array31 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        boolean b34 = fixedOrderComparator32.add((java.lang.Object) (-1.0f));
        int i35 = fixedOrderComparator32.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        fixedOrderComparator44.setUnknownObjectBehavior((int) (short) 0);
        int i47 = fixedOrderComparator44.getUnknownObjectBehavior();
        boolean b48 = fixedOrderComparator32.add((java.lang.Object) i47);
        boolean b49 = fixedOrderComparator24.add((java.lang.Object) fixedOrderComparator32);
        int i50 = fixedOrderComparator7.compare((java.lang.Object) b23, (java.lang.Object) fixedOrderComparator24);
        java.lang.Object[] obj_array58 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array58);
        java.lang.Object[] obj_array63 = new java.lang.Object[] { fixedOrderComparator24, (byte) 10, obj_array58 };
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array58);
        java.lang.Object obj68 = null;
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator69.setUnknownObjectBehavior(0);
        boolean b72 = fixedOrderComparator69.isLocked();
        boolean b73 = fixedOrderComparator69.isLocked();
        int i74 = fixedOrderComparator69.getUnknownObjectBehavior();
        try {
            int i75 = fixedOrderComparator67.compare(obj68, (java.lang.Object) i74);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertTrue(i22 == 2);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(i50 == 0);
        org.junit.Assert.assertNotNull(obj_array58);
        org.junit.Assert.assertNotNull(obj_array63);
        org.junit.Assert.assertTrue(b72 == false);
        org.junit.Assert.assertTrue(b73 == false);
        org.junit.Assert.assertTrue(i74 == 0);
    }

    @Test
    public void test561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test561");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        boolean b21 = fixedOrderComparator7.isLocked();
        boolean b22 = fixedOrderComparator7.isLocked();
        boolean b23 = fixedOrderComparator7.isLocked();
        int i24 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i25 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array32 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        fixedOrderComparator33.setUnknownObjectBehavior(0);
        boolean b37 = fixedOrderComparator33.add((java.lang.Object) 1.0f);
        java.lang.Object obj38 = null;
        java.lang.Object[] obj_array45 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array45);
        fixedOrderComparator46.setUnknownObjectBehavior(0);
        boolean b50 = fixedOrderComparator46.add((java.lang.Object) 1.0f);
        int i51 = fixedOrderComparator46.getUnknownObjectBehavior();
        int i52 = fixedOrderComparator33.compare(obj38, (java.lang.Object) i51);
        java.lang.Object[] obj_array59 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array59);
        java.lang.Object[] obj_array62 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array62);
        boolean b64 = fixedOrderComparator61.add((java.lang.Object) obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array62);
        boolean b68 = fixedOrderComparator7.addAsEqual((java.lang.Object) i51, (java.lang.Object) obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array62);
        boolean b70 = fixedOrderComparator69.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertNotNull(obj_array45);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertTrue(i51 == 0);
        org.junit.Assert.assertTrue(i52 == (-1));
        org.junit.Assert.assertNotNull(obj_array59);
        org.junit.Assert.assertNotNull(obj_array62);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue(b68 == true);
        org.junit.Assert.assertTrue(b70 == false);
    }

    @Test
    public void test562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test562");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator14.setUnknownObjectBehavior(0);
        boolean b17 = fixedOrderComparator14.isLocked();
        boolean b18 = fixedOrderComparator14.isLocked();
        java.lang.Object[] obj_array25 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array25);
        fixedOrderComparator26.setUnknownObjectBehavior(0);
        boolean b30 = fixedOrderComparator26.add((java.lang.Object) 1.0f);
        boolean b32 = fixedOrderComparator26.add((java.lang.Object) 1.0f);
        int i34 = fixedOrderComparator14.compare((java.lang.Object) fixedOrderComparator26, (java.lang.Object) 1.0d);
        fixedOrderComparator26.setUnknownObjectBehavior(0);
        int i37 = fixedOrderComparator26.getUnknownObjectBehavior();
        boolean b38 = fixedOrderComparator26.isLocked();
        java.lang.Object[] obj_array45 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array45);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array45);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array45);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array45);
        int i50 = fixedOrderComparator49.getUnknownObjectBehavior();
        int i51 = fixedOrderComparator49.getUnknownObjectBehavior();
        int i52 = fixedOrderComparator49.getUnknownObjectBehavior();
        try {
            boolean b53 = fixedOrderComparator0.addAsEqual((java.lang.Object) fixedOrderComparator26, (java.lang.Object) i52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(obj_array25);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertTrue(i34 == 0);
        org.junit.Assert.assertTrue(i37 == 0);
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertNotNull(obj_array45);
        org.junit.Assert.assertTrue(i50 == 2);
        org.junit.Assert.assertTrue(i51 == 2);
        org.junit.Assert.assertTrue(i52 == 2);
    }

    @Test
    public void test563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test563");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b12 = fixedOrderComparator10.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        boolean b19 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object obj21 = null;
        int i22 = fixedOrderComparator13.compare((java.lang.Object) 1.0d, obj21);
        boolean b23 = fixedOrderComparator13.isLocked();
        boolean b24 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator13);
        boolean b25 = fixedOrderComparator13.isLocked();
        boolean b26 = fixedOrderComparator13.isLocked();
        int i27 = fixedOrderComparator13.getUnknownObjectBehavior();
        int i30 = fixedOrderComparator13.compare((java.lang.Object) ' ', (java.lang.Object) 10L);
        int i31 = fixedOrderComparator13.getUnknownObjectBehavior();
        try {
            fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertTrue(i31 == 0);
    }

    @Test
    public void test564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test564");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        fixedOrderComparator19.setUnknownObjectBehavior((int) (short) 0);
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        java.lang.Object obj24 = null;
        boolean b25 = fixedOrderComparator19.addAsEqual((java.lang.Object) 10.0f, obj24);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator();
        int i27 = fixedOrderComparator26.getUnknownObjectBehavior();
        java.lang.Object[] obj_array34 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array34);
        boolean b39 = fixedOrderComparator26.add((java.lang.Object) fixedOrderComparator38);
        fixedOrderComparator26.setUnknownObjectBehavior(0);
        boolean b42 = fixedOrderComparator26.isLocked();
        int i44 = fixedOrderComparator19.compare((java.lang.Object) fixedOrderComparator26, (java.lang.Object) 2);
        boolean b45 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator26);
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator46.setUnknownObjectBehavior(0);
        int i49 = fixedOrderComparator46.getUnknownObjectBehavior();
        fixedOrderComparator46.setUnknownObjectBehavior((int) (byte) 0);
        fixedOrderComparator46.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array60 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array60);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array60);
        boolean b63 = fixedOrderComparator62.isLocked();
        boolean b64 = fixedOrderComparator62.isLocked();
        int i65 = fixedOrderComparator26.compare((java.lang.Object) 1, (java.lang.Object) b64);
        boolean b66 = fixedOrderComparator26.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(i27 == 2);
        org.junit.Assert.assertNotNull(obj_array34);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertNotNull(obj_array60);
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertTrue(b64 == false);
        org.junit.Assert.assertTrue(i65 == 0);
        org.junit.Assert.assertTrue(b66 == true);
    }

    @Test
    public void test565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test565");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array16 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        boolean b19 = fixedOrderComparator17.add((java.lang.Object) (-1.0f));
        fixedOrderComparator17.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array28 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array28);
        int i32 = fixedOrderComparator31.getUnknownObjectBehavior();
        boolean b33 = fixedOrderComparator31.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array41 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array41);
        boolean b44 = fixedOrderComparator42.add((java.lang.Object) (-1.0f));
        int i45 = fixedOrderComparator42.getUnknownObjectBehavior();
        java.lang.Object[] obj_array52 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array52);
        fixedOrderComparator54.setUnknownObjectBehavior((int) (short) 0);
        int i57 = fixedOrderComparator54.getUnknownObjectBehavior();
        boolean b58 = fixedOrderComparator42.add((java.lang.Object) i57);
        boolean b59 = fixedOrderComparator34.add((java.lang.Object) fixedOrderComparator42);
        int i60 = fixedOrderComparator17.compare((java.lang.Object) b33, (java.lang.Object) fixedOrderComparator34);
        java.lang.Object[] obj_array68 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array68);
        java.lang.Object[] obj_array73 = new java.lang.Object[] { fixedOrderComparator34, (byte) 10, obj_array68 };
        collections.comparators.FixedOrderComparator fixedOrderComparator74 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array68);
        boolean b76 = fixedOrderComparator9.add((java.lang.Object) fixedOrderComparator75);
        boolean b77 = fixedOrderComparator9.isLocked();
        int i78 = fixedOrderComparator9.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(i32 == 2);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertTrue(i45 == 2);
        org.junit.Assert.assertNotNull(obj_array52);
        org.junit.Assert.assertTrue(i57 == 0);
        org.junit.Assert.assertTrue(b58 == false);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertTrue(i60 == 0);
        org.junit.Assert.assertNotNull(obj_array68);
        org.junit.Assert.assertNotNull(obj_array73);
        org.junit.Assert.assertTrue(b76 == true);
        org.junit.Assert.assertTrue(b77 == false);
        org.junit.Assert.assertTrue(i78 == 2);
    }

    @Test
    public void test566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test566");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator4 = new collections.comparators.FixedOrderComparator();
        int i5 = fixedOrderComparator4.getUnknownObjectBehavior();
        boolean b6 = fixedOrderComparator4.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator();
        int i8 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b9 = fixedOrderComparator7.isLocked();
        boolean b10 = fixedOrderComparator4.add((java.lang.Object) b9);
        boolean b11 = fixedOrderComparator4.isLocked();
        java.lang.Object[] obj_array18 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        boolean b21 = fixedOrderComparator19.add((java.lang.Object) (-1.0f));
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        boolean b23 = fixedOrderComparator4.add((java.lang.Object) i22);
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        boolean b33 = fixedOrderComparator31.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        int i37 = fixedOrderComparator34.getUnknownObjectBehavior();
        fixedOrderComparator34.setUnknownObjectBehavior((int) (byte) 0);
        boolean b40 = fixedOrderComparator31.add((java.lang.Object) fixedOrderComparator34);
        java.lang.Object obj41 = null;
        boolean b42 = fixedOrderComparator31.add(obj41);
        java.lang.Object[] obj_array49 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array49);
        fixedOrderComparator50.setUnknownObjectBehavior(0);
        boolean b54 = fixedOrderComparator50.add((java.lang.Object) 1.0f);
        boolean b56 = fixedOrderComparator50.add((java.lang.Object) 1.0f);
        boolean b57 = fixedOrderComparator50.isLocked();
        boolean b58 = fixedOrderComparator50.isLocked();
        boolean b59 = fixedOrderComparator31.add((java.lang.Object) fixedOrderComparator50);
        boolean b60 = fixedOrderComparator50.isLocked();
        boolean b61 = fixedOrderComparator4.add((java.lang.Object) b60);
        boolean b62 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator4);
        boolean b63 = fixedOrderComparator0.isLocked();
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(i5 == 2);
        org.junit.Assert.assertTrue(b6 == false);
        org.junit.Assert.assertTrue(i8 == 2);
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertTrue(b10 == true);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue(i22 == 2);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(b33 == true);
        org.junit.Assert.assertTrue(i37 == 0);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertNotNull(obj_array49);
        org.junit.Assert.assertTrue(b54 == true);
        org.junit.Assert.assertTrue(b56 == false);
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertTrue(b58 == false);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertTrue(b60 == false);
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertTrue(b62 == true);
        org.junit.Assert.assertTrue(b63 == false);
    }

    @Test
    public void test567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test567");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array19 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator21.setUnknownObjectBehavior((int) (short) 0);
        int i24 = fixedOrderComparator7.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator();
        int i26 = fixedOrderComparator25.getUnknownObjectBehavior();
        boolean b27 = fixedOrderComparator25.isLocked();
        fixedOrderComparator25.setUnknownObjectBehavior(0);
        boolean b31 = fixedOrderComparator25.add((java.lang.Object) 10L);
        boolean b32 = fixedOrderComparator25.isLocked();
        boolean b33 = fixedOrderComparator25.isLocked();
        boolean b34 = fixedOrderComparator21.add((java.lang.Object) b33);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertTrue(i26 == 2);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertTrue(b34 == true);
    }

    @Test
    public void test568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test568");
        java.lang.Object[] obj_array0 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator1 = new collections.comparators.FixedOrderComparator(obj_array0);
        collections.comparators.FixedOrderComparator fixedOrderComparator2 = new collections.comparators.FixedOrderComparator(obj_array0);
        collections.comparators.FixedOrderComparator fixedOrderComparator3 = new collections.comparators.FixedOrderComparator();
        int i4 = fixedOrderComparator3.getUnknownObjectBehavior();
        boolean b5 = fixedOrderComparator3.isLocked();
        boolean b6 = fixedOrderComparator3.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator();
        int i8 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b9 = fixedOrderComparator7.isLocked();
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b12 = fixedOrderComparator3.add((java.lang.Object) fixedOrderComparator7);
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        boolean b22 = fixedOrderComparator20.add((java.lang.Object) (-1.0f));
        fixedOrderComparator20.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array32 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array32);
        fixedOrderComparator34.setUnknownObjectBehavior((int) (short) 0);
        int i37 = fixedOrderComparator20.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator34);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator();
        int i39 = fixedOrderComparator38.getUnknownObjectBehavior();
        java.lang.Object[] obj_array46 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array46);
        boolean b51 = fixedOrderComparator38.add((java.lang.Object) fixedOrderComparator50);
        boolean b52 = fixedOrderComparator50.isLocked();
        boolean b53 = fixedOrderComparator50.isLocked();
        boolean b54 = fixedOrderComparator34.add((java.lang.Object) fixedOrderComparator50);
        try {
            int i55 = fixedOrderComparator2.compare((java.lang.Object) b12, (java.lang.Object) fixedOrderComparator50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array0);
        org.junit.Assert.assertTrue(i4 == 2);
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue(b6 == false);
        org.junit.Assert.assertTrue(i8 == 2);
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertTrue(i37 == 0);
        org.junit.Assert.assertTrue(i39 == 2);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertTrue(b51 == true);
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertTrue(b53 == false);
        org.junit.Assert.assertTrue(b54 == true);
    }

    @Test
    public void test569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test569");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        boolean b3 = fixedOrderComparator0.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator4 = new collections.comparators.FixedOrderComparator();
        int i5 = fixedOrderComparator4.getUnknownObjectBehavior();
        boolean b6 = fixedOrderComparator4.isLocked();
        fixedOrderComparator4.setUnknownObjectBehavior(0);
        boolean b9 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator4);
        int i10 = fixedOrderComparator4.getUnknownObjectBehavior();
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        fixedOrderComparator19.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator19.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array30 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator33.setUnknownObjectBehavior(0);
        int i36 = fixedOrderComparator33.getUnknownObjectBehavior();
        boolean b38 = fixedOrderComparator32.addAsEqual((java.lang.Object) i36, (java.lang.Object) (short) 1);
        int i39 = fixedOrderComparator32.getUnknownObjectBehavior();
        java.lang.Object[] obj_array46 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        boolean b48 = fixedOrderComparator47.isLocked();
        boolean b49 = fixedOrderComparator32.add((java.lang.Object) fixedOrderComparator47);
        boolean b50 = fixedOrderComparator19.add((java.lang.Object) fixedOrderComparator32);
        boolean b51 = fixedOrderComparator4.add((java.lang.Object) fixedOrderComparator19);
        try {
            fixedOrderComparator4.setUnknownObjectBehavior((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(i5 == 2);
        org.junit.Assert.assertTrue(b6 == false);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i10 == 0);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(i36 == 0);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(i39 == 2);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertTrue(b51 == true);
    }

    @Test
    public void test570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test570");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array18 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array18);
        int i22 = fixedOrderComparator21.getUnknownObjectBehavior();
        boolean b23 = fixedOrderComparator21.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array31 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        boolean b34 = fixedOrderComparator32.add((java.lang.Object) (-1.0f));
        int i35 = fixedOrderComparator32.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        fixedOrderComparator44.setUnknownObjectBehavior((int) (short) 0);
        int i47 = fixedOrderComparator44.getUnknownObjectBehavior();
        boolean b48 = fixedOrderComparator32.add((java.lang.Object) i47);
        boolean b49 = fixedOrderComparator24.add((java.lang.Object) fixedOrderComparator32);
        int i50 = fixedOrderComparator7.compare((java.lang.Object) b23, (java.lang.Object) fixedOrderComparator24);
        java.lang.Object[] obj_array58 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array58);
        java.lang.Object[] obj_array63 = new java.lang.Object[] { fixedOrderComparator24, (byte) 10, obj_array58 };
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array58);
        java.lang.Object obj67 = null;
        boolean b68 = fixedOrderComparator66.add(obj67);
        int i69 = fixedOrderComparator66.getUnknownObjectBehavior();
        java.lang.Object[] obj_array70 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array70);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array70);
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator(obj_array70);
        boolean b74 = fixedOrderComparator66.add((java.lang.Object) fixedOrderComparator73);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertTrue(i22 == 2);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(i50 == 0);
        org.junit.Assert.assertNotNull(obj_array58);
        org.junit.Assert.assertNotNull(obj_array63);
        org.junit.Assert.assertTrue(b68 == true);
        org.junit.Assert.assertTrue(i69 == 2);
        org.junit.Assert.assertNotNull(obj_array70);
        org.junit.Assert.assertTrue(b74 == true);
    }

    @Test
    public void test571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test571");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        int i46 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Object obj48 = null;
        int i49 = fixedOrderComparator7.compare(obj47, obj48);
        java.lang.Object[] obj_array56 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array56);
        java.lang.Object[] obj_array64 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array64);
        int i68 = fixedOrderComparator7.compare((java.lang.Object) obj_array56, (java.lang.Object) fixedOrderComparator67);
        java.lang.Object[] obj_array75 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array75);
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array75);
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator(obj_array75);
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array75);
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array75);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array75);
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array75);
        int i83 = fixedOrderComparator82.getUnknownObjectBehavior();
        try {
            boolean b84 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator82);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertNotNull(obj_array56);
        org.junit.Assert.assertNotNull(obj_array64);
        org.junit.Assert.assertTrue(i68 == 0);
        org.junit.Assert.assertNotNull(obj_array75);
        org.junit.Assert.assertTrue(i83 == 2);
    }

    @Test
    public void test572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test572");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        int i11 = fixedOrderComparator8.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        int i15 = fixedOrderComparator12.getUnknownObjectBehavior();
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        java.lang.Object[] obj_array32 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array32);
        java.lang.Object[] obj_array41 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array41);
        fixedOrderComparator43.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array52 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array52);
        int i56 = fixedOrderComparator43.compare((java.lang.Object) fixedOrderComparator54, (java.lang.Object) (-1.0d));
        boolean b57 = fixedOrderComparator34.add((java.lang.Object) fixedOrderComparator43);
        boolean b58 = fixedOrderComparator43.isLocked();
        int i59 = fixedOrderComparator43.getUnknownObjectBehavior();
        int i60 = fixedOrderComparator12.compare((java.lang.Object) obj_array22, (java.lang.Object) fixedOrderComparator43);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array22);
        int i62 = fixedOrderComparator61.getUnknownObjectBehavior();
        int i64 = fixedOrderComparator8.compare((java.lang.Object) i62, (java.lang.Object) (-1L));
        try {
            boolean b66 = fixedOrderComparator8.add((java.lang.Object) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 0);
        org.junit.Assert.assertTrue(i15 == 0);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertNotNull(obj_array52);
        org.junit.Assert.assertTrue(i56 == 0);
        org.junit.Assert.assertTrue(b57 == true);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertTrue(i59 == 0);
        org.junit.Assert.assertTrue(i60 == 0);
        org.junit.Assert.assertTrue(i62 == 2);
        org.junit.Assert.assertTrue(i64 == 0);
    }

    @Test
    public void test573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test573");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array19 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator21.setUnknownObjectBehavior((int) (short) 0);
        int i24 = fixedOrderComparator7.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator21);
        fixedOrderComparator21.setUnknownObjectBehavior((int) (byte) 0);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator();
        int i28 = fixedOrderComparator27.getUnknownObjectBehavior();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array35);
        boolean b40 = fixedOrderComparator27.add((java.lang.Object) fixedOrderComparator39);
        fixedOrderComparator27.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array49 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array49);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array49);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array49);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array49);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array49);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array49);
        java.lang.Object[] obj_array56 = new java.lang.Object[] { fixedOrderComparator27, obj_array49 };
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array49);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array49);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array49);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array49);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array49);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array49);
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array49);
        boolean b65 = fixedOrderComparator63.add((java.lang.Object) (-1.0f));
        boolean b66 = fixedOrderComparator21.add((java.lang.Object) b65);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertTrue(i28 == 2);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertNotNull(obj_array49);
        org.junit.Assert.assertNotNull(obj_array56);
        org.junit.Assert.assertTrue(b65 == true);
        org.junit.Assert.assertTrue(b66 == true);
    }

    @Test
    public void test574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test574");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array7 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array7);
        boolean b10 = fixedOrderComparator8.add((java.lang.Object) (-1.0f));
        int i11 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object[] obj_array18 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array18);
        fixedOrderComparator20.setUnknownObjectBehavior((int) (short) 0);
        int i23 = fixedOrderComparator20.getUnknownObjectBehavior();
        boolean b24 = fixedOrderComparator8.add((java.lang.Object) i23);
        boolean b25 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator8);
        try {
            fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array7);
        org.junit.Assert.assertTrue(b10 == true);
        org.junit.Assert.assertTrue(i11 == 2);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertTrue(i23 == 0);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(b25 == true);
    }

    @Test
    public void test575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test575");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i11 = fixedOrderComparator10.getUnknownObjectBehavior();
        int i12 = fixedOrderComparator10.getUnknownObjectBehavior();
        boolean b13 = fixedOrderComparator10.isLocked();
        int i14 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array23 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array23);
        int i28 = fixedOrderComparator27.getUnknownObjectBehavior();
        int i29 = fixedOrderComparator27.getUnknownObjectBehavior();
        boolean b30 = fixedOrderComparator27.isLocked();
        boolean b31 = fixedOrderComparator27.isLocked();
        boolean b32 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator27);
        try {
            fixedOrderComparator27.setUnknownObjectBehavior((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 2);
        org.junit.Assert.assertTrue(i12 == 2);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(i14 == 2);
        org.junit.Assert.assertNotNull(obj_array23);
        org.junit.Assert.assertTrue(i28 == 2);
        org.junit.Assert.assertTrue(i29 == 2);
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertTrue(b32 == true);
    }

    @Test
    public void test576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test576");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b7 = fixedOrderComparator0.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        boolean b17 = fixedOrderComparator15.add((java.lang.Object) (-1.0f));
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator();
        int i19 = fixedOrderComparator18.getUnknownObjectBehavior();
        boolean b20 = fixedOrderComparator18.isLocked();
        fixedOrderComparator18.setUnknownObjectBehavior(0);
        int i23 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator15, (java.lang.Object) 0);
        int i24 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array31 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        fixedOrderComparator32.setUnknownObjectBehavior(0);
        boolean b36 = fixedOrderComparator32.add((java.lang.Object) 1.0f);
        int i37 = fixedOrderComparator32.getUnknownObjectBehavior();
        boolean b38 = fixedOrderComparator32.isLocked();
        java.lang.Object[] obj_array39 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array39);
        java.lang.Object[] obj_array41 = new java.lang.Object[] { fixedOrderComparator40 };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array41);
        java.lang.Object[] obj_array50 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array50);
        int i53 = fixedOrderComparator32.compare((java.lang.Object) fixedOrderComparator43, (java.lang.Object) obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array50);
        java.lang.Object[] obj_array62 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array62);
        fixedOrderComparator64.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator64.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array75 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array75);
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array75);
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator78.setUnknownObjectBehavior(0);
        int i81 = fixedOrderComparator78.getUnknownObjectBehavior();
        boolean b83 = fixedOrderComparator77.addAsEqual((java.lang.Object) i81, (java.lang.Object) (short) 1);
        int i84 = fixedOrderComparator77.getUnknownObjectBehavior();
        java.lang.Object[] obj_array91 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator92 = new collections.comparators.FixedOrderComparator(obj_array91);
        boolean b93 = fixedOrderComparator92.isLocked();
        boolean b94 = fixedOrderComparator77.add((java.lang.Object) fixedOrderComparator92);
        boolean b95 = fixedOrderComparator64.add((java.lang.Object) fixedOrderComparator77);
        int i96 = fixedOrderComparator0.compare((java.lang.Object) obj_array50, (java.lang.Object) fixedOrderComparator77);
        collections.comparators.FixedOrderComparator fixedOrderComparator97 = new collections.comparators.FixedOrderComparator(obj_array50);
        int i98 = fixedOrderComparator97.getUnknownObjectBehavior();
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(i19 == 2);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertTrue(i23 == 0);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(i37 == 0);
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertNotNull(obj_array39);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertNotNull(obj_array50);
        org.junit.Assert.assertTrue(i53 == 0);
        org.junit.Assert.assertNotNull(obj_array62);
        org.junit.Assert.assertNotNull(obj_array75);
        org.junit.Assert.assertTrue(i81 == 0);
        org.junit.Assert.assertTrue(b83 == true);
        org.junit.Assert.assertTrue(i84 == 2);
        org.junit.Assert.assertNotNull(obj_array91);
        org.junit.Assert.assertTrue(b93 == false);
        org.junit.Assert.assertTrue(b94 == true);
        org.junit.Assert.assertTrue(b95 == true);
        org.junit.Assert.assertTrue(i96 == 0);
        org.junit.Assert.assertTrue(i98 == 2);
    }

    @Test
    public void test577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test577");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b6 = fixedOrderComparator0.add((java.lang.Object) 10L);
        boolean b7 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array14);
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array14);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array14);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array14);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array14);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array14);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array14);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array14);
        boolean b24 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator23);
        try {
            fixedOrderComparator23.setUnknownObjectBehavior((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b24 == true);
    }

    @Test
    public void test578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test578");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        fixedOrderComparator11.setUnknownObjectBehavior(0);
        boolean b15 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        boolean b17 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator();
        boolean b19 = fixedOrderComparator18.isLocked();
        boolean b21 = fixedOrderComparator18.add((java.lang.Object) 10.0d);
        int i22 = fixedOrderComparator0.compare((java.lang.Object) b17, (java.lang.Object) fixedOrderComparator18);
        boolean b23 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator();
        int i34 = fixedOrderComparator33.getUnknownObjectBehavior();
        java.lang.Object[] obj_array41 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array41);
        boolean b46 = fixedOrderComparator33.add((java.lang.Object) fixedOrderComparator45);
        fixedOrderComparator33.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array55 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array55);
        int i60 = fixedOrderComparator59.getUnknownObjectBehavior();
        int i61 = fixedOrderComparator59.getUnknownObjectBehavior();
        boolean b62 = fixedOrderComparator59.isLocked();
        int i63 = fixedOrderComparator59.getUnknownObjectBehavior();
        int i65 = fixedOrderComparator33.compare((java.lang.Object) fixedOrderComparator59, (java.lang.Object) 1L);
        int i66 = fixedOrderComparator0.compare((java.lang.Object) obj_array30, (java.lang.Object) i65);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array30);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(i34 == 2);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(i60 == 2);
        org.junit.Assert.assertTrue(i61 == 2);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertTrue(i63 == 2);
        org.junit.Assert.assertTrue(i65 == 0);
        org.junit.Assert.assertTrue(i66 == 0);
    }

    @Test
    public void test579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test579");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator9.setUnknownObjectBehavior(0);
        int i12 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) i12, (java.lang.Object) (short) 1);
        int i15 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        fixedOrderComparator24.setUnknownObjectBehavior((int) (short) 0);
        int i27 = fixedOrderComparator24.getUnknownObjectBehavior();
        int i28 = fixedOrderComparator24.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        int i32 = fixedOrderComparator29.getUnknownObjectBehavior();
        fixedOrderComparator29.setUnknownObjectBehavior((int) (byte) 0);
        int i35 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator24.add((java.lang.Object) i35);
        boolean b37 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator24);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator();
        boolean b39 = fixedOrderComparator38.isLocked();
        boolean b41 = fixedOrderComparator38.add((java.lang.Object) 10.0d);
        java.lang.Object[] obj_array48 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array48);
        boolean b51 = fixedOrderComparator49.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator52.setUnknownObjectBehavior(0);
        int i55 = fixedOrderComparator52.getUnknownObjectBehavior();
        fixedOrderComparator52.setUnknownObjectBehavior((int) (byte) 0);
        boolean b58 = fixedOrderComparator49.add((java.lang.Object) fixedOrderComparator52);
        java.lang.Object obj59 = null;
        boolean b60 = fixedOrderComparator49.add(obj59);
        java.lang.Object[] obj_array67 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array67);
        fixedOrderComparator68.setUnknownObjectBehavior(0);
        boolean b72 = fixedOrderComparator68.add((java.lang.Object) 1.0f);
        boolean b74 = fixedOrderComparator68.add((java.lang.Object) 1.0f);
        boolean b75 = fixedOrderComparator68.isLocked();
        boolean b76 = fixedOrderComparator68.isLocked();
        boolean b77 = fixedOrderComparator49.add((java.lang.Object) fixedOrderComparator68);
        java.lang.Object[] obj_array84 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array84);
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array84);
        boolean b87 = fixedOrderComparator49.add((java.lang.Object) fixedOrderComparator86);
        int i88 = fixedOrderComparator24.compare((java.lang.Object) fixedOrderComparator38, (java.lang.Object) b87);
        boolean b89 = fixedOrderComparator38.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i15 == 2);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(i35 == 0);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertNotNull(obj_array48);
        org.junit.Assert.assertTrue(b51 == true);
        org.junit.Assert.assertTrue(i55 == 0);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertNotNull(obj_array67);
        org.junit.Assert.assertTrue(b72 == true);
        org.junit.Assert.assertTrue(b74 == false);
        org.junit.Assert.assertTrue(b75 == false);
        org.junit.Assert.assertTrue(b76 == false);
        org.junit.Assert.assertTrue(b77 == true);
        org.junit.Assert.assertNotNull(obj_array84);
        org.junit.Assert.assertTrue(b87 == true);
        org.junit.Assert.assertTrue(i88 == 0);
        org.junit.Assert.assertTrue(b89 == false);
    }

    @Test
    public void test580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test580");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { fixedOrderComparator0, obj_array22 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b39 = fixedOrderComparator37.add((java.lang.Object) (-1.0d));
        fixedOrderComparator37.setUnknownObjectBehavior(0);
        boolean b42 = fixedOrderComparator37.isLocked();
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b42 == false);
    }

    @Test
    public void test581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test581");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        java.lang.Object[] obj_array12 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array12);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array12);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        fixedOrderComparator23.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array32 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array32);
        int i36 = fixedOrderComparator23.compare((java.lang.Object) fixedOrderComparator34, (java.lang.Object) (-1.0d));
        boolean b37 = fixedOrderComparator14.add((java.lang.Object) fixedOrderComparator23);
        boolean b38 = fixedOrderComparator23.isLocked();
        boolean b39 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator23);
        boolean b40 = fixedOrderComparator23.isLocked();
        java.lang.Object[] obj_array47 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array47);
        fixedOrderComparator48.setUnknownObjectBehavior(0);
        boolean b52 = fixedOrderComparator48.add((java.lang.Object) 1.0f);
        int i53 = fixedOrderComparator48.getUnknownObjectBehavior();
        java.lang.Object[] obj_array60 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array60);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array60);
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array60);
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array60);
        java.lang.Object[] obj_array71 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array71);
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator(obj_array71);
        collections.comparators.FixedOrderComparator fixedOrderComparator74 = new collections.comparators.FixedOrderComparator(obj_array71);
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array71);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array71);
        int i77 = fixedOrderComparator48.compare((java.lang.Object) fixedOrderComparator64, (java.lang.Object) fixedOrderComparator76);
        try {
            boolean b78 = fixedOrderComparator23.add((java.lang.Object) fixedOrderComparator48);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertNotNull(obj_array12);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertTrue(i36 == 0);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertNotNull(obj_array47);
        org.junit.Assert.assertTrue(b52 == true);
        org.junit.Assert.assertTrue(i53 == 0);
        org.junit.Assert.assertNotNull(obj_array60);
        org.junit.Assert.assertNotNull(obj_array71);
        org.junit.Assert.assertTrue(i77 == 0);
    }

    @Test
    public void test582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test582");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b7 = fixedOrderComparator0.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array14);
        java.lang.Object[] obj_array17 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        boolean b19 = fixedOrderComparator16.add((java.lang.Object) obj_array17);
        boolean b20 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator16);
        fixedOrderComparator16.setUnknownObjectBehavior((int) (short) 0);
        int i23 = fixedOrderComparator16.getUnknownObjectBehavior();
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array30);
        java.lang.Object[] obj_array33 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        boolean b35 = fixedOrderComparator32.add((java.lang.Object) obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array33);
        boolean b39 = fixedOrderComparator16.add((java.lang.Object) fixedOrderComparator38);
        boolean b40 = fixedOrderComparator38.isLocked();
        int i41 = fixedOrderComparator38.getUnknownObjectBehavior();
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertTrue(i23 == 0);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertTrue(i41 == 2);
    }

    @Test
    public void test583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test583");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b15 = fixedOrderComparator12.isLocked();
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        fixedOrderComparator23.setUnknownObjectBehavior(0);
        boolean b27 = fixedOrderComparator23.add((java.lang.Object) 1.0f);
        boolean b29 = fixedOrderComparator23.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator();
        boolean b31 = fixedOrderComparator30.isLocked();
        boolean b33 = fixedOrderComparator30.add((java.lang.Object) 10.0d);
        int i34 = fixedOrderComparator12.compare((java.lang.Object) b29, (java.lang.Object) fixedOrderComparator30);
        boolean b35 = fixedOrderComparator12.isLocked();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator();
        int i46 = fixedOrderComparator45.getUnknownObjectBehavior();
        java.lang.Object[] obj_array53 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array53);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array53);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array53);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array53);
        boolean b58 = fixedOrderComparator45.add((java.lang.Object) fixedOrderComparator57);
        fixedOrderComparator45.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array67 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array67);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array67);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array67);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array67);
        int i72 = fixedOrderComparator71.getUnknownObjectBehavior();
        int i73 = fixedOrderComparator71.getUnknownObjectBehavior();
        boolean b74 = fixedOrderComparator71.isLocked();
        int i75 = fixedOrderComparator71.getUnknownObjectBehavior();
        int i77 = fixedOrderComparator45.compare((java.lang.Object) fixedOrderComparator71, (java.lang.Object) 1L);
        int i78 = fixedOrderComparator12.compare((java.lang.Object) obj_array42, (java.lang.Object) i77);
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array42);
        fixedOrderComparator79.setUnknownObjectBehavior((int) (short) 0);
        boolean b82 = fixedOrderComparator79.isLocked();
        boolean b83 = fixedOrderComparator11.add((java.lang.Object) b82);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b15 == false);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertTrue(b33 == true);
        org.junit.Assert.assertTrue(i34 == 0);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(i46 == 2);
        org.junit.Assert.assertNotNull(obj_array53);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertNotNull(obj_array67);
        org.junit.Assert.assertTrue(i72 == 2);
        org.junit.Assert.assertTrue(i73 == 2);
        org.junit.Assert.assertTrue(b74 == false);
        org.junit.Assert.assertTrue(i75 == 2);
        org.junit.Assert.assertTrue(i77 == 0);
        org.junit.Assert.assertTrue(i78 == 0);
        org.junit.Assert.assertTrue(b82 == false);
        org.junit.Assert.assertTrue(b83 == true);
    }

    @Test
    public void test584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test584");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        int i11 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object obj13 = null;
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) 10.0f, obj13);
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator();
        int i16 = fixedOrderComparator15.getUnknownObjectBehavior();
        java.lang.Object[] obj_array23 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array23);
        boolean b28 = fixedOrderComparator15.add((java.lang.Object) fixedOrderComparator27);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b31 = fixedOrderComparator15.isLocked();
        int i33 = fixedOrderComparator8.compare((java.lang.Object) fixedOrderComparator15, (java.lang.Object) 2);
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array40);
        fixedOrderComparator42.setUnknownObjectBehavior((int) (short) 0);
        int i45 = fixedOrderComparator42.getUnknownObjectBehavior();
        java.lang.Object obj47 = null;
        boolean b48 = fixedOrderComparator42.addAsEqual((java.lang.Object) 10.0f, obj47);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator();
        int i50 = fixedOrderComparator49.getUnknownObjectBehavior();
        java.lang.Object[] obj_array57 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array57);
        boolean b62 = fixedOrderComparator49.add((java.lang.Object) fixedOrderComparator61);
        fixedOrderComparator49.setUnknownObjectBehavior(0);
        boolean b65 = fixedOrderComparator49.isLocked();
        int i67 = fixedOrderComparator42.compare((java.lang.Object) fixedOrderComparator49, (java.lang.Object) 2);
        java.lang.Object[] obj_array74 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array74);
        boolean b77 = fixedOrderComparator75.add((java.lang.Object) (-1.0f));
        int i78 = fixedOrderComparator75.getUnknownObjectBehavior();
        java.lang.Object[] obj_array85 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array85);
        collections.comparators.FixedOrderComparator fixedOrderComparator87 = new collections.comparators.FixedOrderComparator(obj_array85);
        fixedOrderComparator87.setUnknownObjectBehavior((int) (short) 0);
        int i90 = fixedOrderComparator87.getUnknownObjectBehavior();
        boolean b91 = fixedOrderComparator75.add((java.lang.Object) i90);
        boolean b92 = fixedOrderComparator49.add((java.lang.Object) b91);
        fixedOrderComparator49.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object obj95 = null;
        int i96 = fixedOrderComparator8.compare((java.lang.Object) fixedOrderComparator49, obj95);
        int i97 = fixedOrderComparator8.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i16 == 2);
        org.junit.Assert.assertNotNull(obj_array23);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertTrue(i33 == 0);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(i45 == 0);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertTrue(i50 == 2);
        org.junit.Assert.assertNotNull(obj_array57);
        org.junit.Assert.assertTrue(b62 == true);
        org.junit.Assert.assertTrue(b65 == false);
        org.junit.Assert.assertTrue(i67 == 0);
        org.junit.Assert.assertNotNull(obj_array74);
        org.junit.Assert.assertTrue(b77 == true);
        org.junit.Assert.assertTrue(i78 == 2);
        org.junit.Assert.assertNotNull(obj_array85);
        org.junit.Assert.assertTrue(i90 == 0);
        org.junit.Assert.assertTrue(b91 == false);
        org.junit.Assert.assertTrue(b92 == true);
        org.junit.Assert.assertTrue(i96 == (-1));
        org.junit.Assert.assertTrue(i97 == 0);
    }

    @Test
    public void test585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test585");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { fixedOrderComparator0, obj_array22 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b39 = fixedOrderComparator37.add((java.lang.Object) (-1.0d));
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        java.lang.Object[] obj_array47 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array47);
        boolean b50 = fixedOrderComparator48.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator51.setUnknownObjectBehavior(0);
        int i54 = fixedOrderComparator51.getUnknownObjectBehavior();
        fixedOrderComparator51.setUnknownObjectBehavior((int) (byte) 0);
        boolean b57 = fixedOrderComparator48.add((java.lang.Object) fixedOrderComparator51);
        java.lang.Object obj59 = null;
        int i60 = fixedOrderComparator51.compare((java.lang.Object) 1.0d, obj59);
        boolean b61 = fixedOrderComparator51.isLocked();
        boolean b62 = fixedOrderComparator51.isLocked();
        boolean b63 = fixedOrderComparator51.isLocked();
        java.lang.Object obj64 = null;
        try {
            boolean b65 = fixedOrderComparator37.addAsEqual((java.lang.Object) fixedOrderComparator51, obj64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(i40 == 2);
        org.junit.Assert.assertNotNull(obj_array47);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertTrue(i54 == 0);
        org.junit.Assert.assertTrue(b57 == true);
        org.junit.Assert.assertTrue(i60 == 0);
        org.junit.Assert.assertTrue(b61 == true);
        org.junit.Assert.assertTrue(b62 == true);
        org.junit.Assert.assertTrue(b63 == true);
    }

    @Test
    public void test586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test586");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        boolean b12 = fixedOrderComparator7.isLocked();
        fixedOrderComparator7.setUnknownObjectBehavior(2);
        int i15 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        fixedOrderComparator23.setUnknownObjectBehavior(0);
        boolean b27 = fixedOrderComparator23.add((java.lang.Object) 1.0f);
        java.lang.Object obj28 = null;
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator36.setUnknownObjectBehavior(0);
        boolean b40 = fixedOrderComparator36.add((java.lang.Object) 1.0f);
        int i41 = fixedOrderComparator36.getUnknownObjectBehavior();
        int i42 = fixedOrderComparator23.compare(obj28, (java.lang.Object) i41);
        int i43 = fixedOrderComparator23.getUnknownObjectBehavior();
        boolean b44 = fixedOrderComparator23.isLocked();
        java.lang.Object[] obj_array51 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array51);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array51);
        fixedOrderComparator53.setUnknownObjectBehavior((int) (short) 0);
        int i56 = fixedOrderComparator53.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator57.setUnknownObjectBehavior(0);
        int i60 = fixedOrderComparator57.getUnknownObjectBehavior();
        int i61 = fixedOrderComparator23.compare((java.lang.Object) i56, (java.lang.Object) fixedOrderComparator57);
        int i62 = fixedOrderComparator23.getUnknownObjectBehavior();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Object obj64 = null;
        int i65 = fixedOrderComparator23.compare(obj63, obj64);
        java.lang.Object[] obj_array72 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator(obj_array72);
        java.lang.Object[] obj_array80 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array80);
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array80);
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator(obj_array80);
        int i84 = fixedOrderComparator23.compare((java.lang.Object) obj_array72, (java.lang.Object) fixedOrderComparator83);
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array72);
        boolean b86 = fixedOrderComparator7.add((java.lang.Object) obj_array72);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(i15 == 2);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertTrue(i41 == 0);
        org.junit.Assert.assertTrue(i42 == (-1));
        org.junit.Assert.assertTrue(i43 == 0);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertNotNull(obj_array51);
        org.junit.Assert.assertTrue(i56 == 0);
        org.junit.Assert.assertTrue(i60 == 0);
        org.junit.Assert.assertTrue(i61 == 1);
        org.junit.Assert.assertTrue(i62 == 0);
        org.junit.Assert.assertTrue(i65 == 0);
        org.junit.Assert.assertNotNull(obj_array72);
        org.junit.Assert.assertNotNull(obj_array80);
        org.junit.Assert.assertTrue(i84 == 0);
        org.junit.Assert.assertTrue(b86 == true);
    }

    @Test
    public void test587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test587");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        fixedOrderComparator11.setUnknownObjectBehavior(0);
        boolean b15 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        boolean b17 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator();
        boolean b19 = fixedOrderComparator18.isLocked();
        boolean b21 = fixedOrderComparator18.add((java.lang.Object) 10.0d);
        int i22 = fixedOrderComparator0.compare((java.lang.Object) b17, (java.lang.Object) fixedOrderComparator18);
        boolean b23 = fixedOrderComparator18.isLocked();
        boolean b24 = fixedOrderComparator18.isLocked();
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue(b24 == false);
    }

    @Test
    public void test588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test588");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b10 = fixedOrderComparator9.isLocked();
        int i11 = fixedOrderComparator9.getUnknownObjectBehavior();
        try {
            fixedOrderComparator9.setUnknownObjectBehavior((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b10 == false);
        org.junit.Assert.assertTrue(i11 == 2);
    }

    @Test
    public void test589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test589");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        fixedOrderComparator11.setUnknownObjectBehavior(0);
        boolean b15 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        boolean b17 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator();
        boolean b19 = fixedOrderComparator18.isLocked();
        boolean b21 = fixedOrderComparator18.add((java.lang.Object) 10.0d);
        int i22 = fixedOrderComparator0.compare((java.lang.Object) b17, (java.lang.Object) fixedOrderComparator18);
        int i23 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b24 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array31 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        boolean b34 = fixedOrderComparator32.add((java.lang.Object) (-1.0f));
        fixedOrderComparator32.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array44 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array44);
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array44);
        fixedOrderComparator46.setUnknownObjectBehavior((int) (short) 0);
        int i49 = fixedOrderComparator32.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator46);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator();
        int i51 = fixedOrderComparator50.getUnknownObjectBehavior();
        java.lang.Object[] obj_array58 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array58);
        boolean b63 = fixedOrderComparator50.add((java.lang.Object) fixedOrderComparator62);
        boolean b64 = fixedOrderComparator62.isLocked();
        boolean b65 = fixedOrderComparator62.isLocked();
        boolean b66 = fixedOrderComparator46.add((java.lang.Object) fixedOrderComparator62);
        try {
            boolean b67 = fixedOrderComparator0.add((java.lang.Object) b66);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(i23 == 0);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertNotNull(obj_array44);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertTrue(i51 == 2);
        org.junit.Assert.assertNotNull(obj_array58);
        org.junit.Assert.assertTrue(b63 == true);
        org.junit.Assert.assertTrue(b64 == false);
        org.junit.Assert.assertTrue(b65 == false);
        org.junit.Assert.assertTrue(b66 == true);
    }

    @Test
    public void test590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test590");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        fixedOrderComparator11.setUnknownObjectBehavior(0);
        boolean b15 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        boolean b17 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator();
        boolean b19 = fixedOrderComparator18.isLocked();
        boolean b21 = fixedOrderComparator18.add((java.lang.Object) 10.0d);
        int i22 = fixedOrderComparator0.compare((java.lang.Object) b17, (java.lang.Object) fixedOrderComparator18);
        boolean b23 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator();
        int i34 = fixedOrderComparator33.getUnknownObjectBehavior();
        java.lang.Object[] obj_array41 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array41);
        boolean b46 = fixedOrderComparator33.add((java.lang.Object) fixedOrderComparator45);
        fixedOrderComparator33.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array55 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array55);
        int i60 = fixedOrderComparator59.getUnknownObjectBehavior();
        int i61 = fixedOrderComparator59.getUnknownObjectBehavior();
        boolean b62 = fixedOrderComparator59.isLocked();
        int i63 = fixedOrderComparator59.getUnknownObjectBehavior();
        int i65 = fixedOrderComparator33.compare((java.lang.Object) fixedOrderComparator59, (java.lang.Object) 1L);
        int i66 = fixedOrderComparator0.compare((java.lang.Object) obj_array30, (java.lang.Object) i65);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array30);
        int i69 = fixedOrderComparator68.getUnknownObjectBehavior();
        int i70 = fixedOrderComparator68.getUnknownObjectBehavior();
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(i34 == 2);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(i60 == 2);
        org.junit.Assert.assertTrue(i61 == 2);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertTrue(i63 == 2);
        org.junit.Assert.assertTrue(i65 == 0);
        org.junit.Assert.assertTrue(i66 == 0);
        org.junit.Assert.assertTrue(i69 == 2);
        org.junit.Assert.assertTrue(i70 == 2);
    }

    @Test
    public void test591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test591");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b12 = fixedOrderComparator10.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        boolean b19 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object obj21 = null;
        int i22 = fixedOrderComparator13.compare((java.lang.Object) 1.0d, obj21);
        boolean b23 = fixedOrderComparator13.isLocked();
        boolean b24 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object[] obj_array31 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array31);
        fixedOrderComparator33.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        int i46 = fixedOrderComparator33.compare((java.lang.Object) fixedOrderComparator44, (java.lang.Object) (-1.0d));
        boolean b47 = fixedOrderComparator44.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator48.setUnknownObjectBehavior(0);
        boolean b51 = fixedOrderComparator48.isLocked();
        java.lang.Object[] obj_array58 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array58);
        fixedOrderComparator59.setUnknownObjectBehavior(0);
        boolean b63 = fixedOrderComparator59.add((java.lang.Object) 1.0f);
        boolean b65 = fixedOrderComparator59.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator();
        boolean b67 = fixedOrderComparator66.isLocked();
        boolean b69 = fixedOrderComparator66.add((java.lang.Object) 10.0d);
        int i70 = fixedOrderComparator48.compare((java.lang.Object) b65, (java.lang.Object) fixedOrderComparator66);
        boolean b71 = fixedOrderComparator48.isLocked();
        int i72 = fixedOrderComparator0.compare((java.lang.Object) b47, (java.lang.Object) fixedOrderComparator48);
        boolean b73 = fixedOrderComparator0.isLocked();
        boolean b74 = fixedOrderComparator0.isLocked();
        try {
            fixedOrderComparator0.setUnknownObjectBehavior((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertTrue(b47 == false);
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertNotNull(obj_array58);
        org.junit.Assert.assertTrue(b63 == true);
        org.junit.Assert.assertTrue(b65 == false);
        org.junit.Assert.assertTrue(b67 == false);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertTrue(i70 == 0);
        org.junit.Assert.assertTrue(b71 == true);
        org.junit.Assert.assertTrue(i72 == 0);
        org.junit.Assert.assertTrue(b73 == true);
        org.junit.Assert.assertTrue(b74 == true);
    }

    @Test
    public void test592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test592");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        boolean b21 = fixedOrderComparator7.isLocked();
        boolean b22 = fixedOrderComparator7.isLocked();
        boolean b23 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array30 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array30);
        int i35 = fixedOrderComparator34.getUnknownObjectBehavior();
        int i36 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b37 = fixedOrderComparator34.isLocked();
        int i38 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b39 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator34);
        boolean b41 = fixedOrderComparator34.add((java.lang.Object) (byte) 10);
        int i42 = fixedOrderComparator34.getUnknownObjectBehavior();
        int i43 = fixedOrderComparator34.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(i36 == 2);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(i38 == 2);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertTrue(i42 == 2);
        org.junit.Assert.assertTrue(i43 == 2);
    }

    @Test
    public void test593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test593");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        fixedOrderComparator18.setUnknownObjectBehavior(0);
        boolean b22 = fixedOrderComparator18.add((java.lang.Object) 1.0f);
        boolean b24 = fixedOrderComparator18.add((java.lang.Object) 1.0f);
        boolean b25 = fixedOrderComparator18.isLocked();
        boolean b26 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator18);
        java.lang.Object obj27 = null;
        java.lang.Object[] obj_array34 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array34);
        fixedOrderComparator35.setUnknownObjectBehavior(0);
        boolean b39 = fixedOrderComparator35.add((java.lang.Object) 1.0f);
        int i40 = fixedOrderComparator35.getUnknownObjectBehavior();
        java.lang.Object[] obj_array47 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array47);
        java.lang.Object[] obj_array58 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array58);
        int i64 = fixedOrderComparator35.compare((java.lang.Object) fixedOrderComparator51, (java.lang.Object) fixedOrderComparator63);
        java.lang.Object[] obj_array71 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array71);
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator(obj_array71);
        collections.comparators.FixedOrderComparator fixedOrderComparator74 = new collections.comparators.FixedOrderComparator(obj_array71);
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array71);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array71);
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array71);
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator(obj_array71);
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array71);
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array71);
        boolean b81 = fixedOrderComparator51.add((java.lang.Object) obj_array71);
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array71);
        fixedOrderComparator82.setUnknownObjectBehavior((int) (short) 1);
        int i85 = fixedOrderComparator82.getUnknownObjectBehavior();
        try {
            boolean b86 = fixedOrderComparator18.addAsEqual(obj27, (java.lang.Object) i85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertNotNull(obj_array34);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertNotNull(obj_array47);
        org.junit.Assert.assertNotNull(obj_array58);
        org.junit.Assert.assertTrue(i64 == 0);
        org.junit.Assert.assertNotNull(obj_array71);
        org.junit.Assert.assertTrue(b81 == true);
        org.junit.Assert.assertTrue(i85 == 1);
    }

    @Test
    public void test594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test594");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator();
        int i35 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator34.isLocked();
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        int i39 = fixedOrderComparator12.compare((java.lang.Object) obj_array29, (java.lang.Object) fixedOrderComparator34);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array29);
        int i41 = fixedOrderComparator40.getUnknownObjectBehavior();
        int i42 = fixedOrderComparator40.getUnknownObjectBehavior();
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(i39 == 0);
        org.junit.Assert.assertTrue(i41 == 2);
        org.junit.Assert.assertTrue(i42 == 2);
    }

    @Test
    public void test595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test595");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b14 = fixedOrderComparator12.add((java.lang.Object) (short) 1);
        try {
            fixedOrderComparator12.setUnknownObjectBehavior((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b14 == true);
    }

    @Test
    public void test596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test596");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator();
        int i35 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator34.isLocked();
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        int i39 = fixedOrderComparator12.compare((java.lang.Object) obj_array29, (java.lang.Object) fixedOrderComparator34);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array29);
        java.lang.Object[] obj_array47 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array47);
        java.lang.Object[] obj_array55 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        fixedOrderComparator56.setUnknownObjectBehavior(0);
        boolean b59 = fixedOrderComparator48.add((java.lang.Object) 0);
        fixedOrderComparator48.setUnknownObjectBehavior((int) (short) 0);
        boolean b62 = fixedOrderComparator48.isLocked();
        boolean b63 = fixedOrderComparator48.isLocked();
        boolean b64 = fixedOrderComparator48.isLocked();
        int i65 = fixedOrderComparator48.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator();
        int i67 = fixedOrderComparator66.getUnknownObjectBehavior();
        boolean b68 = fixedOrderComparator66.isLocked();
        fixedOrderComparator66.setUnknownObjectBehavior(0);
        boolean b72 = fixedOrderComparator66.add((java.lang.Object) 10L);
        boolean b73 = fixedOrderComparator66.isLocked();
        boolean b74 = fixedOrderComparator66.isLocked();
        try {
            int i75 = fixedOrderComparator40.compare((java.lang.Object) i65, (java.lang.Object) fixedOrderComparator66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(i39 == 0);
        org.junit.Assert.assertNotNull(obj_array47);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertTrue(b64 == false);
        org.junit.Assert.assertTrue(i65 == 0);
        org.junit.Assert.assertTrue(i67 == 2);
        org.junit.Assert.assertTrue(b68 == false);
        org.junit.Assert.assertTrue(b72 == true);
        org.junit.Assert.assertTrue(b73 == false);
        org.junit.Assert.assertTrue(b74 == false);
    }

    @Test
    public void test597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test597");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        boolean b3 = fixedOrderComparator0.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator4 = new collections.comparators.FixedOrderComparator();
        int i5 = fixedOrderComparator4.getUnknownObjectBehavior();
        boolean b6 = fixedOrderComparator4.isLocked();
        fixedOrderComparator4.setUnknownObjectBehavior(0);
        boolean b9 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator4);
        int i10 = fixedOrderComparator4.getUnknownObjectBehavior();
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        fixedOrderComparator19.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator19.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array30 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator33.setUnknownObjectBehavior(0);
        int i36 = fixedOrderComparator33.getUnknownObjectBehavior();
        boolean b38 = fixedOrderComparator32.addAsEqual((java.lang.Object) i36, (java.lang.Object) (short) 1);
        int i39 = fixedOrderComparator32.getUnknownObjectBehavior();
        java.lang.Object[] obj_array46 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        boolean b48 = fixedOrderComparator47.isLocked();
        boolean b49 = fixedOrderComparator32.add((java.lang.Object) fixedOrderComparator47);
        boolean b50 = fixedOrderComparator19.add((java.lang.Object) fixedOrderComparator32);
        boolean b51 = fixedOrderComparator4.add((java.lang.Object) fixedOrderComparator19);
        int i52 = fixedOrderComparator4.getUnknownObjectBehavior();
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(i5 == 2);
        org.junit.Assert.assertTrue(b6 == false);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i10 == 0);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(i36 == 0);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(i39 == 2);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertTrue(b51 == true);
        org.junit.Assert.assertTrue(i52 == 0);
    }

    @Test
    public void test598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test598");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b12 = fixedOrderComparator10.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        boolean b19 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object obj21 = null;
        int i22 = fixedOrderComparator13.compare((java.lang.Object) 1.0d, obj21);
        boolean b23 = fixedOrderComparator13.isLocked();
        boolean b24 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator13);
        try {
            fixedOrderComparator13.setUnknownObjectBehavior((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == true);
    }

    @Test
    public void test599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test599");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { fixedOrderComparator0, obj_array22 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array22);
        int i34 = fixedOrderComparator33.getUnknownObjectBehavior();
        try {
            fixedOrderComparator33.setUnknownObjectBehavior((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i34 == 2);
    }

    @Test
    public void test600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test600");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i11 = fixedOrderComparator10.getUnknownObjectBehavior();
        int i12 = fixedOrderComparator10.getUnknownObjectBehavior();
        boolean b13 = fixedOrderComparator10.isLocked();
        int i14 = fixedOrderComparator10.getUnknownObjectBehavior();
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b27 = fixedOrderComparator10.add((java.lang.Object) obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array21);
        try {
            fixedOrderComparator28.setUnknownObjectBehavior((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 2);
        org.junit.Assert.assertTrue(i12 == 2);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(i14 == 2);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b27 == true);
    }

    @Test
    public void test601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test601");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        java.lang.Object obj17 = null;
        java.lang.Object[] obj_array24 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array24);
        fixedOrderComparator25.setUnknownObjectBehavior(0);
        boolean b29 = fixedOrderComparator25.add((java.lang.Object) 1.0f);
        int i30 = fixedOrderComparator25.getUnknownObjectBehavior();
        int i31 = fixedOrderComparator12.compare(obj17, (java.lang.Object) i30);
        int i32 = fixedOrderComparator12.getUnknownObjectBehavior();
        int i33 = fixedOrderComparator12.getUnknownObjectBehavior();
        int i35 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 10.0d);
        int i36 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i37 = fixedOrderComparator0.getUnknownObjectBehavior();
        try {
            fixedOrderComparator0.setUnknownObjectBehavior(1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertNotNull(obj_array24);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertTrue(i31 == (-1));
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(i33 == 0);
        org.junit.Assert.assertTrue(i35 == 0);
        org.junit.Assert.assertTrue(i36 == 0);
        org.junit.Assert.assertTrue(i37 == 0);
    }

    @Test
    public void test602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test602");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i12 = fixedOrderComparator11.getUnknownObjectBehavior();
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator26.setUnknownObjectBehavior(0);
        int i29 = fixedOrderComparator26.getUnknownObjectBehavior();
        java.lang.Object[] obj_array36 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array36);
        java.lang.Object[] obj_array46 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array46);
        java.lang.Object[] obj_array55 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array55);
        fixedOrderComparator57.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array66 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array66);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array66);
        int i70 = fixedOrderComparator57.compare((java.lang.Object) fixedOrderComparator68, (java.lang.Object) (-1.0d));
        boolean b71 = fixedOrderComparator48.add((java.lang.Object) fixedOrderComparator57);
        boolean b72 = fixedOrderComparator57.isLocked();
        int i73 = fixedOrderComparator57.getUnknownObjectBehavior();
        int i74 = fixedOrderComparator26.compare((java.lang.Object) obj_array36, (java.lang.Object) fixedOrderComparator57);
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array36);
        boolean b76 = fixedOrderComparator11.addAsEqual((java.lang.Object) i25, (java.lang.Object) fixedOrderComparator75);
        boolean b77 = fixedOrderComparator75.isLocked();
        boolean b78 = fixedOrderComparator75.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i12 == 2);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i29 == 0);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertNotNull(obj_array66);
        org.junit.Assert.assertTrue(i70 == 0);
        org.junit.Assert.assertTrue(b71 == true);
        org.junit.Assert.assertTrue(b72 == true);
        org.junit.Assert.assertTrue(i73 == 0);
        org.junit.Assert.assertTrue(i74 == 0);
        org.junit.Assert.assertTrue(b76 == true);
        org.junit.Assert.assertTrue(b77 == false);
        org.junit.Assert.assertTrue(b78 == false);
    }

    @Test
    public void test603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test603");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b6 = fixedOrderComparator0.isLocked();
        int i7 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i8 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i9 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 1);
        java.lang.Object[] obj_array18 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        boolean b21 = fixedOrderComparator19.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator22.setUnknownObjectBehavior(0);
        int i25 = fixedOrderComparator22.getUnknownObjectBehavior();
        fixedOrderComparator22.setUnknownObjectBehavior((int) (byte) 0);
        boolean b28 = fixedOrderComparator19.add((java.lang.Object) fixedOrderComparator22);
        java.lang.Object obj29 = null;
        boolean b30 = fixedOrderComparator19.add(obj29);
        java.lang.Object[] obj_array37 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array37);
        fixedOrderComparator39.setUnknownObjectBehavior((int) (short) 0);
        int i42 = fixedOrderComparator39.getUnknownObjectBehavior();
        boolean b43 = fixedOrderComparator19.add((java.lang.Object) fixedOrderComparator39);
        boolean b44 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator39);
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b6 == false);
        org.junit.Assert.assertTrue(i7 == 0);
        org.junit.Assert.assertTrue(i8 == 0);
        org.junit.Assert.assertTrue(i9 == 0);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertNotNull(obj_array37);
        org.junit.Assert.assertTrue(i42 == 0);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertTrue(b44 == true);
    }

    @Test
    public void test604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test604");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator25.setUnknownObjectBehavior(0);
        int i28 = fixedOrderComparator25.getUnknownObjectBehavior();
        boolean b30 = fixedOrderComparator24.addAsEqual((java.lang.Object) i28, (java.lang.Object) (short) 1);
        boolean b31 = fixedOrderComparator24.isLocked();
        boolean b32 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator24);
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertTrue(b32 == true);
    }

    @Test
    public void test605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test605");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        boolean b3 = fixedOrderComparator0.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator4 = new collections.comparators.FixedOrderComparator();
        int i5 = fixedOrderComparator4.getUnknownObjectBehavior();
        boolean b6 = fixedOrderComparator4.isLocked();
        fixedOrderComparator4.setUnknownObjectBehavior(0);
        boolean b9 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator4);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        int i11 = fixedOrderComparator10.getUnknownObjectBehavior();
        java.lang.Object[] obj_array18 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array18);
        boolean b23 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator22);
        int i24 = fixedOrderComparator10.getUnknownObjectBehavior();
        java.lang.Object[] obj_array31 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array31);
        java.lang.Object[] obj_array46 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array46);
        boolean b53 = fixedOrderComparator39.add((java.lang.Object) obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array46);
        java.lang.Object[] obj_array61 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array61);
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array61);
        boolean b64 = fixedOrderComparator54.add((java.lang.Object) obj_array61);
        try {
            boolean b65 = fixedOrderComparator4.addAsEqual((java.lang.Object) i24, (java.lang.Object) obj_array61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(i5 == 2);
        org.junit.Assert.assertTrue(b6 == false);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i11 == 2);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(i24 == 2);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertTrue(b53 == true);
        org.junit.Assert.assertNotNull(obj_array61);
        org.junit.Assert.assertTrue(b64 == true);
    }

    @Test
    public void test606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test606");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b6 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array13 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array13);
        fixedOrderComparator14.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator14.add((java.lang.Object) 1.0f);
        boolean b20 = fixedOrderComparator14.add((java.lang.Object) 1.0f);
        fixedOrderComparator14.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array29);
        boolean b38 = fixedOrderComparator14.add((java.lang.Object) obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array29);
        boolean b42 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator41);
        fixedOrderComparator41.setUnknownObjectBehavior((int) (short) 0);
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b6 == false);
        org.junit.Assert.assertNotNull(obj_array13);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b42 == true);
    }

    @Test
    public void test607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test607");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj18 = null;
        int i19 = fixedOrderComparator10.compare((java.lang.Object) 1.0d, obj18);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        int i32 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b34 = fixedOrderComparator28.addAsEqual((java.lang.Object) i32, (java.lang.Object) (short) 1);
        int i35 = fixedOrderComparator28.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        boolean b44 = fixedOrderComparator43.isLocked();
        boolean b45 = fixedOrderComparator28.add((java.lang.Object) fixedOrderComparator43);
        int i47 = fixedOrderComparator10.compare((java.lang.Object) fixedOrderComparator28, (java.lang.Object) 1L);
        java.lang.Object[] obj_array48 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array48);
        java.lang.Object[] obj_array50 = new java.lang.Object[] { fixedOrderComparator49 };
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator();
        int i59 = fixedOrderComparator58.getUnknownObjectBehavior();
        java.lang.Object[] obj_array66 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array66);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array66);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array66);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array66);
        boolean b71 = fixedOrderComparator58.add((java.lang.Object) fixedOrderComparator70);
        fixedOrderComparator58.setUnknownObjectBehavior(0);
        boolean b74 = fixedOrderComparator58.isLocked();
        try {
            boolean b75 = fixedOrderComparator28.addAsEqual((java.lang.Object) obj_array50, (java.lang.Object) fixedOrderComparator58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertNotNull(obj_array48);
        org.junit.Assert.assertNotNull(obj_array50);
        org.junit.Assert.assertTrue(i59 == 2);
        org.junit.Assert.assertNotNull(obj_array66);
        org.junit.Assert.assertTrue(b71 == true);
        org.junit.Assert.assertTrue(b74 == false);
    }

    @Test
    public void test608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test608");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        java.lang.Object[] obj_array12 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array12);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array12);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        fixedOrderComparator23.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array32 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array32);
        int i36 = fixedOrderComparator23.compare((java.lang.Object) fixedOrderComparator34, (java.lang.Object) (-1.0d));
        boolean b37 = fixedOrderComparator14.add((java.lang.Object) fixedOrderComparator23);
        boolean b38 = fixedOrderComparator23.isLocked();
        boolean b39 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator23);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertNotNull(obj_array12);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertTrue(i36 == 0);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b39 == true);
    }

    @Test
    public void test609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test609");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object obj13 = null;
        boolean b14 = fixedOrderComparator12.add(obj13);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b14 == true);
    }

    @Test
    public void test610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test610");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator();
        int i35 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator34.isLocked();
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        int i39 = fixedOrderComparator12.compare((java.lang.Object) obj_array29, (java.lang.Object) fixedOrderComparator34);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array29);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(i39 == 0);
    }

    @Test
    public void test611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test611");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj18 = null;
        int i19 = fixedOrderComparator10.compare((java.lang.Object) 1.0d, obj18);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        int i32 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b34 = fixedOrderComparator28.addAsEqual((java.lang.Object) i32, (java.lang.Object) (short) 1);
        int i35 = fixedOrderComparator28.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        boolean b44 = fixedOrderComparator43.isLocked();
        boolean b45 = fixedOrderComparator28.add((java.lang.Object) fixedOrderComparator43);
        int i47 = fixedOrderComparator10.compare((java.lang.Object) fixedOrderComparator28, (java.lang.Object) 1L);
        int i48 = fixedOrderComparator10.getUnknownObjectBehavior();
        boolean b49 = fixedOrderComparator10.isLocked();
        boolean b50 = fixedOrderComparator10.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(i48 == 0);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(b50 == true);
    }

    @Test
    public void test612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test612");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b13 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        fixedOrderComparator7.setUnknownObjectBehavior(1);
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator16.setUnknownObjectBehavior(0);
        int i19 = fixedOrderComparator16.getUnknownObjectBehavior();
        fixedOrderComparator16.setUnknownObjectBehavior((int) (byte) 0);
        fixedOrderComparator16.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        fixedOrderComparator31.setUnknownObjectBehavior(0);
        boolean b35 = fixedOrderComparator31.add((java.lang.Object) 1.0f);
        java.lang.Object obj36 = null;
        java.lang.Object[] obj_array43 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array43);
        fixedOrderComparator44.setUnknownObjectBehavior(0);
        boolean b48 = fixedOrderComparator44.add((java.lang.Object) 1.0f);
        int i49 = fixedOrderComparator44.getUnknownObjectBehavior();
        int i50 = fixedOrderComparator31.compare(obj36, (java.lang.Object) i49);
        boolean b51 = fixedOrderComparator31.isLocked();
        int i52 = fixedOrderComparator7.compare((java.lang.Object) 1, (java.lang.Object) b51);
        int i53 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array60 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array60);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array60);
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array60);
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array60);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array60);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array60);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array60);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array60);
        java.lang.Object[] obj_array75 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array75);
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array75);
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator(obj_array75);
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array75);
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array75);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array75);
        boolean b82 = fixedOrderComparator68.add((java.lang.Object) obj_array75);
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator(obj_array75);
        java.lang.Object[] obj_array90 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator91 = new collections.comparators.FixedOrderComparator(obj_array90);
        collections.comparators.FixedOrderComparator fixedOrderComparator92 = new collections.comparators.FixedOrderComparator(obj_array90);
        boolean b93 = fixedOrderComparator83.add((java.lang.Object) obj_array90);
        collections.comparators.FixedOrderComparator fixedOrderComparator94 = new collections.comparators.FixedOrderComparator(obj_array90);
        int i95 = fixedOrderComparator94.getUnknownObjectBehavior();
        java.lang.Object obj96 = null;
        try {
            boolean b97 = fixedOrderComparator7.addAsEqual((java.lang.Object) i95, obj96);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertNotNull(obj_array43);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertTrue(i50 == (-1));
        org.junit.Assert.assertTrue(b51 == true);
        org.junit.Assert.assertTrue(i52 == 0);
        org.junit.Assert.assertTrue(i53 == 1);
        org.junit.Assert.assertNotNull(obj_array60);
        org.junit.Assert.assertNotNull(obj_array75);
        org.junit.Assert.assertTrue(b82 == true);
        org.junit.Assert.assertNotNull(obj_array90);
        org.junit.Assert.assertTrue(b93 == true);
        org.junit.Assert.assertTrue(i95 == 2);
    }

    @Test
    public void test613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test613");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        java.lang.Object obj17 = null;
        java.lang.Object[] obj_array24 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array24);
        fixedOrderComparator25.setUnknownObjectBehavior(0);
        boolean b29 = fixedOrderComparator25.add((java.lang.Object) 1.0f);
        int i30 = fixedOrderComparator25.getUnknownObjectBehavior();
        int i31 = fixedOrderComparator12.compare(obj17, (java.lang.Object) i30);
        int i32 = fixedOrderComparator12.getUnknownObjectBehavior();
        int i33 = fixedOrderComparator12.getUnknownObjectBehavior();
        int i35 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 10.0d);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator();
        int i37 = fixedOrderComparator36.getUnknownObjectBehavior();
        boolean b38 = fixedOrderComparator36.isLocked();
        fixedOrderComparator36.setUnknownObjectBehavior(0);
        boolean b42 = fixedOrderComparator36.add((java.lang.Object) 10L);
        boolean b43 = fixedOrderComparator36.isLocked();
        boolean b44 = fixedOrderComparator36.isLocked();
        try {
            boolean b45 = fixedOrderComparator12.add((java.lang.Object) fixedOrderComparator36);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertNotNull(obj_array24);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertTrue(i31 == (-1));
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(i33 == 0);
        org.junit.Assert.assertTrue(i35 == 0);
        org.junit.Assert.assertTrue(i37 == 2);
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertTrue(b44 == false);
    }

    @Test
    public void test614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test614");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        java.lang.Object[] obj_array12 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array12);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array12);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        fixedOrderComparator23.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array32 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array32);
        int i36 = fixedOrderComparator23.compare((java.lang.Object) fixedOrderComparator34, (java.lang.Object) (-1.0d));
        boolean b37 = fixedOrderComparator14.add((java.lang.Object) fixedOrderComparator23);
        boolean b38 = fixedOrderComparator23.isLocked();
        boolean b39 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator23);
        int i40 = fixedOrderComparator23.getUnknownObjectBehavior();
        boolean b41 = fixedOrderComparator23.isLocked();
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertNotNull(obj_array12);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertTrue(i36 == 0);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(b41 == true);
    }

    @Test
    public void test615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test615");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        int i12 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator7.add((java.lang.Object) 10L);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b24 = fixedOrderComparator22.add((java.lang.Object) (-1.0f));
        fixedOrderComparator22.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array33 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array33);
        int i37 = fixedOrderComparator36.getUnknownObjectBehavior();
        boolean b38 = fixedOrderComparator36.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array46 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        boolean b49 = fixedOrderComparator47.add((java.lang.Object) (-1.0f));
        int i50 = fixedOrderComparator47.getUnknownObjectBehavior();
        java.lang.Object[] obj_array57 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array57);
        fixedOrderComparator59.setUnknownObjectBehavior((int) (short) 0);
        int i62 = fixedOrderComparator59.getUnknownObjectBehavior();
        boolean b63 = fixedOrderComparator47.add((java.lang.Object) i62);
        boolean b64 = fixedOrderComparator39.add((java.lang.Object) fixedOrderComparator47);
        int i65 = fixedOrderComparator22.compare((java.lang.Object) b38, (java.lang.Object) fixedOrderComparator39);
        java.lang.Object[] obj_array73 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator74 = new collections.comparators.FixedOrderComparator(obj_array73);
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array73);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array73);
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array73);
        java.lang.Object[] obj_array78 = new java.lang.Object[] { fixedOrderComparator39, (byte) 10, obj_array73 };
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array73);
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array73);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array73);
        boolean b82 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator81);
        try {
            fixedOrderComparator7.setUnknownObjectBehavior((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertTrue(i37 == 2);
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(i50 == 2);
        org.junit.Assert.assertNotNull(obj_array57);
        org.junit.Assert.assertTrue(i62 == 0);
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue(i65 == 0);
        org.junit.Assert.assertNotNull(obj_array73);
        org.junit.Assert.assertNotNull(obj_array78);
        org.junit.Assert.assertTrue(b82 == true);
    }

    @Test
    public void test616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test616");
        java.lang.Object[] obj_array0 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator1 = new collections.comparators.FixedOrderComparator(obj_array0);
        java.lang.Object[] obj_array2 = new java.lang.Object[] { fixedOrderComparator1 };
        collections.comparators.FixedOrderComparator fixedOrderComparator3 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator4 = new collections.comparators.FixedOrderComparator(obj_array2);
        boolean b5 = fixedOrderComparator4.isLocked();
        int i6 = fixedOrderComparator4.getUnknownObjectBehavior();
        try {
            fixedOrderComparator4.setUnknownObjectBehavior((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array0);
        org.junit.Assert.assertNotNull(obj_array2);
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue(i6 == 2);
    }

    @Test
    public void test617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test617");
        java.lang.Object[] obj_array0 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator1 = new collections.comparators.FixedOrderComparator(obj_array0);
        java.lang.Object[] obj_array2 = new java.lang.Object[] { fixedOrderComparator1 };
        collections.comparators.FixedOrderComparator fixedOrderComparator3 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator4 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator5 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator6 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array2);
        boolean b8 = fixedOrderComparator7.isLocked();
        org.junit.Assert.assertNotNull(obj_array0);
        org.junit.Assert.assertNotNull(obj_array2);
        org.junit.Assert.assertTrue(b8 == false);
    }

    @Test
    public void test618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test618");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator32.setUnknownObjectBehavior(0);
        int i35 = fixedOrderComparator32.getUnknownObjectBehavior();
        boolean b37 = fixedOrderComparator31.addAsEqual((java.lang.Object) i35, (java.lang.Object) (short) 1);
        boolean b38 = fixedOrderComparator31.isLocked();
        try {
            boolean b40 = fixedOrderComparator12.addAsEqual((java.lang.Object) b38, (java.lang.Object) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i35 == 0);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertTrue(b38 == false);
    }

    @Test
    public void test619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test619");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array9 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b11 = fixedOrderComparator8.add((java.lang.Object) obj_array9);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array9);
        int i13 = fixedOrderComparator12.getUnknownObjectBehavior();
        java.lang.Object[] obj_array20 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        boolean b23 = fixedOrderComparator21.add((java.lang.Object) (-1.0f));
        fixedOrderComparator21.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array32 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array32);
        int i36 = fixedOrderComparator35.getUnknownObjectBehavior();
        boolean b37 = fixedOrderComparator35.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array45 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array45);
        boolean b48 = fixedOrderComparator46.add((java.lang.Object) (-1.0f));
        int i49 = fixedOrderComparator46.getUnknownObjectBehavior();
        java.lang.Object[] obj_array56 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array56);
        fixedOrderComparator58.setUnknownObjectBehavior((int) (short) 0);
        int i61 = fixedOrderComparator58.getUnknownObjectBehavior();
        boolean b62 = fixedOrderComparator46.add((java.lang.Object) i61);
        boolean b63 = fixedOrderComparator38.add((java.lang.Object) fixedOrderComparator46);
        int i64 = fixedOrderComparator21.compare((java.lang.Object) b37, (java.lang.Object) fixedOrderComparator38);
        java.lang.Object[] obj_array72 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator(obj_array72);
        collections.comparators.FixedOrderComparator fixedOrderComparator74 = new collections.comparators.FixedOrderComparator(obj_array72);
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array72);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array72);
        java.lang.Object[] obj_array77 = new java.lang.Object[] { fixedOrderComparator38, (byte) 10, obj_array72 };
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator(obj_array72);
        java.lang.Object obj79 = null;
        try {
            boolean b80 = fixedOrderComparator12.addAsEqual((java.lang.Object) obj_array72, obj79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(i13 == 2);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertTrue(i36 == 2);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertNotNull(obj_array45);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertTrue(i49 == 2);
        org.junit.Assert.assertNotNull(obj_array56);
        org.junit.Assert.assertTrue(i61 == 0);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertTrue(b63 == true);
        org.junit.Assert.assertTrue(i64 == 0);
        org.junit.Assert.assertNotNull(obj_array72);
        org.junit.Assert.assertNotNull(obj_array77);
    }

    @Test
    public void test620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test620");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { fixedOrderComparator0, obj_array22 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b39 = fixedOrderComparator37.add((java.lang.Object) (-1.0d));
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        boolean b41 = fixedOrderComparator37.isLocked();
        boolean b42 = fixedOrderComparator37.isLocked();
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(i40 == 2);
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertTrue(b42 == false);
    }

    @Test
    public void test621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test621");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        int i46 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Object obj48 = null;
        int i49 = fixedOrderComparator7.compare(obj47, obj48);
        java.lang.Object[] obj_array56 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array56);
        fixedOrderComparator58.setUnknownObjectBehavior((int) (short) 0);
        int i61 = fixedOrderComparator58.getUnknownObjectBehavior();
        java.lang.Object obj63 = null;
        boolean b64 = fixedOrderComparator58.addAsEqual((java.lang.Object) 10.0f, obj63);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator65.setUnknownObjectBehavior(0);
        int i68 = fixedOrderComparator65.getUnknownObjectBehavior();
        fixedOrderComparator65.setUnknownObjectBehavior((int) (byte) 0);
        boolean b71 = fixedOrderComparator65.isLocked();
        int i72 = fixedOrderComparator65.getUnknownObjectBehavior();
        java.lang.Object[] obj_array79 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array79);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array79);
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array79);
        int i83 = fixedOrderComparator82.getUnknownObjectBehavior();
        int i84 = fixedOrderComparator58.compare((java.lang.Object) fixedOrderComparator65, (java.lang.Object) i83);
        boolean b86 = fixedOrderComparator65.add((java.lang.Object) (short) 0);
        try {
            boolean b87 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator65);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertNotNull(obj_array56);
        org.junit.Assert.assertTrue(i61 == 0);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue(i68 == 0);
        org.junit.Assert.assertTrue(b71 == false);
        org.junit.Assert.assertTrue(i72 == 0);
        org.junit.Assert.assertNotNull(obj_array79);
        org.junit.Assert.assertTrue(i83 == 2);
        org.junit.Assert.assertTrue(i84 == 0);
        org.junit.Assert.assertTrue(b86 == true);
    }

    @Test
    public void test622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test622");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        boolean b3 = fixedOrderComparator0.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator4 = new collections.comparators.FixedOrderComparator();
        int i5 = fixedOrderComparator4.getUnknownObjectBehavior();
        boolean b6 = fixedOrderComparator4.isLocked();
        fixedOrderComparator4.setUnknownObjectBehavior(0);
        boolean b9 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator4);
        java.lang.Object[] obj_array16 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        boolean b19 = fixedOrderComparator17.add((java.lang.Object) (short) 10);
        boolean b20 = fixedOrderComparator17.isLocked();
        fixedOrderComparator17.setUnknownObjectBehavior((int) (short) 0);
        boolean b23 = fixedOrderComparator4.add((java.lang.Object) fixedOrderComparator17);
        boolean b24 = fixedOrderComparator4.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator25.setUnknownObjectBehavior(0);
        int i28 = fixedOrderComparator25.getUnknownObjectBehavior();
        fixedOrderComparator25.setUnknownObjectBehavior((int) (byte) 0);
        boolean b32 = fixedOrderComparator25.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array39 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array39);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array39);
        java.lang.Object[] obj_array42 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        boolean b44 = fixedOrderComparator41.add((java.lang.Object) obj_array42);
        boolean b45 = fixedOrderComparator25.add((java.lang.Object) fixedOrderComparator41);
        fixedOrderComparator41.setUnknownObjectBehavior((int) (short) 0);
        int i48 = fixedOrderComparator41.getUnknownObjectBehavior();
        boolean b49 = fixedOrderComparator4.add((java.lang.Object) i48);
        boolean b50 = fixedOrderComparator4.isLocked();
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(i5 == 2);
        org.junit.Assert.assertTrue(b6 == false);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertNotNull(obj_array39);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(i48 == 0);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(b50 == false);
    }

    @Test
    public void test623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test623");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b12 = fixedOrderComparator10.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        boolean b19 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object obj21 = null;
        int i22 = fixedOrderComparator13.compare((java.lang.Object) 1.0d, obj21);
        boolean b23 = fixedOrderComparator13.isLocked();
        boolean b24 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator13);
        boolean b25 = fixedOrderComparator13.isLocked();
        boolean b26 = fixedOrderComparator13.isLocked();
        int i27 = fixedOrderComparator13.getUnknownObjectBehavior();
        java.lang.Object[] obj_array34 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array34);
        try {
            boolean b36 = fixedOrderComparator13.add((java.lang.Object) obj_array34);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertNotNull(obj_array34);
    }

    @Test
    public void test624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test624");
        java.lang.Object[] obj_array0 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator1 = new collections.comparators.FixedOrderComparator(obj_array0);
        java.lang.Object[] obj_array2 = new java.lang.Object[] { fixedOrderComparator1 };
        collections.comparators.FixedOrderComparator fixedOrderComparator3 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator4 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator5 = new collections.comparators.FixedOrderComparator(obj_array2);
        int i6 = fixedOrderComparator5.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array0);
        org.junit.Assert.assertNotNull(obj_array2);
        org.junit.Assert.assertTrue(i6 == 2);
    }

    @Test
    public void test625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test625");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        int i46 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Object obj48 = null;
        int i49 = fixedOrderComparator7.compare(obj47, obj48);
        java.lang.Object[] obj_array56 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array56);
        java.lang.Object[] obj_array64 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array64);
        int i68 = fixedOrderComparator7.compare((java.lang.Object) obj_array56, (java.lang.Object) fixedOrderComparator67);
        fixedOrderComparator67.setUnknownObjectBehavior((int) (short) 1);
        java.lang.Object[] obj_array77 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator(obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array77);
        boolean b81 = fixedOrderComparator67.add((java.lang.Object) obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator(obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator84 = new collections.comparators.FixedOrderComparator(obj_array77);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertNotNull(obj_array56);
        org.junit.Assert.assertNotNull(obj_array64);
        org.junit.Assert.assertTrue(i68 == 0);
        org.junit.Assert.assertNotNull(obj_array77);
        org.junit.Assert.assertTrue(b81 == true);
    }

    @Test
    public void test626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test626");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        java.lang.Object obj46 = null;
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator47.setUnknownObjectBehavior(0);
        int i50 = fixedOrderComparator47.getUnknownObjectBehavior();
        java.lang.Object[] obj_array57 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array57);
        java.lang.Object[] obj_array67 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array67);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array67);
        java.lang.Object[] obj_array76 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array76);
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator(obj_array76);
        fixedOrderComparator78.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array87 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator88 = new collections.comparators.FixedOrderComparator(obj_array87);
        collections.comparators.FixedOrderComparator fixedOrderComparator89 = new collections.comparators.FixedOrderComparator(obj_array87);
        int i91 = fixedOrderComparator78.compare((java.lang.Object) fixedOrderComparator89, (java.lang.Object) (-1.0d));
        boolean b92 = fixedOrderComparator69.add((java.lang.Object) fixedOrderComparator78);
        boolean b93 = fixedOrderComparator78.isLocked();
        int i94 = fixedOrderComparator78.getUnknownObjectBehavior();
        int i95 = fixedOrderComparator47.compare((java.lang.Object) obj_array57, (java.lang.Object) fixedOrderComparator78);
        int i96 = fixedOrderComparator7.compare(obj46, (java.lang.Object) i95);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertTrue(i50 == 0);
        org.junit.Assert.assertNotNull(obj_array57);
        org.junit.Assert.assertNotNull(obj_array67);
        org.junit.Assert.assertNotNull(obj_array76);
        org.junit.Assert.assertNotNull(obj_array87);
        org.junit.Assert.assertTrue(i91 == 0);
        org.junit.Assert.assertTrue(b92 == true);
        org.junit.Assert.assertTrue(b93 == true);
        org.junit.Assert.assertTrue(i94 == 0);
        org.junit.Assert.assertTrue(i95 == 0);
        org.junit.Assert.assertTrue(i96 == (-1));
    }

    @Test
    public void test627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test627");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { fixedOrderComparator0, obj_array22 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array22);
        int i32 = fixedOrderComparator31.getUnknownObjectBehavior();
        java.lang.Object[] obj_array39 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array39);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array39);
        fixedOrderComparator41.setUnknownObjectBehavior((int) (short) 0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i46 = fixedOrderComparator41.getUnknownObjectBehavior();
        java.lang.Object[] obj_array53 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array53);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array53);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array53);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array53);
        int i58 = fixedOrderComparator57.getUnknownObjectBehavior();
        int i59 = fixedOrderComparator57.getUnknownObjectBehavior();
        boolean b60 = fixedOrderComparator57.isLocked();
        boolean b61 = fixedOrderComparator57.isLocked();
        boolean b62 = fixedOrderComparator41.add((java.lang.Object) fixedOrderComparator57);
        java.lang.Object[] obj_array69 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array69);
        fixedOrderComparator71.setUnknownObjectBehavior((int) (short) 0);
        int i74 = fixedOrderComparator71.getUnknownObjectBehavior();
        int i75 = fixedOrderComparator71.getUnknownObjectBehavior();
        int i76 = fixedOrderComparator71.getUnknownObjectBehavior();
        java.lang.Object[] obj_array83 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator84 = new collections.comparators.FixedOrderComparator(obj_array83);
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array83);
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array83);
        collections.comparators.FixedOrderComparator fixedOrderComparator87 = new collections.comparators.FixedOrderComparator(obj_array83);
        int i88 = fixedOrderComparator87.getUnknownObjectBehavior();
        int i89 = fixedOrderComparator87.getUnknownObjectBehavior();
        boolean b90 = fixedOrderComparator87.isLocked();
        boolean b91 = fixedOrderComparator87.isLocked();
        boolean b92 = fixedOrderComparator71.add((java.lang.Object) fixedOrderComparator87);
        int i93 = fixedOrderComparator71.getUnknownObjectBehavior();
        try {
            int i94 = fixedOrderComparator31.compare((java.lang.Object) fixedOrderComparator41, (java.lang.Object) fixedOrderComparator71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i32 == 2);
        org.junit.Assert.assertNotNull(obj_array39);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 0);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertNotNull(obj_array53);
        org.junit.Assert.assertTrue(i58 == 2);
        org.junit.Assert.assertTrue(i59 == 2);
        org.junit.Assert.assertTrue(b60 == false);
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertTrue(b62 == true);
        org.junit.Assert.assertNotNull(obj_array69);
        org.junit.Assert.assertTrue(i74 == 0);
        org.junit.Assert.assertTrue(i75 == 0);
        org.junit.Assert.assertTrue(i76 == 0);
        org.junit.Assert.assertNotNull(obj_array83);
        org.junit.Assert.assertTrue(i88 == 2);
        org.junit.Assert.assertTrue(i89 == 2);
        org.junit.Assert.assertTrue(b90 == false);
        org.junit.Assert.assertTrue(b91 == false);
        org.junit.Assert.assertTrue(b92 == true);
        org.junit.Assert.assertTrue(i93 == 0);
    }

    @Test
    public void test628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test628");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        boolean b21 = fixedOrderComparator7.isLocked();
        boolean b22 = fixedOrderComparator7.isLocked();
        boolean b23 = fixedOrderComparator7.isLocked();
        int i24 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i25 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array32 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        fixedOrderComparator33.setUnknownObjectBehavior(0);
        boolean b37 = fixedOrderComparator33.add((java.lang.Object) 1.0f);
        java.lang.Object obj38 = null;
        java.lang.Object[] obj_array45 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array45);
        fixedOrderComparator46.setUnknownObjectBehavior(0);
        boolean b50 = fixedOrderComparator46.add((java.lang.Object) 1.0f);
        int i51 = fixedOrderComparator46.getUnknownObjectBehavior();
        int i52 = fixedOrderComparator33.compare(obj38, (java.lang.Object) i51);
        java.lang.Object[] obj_array59 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array59);
        java.lang.Object[] obj_array62 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array62);
        boolean b64 = fixedOrderComparator61.add((java.lang.Object) obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array62);
        boolean b68 = fixedOrderComparator7.addAsEqual((java.lang.Object) i51, (java.lang.Object) obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array62);
        int i71 = fixedOrderComparator70.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertNotNull(obj_array45);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertTrue(i51 == 0);
        org.junit.Assert.assertTrue(i52 == (-1));
        org.junit.Assert.assertNotNull(obj_array59);
        org.junit.Assert.assertNotNull(obj_array62);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue(b68 == true);
        org.junit.Assert.assertTrue(i71 == 2);
    }

    @Test
    public void test629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test629");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        boolean b27 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array34 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array34);
        int i40 = fixedOrderComparator39.getUnknownObjectBehavior();
        fixedOrderComparator39.setUnknownObjectBehavior((int) (byte) 1);
        java.lang.Object[] obj_array49 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array49);
        boolean b52 = fixedOrderComparator50.add((java.lang.Object) (-1.0f));
        fixedOrderComparator50.setUnknownObjectBehavior((int) (short) 0);
        boolean b55 = fixedOrderComparator50.isLocked();
        int i56 = fixedOrderComparator7.compare((java.lang.Object) (byte) 1, (java.lang.Object) fixedOrderComparator50);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertNotNull(obj_array34);
        org.junit.Assert.assertTrue(i40 == 2);
        org.junit.Assert.assertNotNull(obj_array49);
        org.junit.Assert.assertTrue(b52 == true);
        org.junit.Assert.assertTrue(b55 == false);
        org.junit.Assert.assertTrue(i56 == 0);
    }

    @Test
    public void test630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test630");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b12 = fixedOrderComparator10.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        boolean b19 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object obj21 = null;
        int i22 = fixedOrderComparator13.compare((java.lang.Object) 1.0d, obj21);
        boolean b23 = fixedOrderComparator13.isLocked();
        boolean b24 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object[] obj_array31 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        int i37 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b39 = fixedOrderComparator33.addAsEqual((java.lang.Object) i37, (java.lang.Object) (short) 1);
        int i40 = fixedOrderComparator33.getUnknownObjectBehavior();
        java.lang.Object[] obj_array47 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array47);
        boolean b49 = fixedOrderComparator48.isLocked();
        boolean b50 = fixedOrderComparator33.add((java.lang.Object) fixedOrderComparator48);
        int i51 = fixedOrderComparator33.getUnknownObjectBehavior();
        boolean b52 = fixedOrderComparator33.isLocked();
        int i53 = fixedOrderComparator33.getUnknownObjectBehavior();
        int i54 = fixedOrderComparator33.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator();
        int i56 = fixedOrderComparator55.getUnknownObjectBehavior();
        java.lang.Object[] obj_array63 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array63);
        boolean b68 = fixedOrderComparator55.add((java.lang.Object) fixedOrderComparator67);
        fixedOrderComparator55.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array77 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator(obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator(obj_array77);
        java.lang.Object[] obj_array84 = new java.lang.Object[] { fixedOrderComparator55, obj_array77 };
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array77);
        int i87 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator33, (java.lang.Object) obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator88 = new collections.comparators.FixedOrderComparator(obj_array77);
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertTrue(i37 == 0);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(i40 == 2);
        org.junit.Assert.assertNotNull(obj_array47);
        org.junit.Assert.assertTrue(b49 == false);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertTrue(i51 == 2);
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertTrue(i53 == 2);
        org.junit.Assert.assertTrue(i54 == 2);
        org.junit.Assert.assertTrue(i56 == 2);
        org.junit.Assert.assertNotNull(obj_array63);
        org.junit.Assert.assertTrue(b68 == true);
        org.junit.Assert.assertNotNull(obj_array77);
        org.junit.Assert.assertNotNull(obj_array84);
        org.junit.Assert.assertTrue(i87 == 0);
    }

    @Test
    public void test631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test631");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array9 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b11 = fixedOrderComparator8.add((java.lang.Object) obj_array9);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array9);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array9);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b15 = fixedOrderComparator14.isLocked();
        int i16 = fixedOrderComparator14.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b15 == false);
        org.junit.Assert.assertTrue(i16 == 2);
    }

    @Test
    public void test632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test632");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator8.isLocked();
        boolean b10 = fixedOrderComparator8.isLocked();
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        boolean b20 = fixedOrderComparator18.add((java.lang.Object) (-1.0f));
        fixedOrderComparator18.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array29);
        int i33 = fixedOrderComparator32.getUnknownObjectBehavior();
        boolean b34 = fixedOrderComparator32.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        boolean b45 = fixedOrderComparator43.add((java.lang.Object) (-1.0f));
        int i46 = fixedOrderComparator43.getUnknownObjectBehavior();
        java.lang.Object[] obj_array53 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array53);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array53);
        fixedOrderComparator55.setUnknownObjectBehavior((int) (short) 0);
        int i58 = fixedOrderComparator55.getUnknownObjectBehavior();
        boolean b59 = fixedOrderComparator43.add((java.lang.Object) i58);
        boolean b60 = fixedOrderComparator35.add((java.lang.Object) fixedOrderComparator43);
        int i61 = fixedOrderComparator18.compare((java.lang.Object) b34, (java.lang.Object) fixedOrderComparator35);
        java.lang.Object[] obj_array69 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator(obj_array69);
        java.lang.Object[] obj_array74 = new java.lang.Object[] { fixedOrderComparator35, (byte) 10, obj_array69 };
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array69);
        boolean b78 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator77);
        int i79 = fixedOrderComparator8.getUnknownObjectBehavior();
        try {
            fixedOrderComparator8.setUnknownObjectBehavior((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertTrue(b10 == false);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i33 == 2);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(i46 == 2);
        org.junit.Assert.assertNotNull(obj_array53);
        org.junit.Assert.assertTrue(i58 == 0);
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertTrue(i61 == 0);
        org.junit.Assert.assertNotNull(obj_array69);
        org.junit.Assert.assertNotNull(obj_array74);
        org.junit.Assert.assertTrue(b78 == true);
        org.junit.Assert.assertTrue(i79 == 2);
    }

    @Test
    public void test633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test633");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        fixedOrderComparator0.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        fixedOrderComparator23.setUnknownObjectBehavior(0);
        boolean b26 = fixedOrderComparator15.add((java.lang.Object) 0);
        boolean b27 = fixedOrderComparator15.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator();
        int i29 = fixedOrderComparator28.getUnknownObjectBehavior();
        boolean b30 = fixedOrderComparator15.add((java.lang.Object) i29);
        int i32 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator15, (java.lang.Object) 100);
        boolean b33 = fixedOrderComparator15.isLocked();
        boolean b34 = fixedOrderComparator15.isLocked();
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertTrue(i29 == 2);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertTrue(b34 == false);
    }

    @Test
    public void test634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test634");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array16 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        boolean b19 = fixedOrderComparator17.add((java.lang.Object) (-1.0f));
        fixedOrderComparator17.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array28 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array28);
        int i32 = fixedOrderComparator31.getUnknownObjectBehavior();
        boolean b33 = fixedOrderComparator31.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array41 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array41);
        boolean b44 = fixedOrderComparator42.add((java.lang.Object) (-1.0f));
        int i45 = fixedOrderComparator42.getUnknownObjectBehavior();
        java.lang.Object[] obj_array52 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array52);
        fixedOrderComparator54.setUnknownObjectBehavior((int) (short) 0);
        int i57 = fixedOrderComparator54.getUnknownObjectBehavior();
        boolean b58 = fixedOrderComparator42.add((java.lang.Object) i57);
        boolean b59 = fixedOrderComparator34.add((java.lang.Object) fixedOrderComparator42);
        int i60 = fixedOrderComparator17.compare((java.lang.Object) b33, (java.lang.Object) fixedOrderComparator34);
        java.lang.Object[] obj_array68 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array68);
        java.lang.Object[] obj_array73 = new java.lang.Object[] { fixedOrderComparator34, (byte) 10, obj_array68 };
        collections.comparators.FixedOrderComparator fixedOrderComparator74 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array68);
        boolean b76 = fixedOrderComparator9.add((java.lang.Object) fixedOrderComparator75);
        boolean b77 = fixedOrderComparator9.isLocked();
        boolean b78 = fixedOrderComparator9.isLocked();
        boolean b79 = fixedOrderComparator9.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(i32 == 2);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertTrue(i45 == 2);
        org.junit.Assert.assertNotNull(obj_array52);
        org.junit.Assert.assertTrue(i57 == 0);
        org.junit.Assert.assertTrue(b58 == false);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertTrue(i60 == 0);
        org.junit.Assert.assertNotNull(obj_array68);
        org.junit.Assert.assertNotNull(obj_array73);
        org.junit.Assert.assertTrue(b76 == true);
        org.junit.Assert.assertTrue(b77 == false);
        org.junit.Assert.assertTrue(b78 == false);
        org.junit.Assert.assertTrue(b79 == false);
    }

    @Test
    public void test635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test635");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator3 = new collections.comparators.FixedOrderComparator();
        int i4 = fixedOrderComparator3.getUnknownObjectBehavior();
        boolean b5 = fixedOrderComparator3.isLocked();
        boolean b6 = fixedOrderComparator0.add((java.lang.Object) b5);
        java.lang.Object[] obj_array13 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array13);
        fixedOrderComparator14.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator14.add((java.lang.Object) 1.0f);
        java.lang.Object obj19 = null;
        java.lang.Object[] obj_array26 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        fixedOrderComparator27.setUnknownObjectBehavior(0);
        boolean b31 = fixedOrderComparator27.add((java.lang.Object) 1.0f);
        int i32 = fixedOrderComparator27.getUnknownObjectBehavior();
        int i33 = fixedOrderComparator14.compare(obj19, (java.lang.Object) i32);
        int i34 = fixedOrderComparator14.getUnknownObjectBehavior();
        boolean b35 = fixedOrderComparator14.isLocked();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        fixedOrderComparator44.setUnknownObjectBehavior((int) (short) 0);
        int i47 = fixedOrderComparator44.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator48.setUnknownObjectBehavior(0);
        int i51 = fixedOrderComparator48.getUnknownObjectBehavior();
        int i52 = fixedOrderComparator14.compare((java.lang.Object) i47, (java.lang.Object) fixedOrderComparator48);
        java.lang.Object[] obj_array53 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array53);
        java.lang.Object[] obj_array61 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array61);
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array61);
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array61);
        int i65 = fixedOrderComparator64.getUnknownObjectBehavior();
        boolean b66 = fixedOrderComparator64.isLocked();
        int i67 = fixedOrderComparator48.compare((java.lang.Object) fixedOrderComparator54, (java.lang.Object) fixedOrderComparator64);
        boolean b68 = fixedOrderComparator0.add((java.lang.Object) i67);
        try {
            fixedOrderComparator0.setUnknownObjectBehavior((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(i4 == 2);
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertNotNull(obj_array13);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(i33 == (-1));
        org.junit.Assert.assertTrue(i34 == 0);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(i51 == 0);
        org.junit.Assert.assertTrue(i52 == 1);
        org.junit.Assert.assertNotNull(obj_array53);
        org.junit.Assert.assertNotNull(obj_array61);
        org.junit.Assert.assertTrue(i65 == 2);
        org.junit.Assert.assertTrue(b66 == false);
        org.junit.Assert.assertTrue(i67 == 0);
        org.junit.Assert.assertTrue(b68 == true);
    }

    @Test
    public void test636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test636");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b11 = fixedOrderComparator10.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == false);
    }

    @Test
    public void test637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test637");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i12 = fixedOrderComparator11.getUnknownObjectBehavior();
        fixedOrderComparator11.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array21);
        int i29 = fixedOrderComparator28.getUnknownObjectBehavior();
        int i30 = fixedOrderComparator28.getUnknownObjectBehavior();
        java.lang.Object[] obj_array31 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        int i33 = fixedOrderComparator32.getUnknownObjectBehavior();
        boolean b34 = fixedOrderComparator32.isLocked();
        int i35 = fixedOrderComparator32.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator32.isLocked();
        try {
            boolean b37 = fixedOrderComparator11.addAsEqual((java.lang.Object) fixedOrderComparator28, (java.lang.Object) b36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i12 == 2);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(i29 == 2);
        org.junit.Assert.assertTrue(i30 == 2);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertTrue(i33 == 2);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(b36 == false);
    }

    @Test
    public void test638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test638");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b13 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b14 = fixedOrderComparator7.isLocked();
        boolean b15 = fixedOrderComparator7.isLocked();
        int i16 = fixedOrderComparator7.getUnknownObjectBehavior();
        try {
            fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertTrue(b15 == false);
        org.junit.Assert.assertTrue(i16 == 0);
    }

    @Test
    public void test639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test639");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        int i46 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Object obj48 = null;
        int i49 = fixedOrderComparator7.compare(obj47, obj48);
        java.lang.Object[] obj_array56 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array56);
        java.lang.Object[] obj_array64 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array64);
        int i68 = fixedOrderComparator7.compare((java.lang.Object) obj_array56, (java.lang.Object) fixedOrderComparator67);
        int i69 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i70 = fixedOrderComparator7.getUnknownObjectBehavior();
        try {
            fixedOrderComparator7.setUnknownObjectBehavior((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertNotNull(obj_array56);
        org.junit.Assert.assertNotNull(obj_array64);
        org.junit.Assert.assertTrue(i68 == 0);
        org.junit.Assert.assertTrue(i69 == 0);
        org.junit.Assert.assertTrue(i70 == 0);
    }

    @Test
    public void test640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test640");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        int i11 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object obj13 = null;
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) 10.0f, obj13);
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        int i18 = fixedOrderComparator15.getUnknownObjectBehavior();
        fixedOrderComparator15.setUnknownObjectBehavior((int) (byte) 0);
        boolean b21 = fixedOrderComparator15.isLocked();
        int i22 = fixedOrderComparator15.getUnknownObjectBehavior();
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array29);
        int i33 = fixedOrderComparator32.getUnknownObjectBehavior();
        int i34 = fixedOrderComparator8.compare((java.lang.Object) fixedOrderComparator15, (java.lang.Object) i33);
        boolean b36 = fixedOrderComparator15.add((java.lang.Object) (short) 0);
        boolean b37 = fixedOrderComparator15.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i18 == 0);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i33 == 2);
        org.junit.Assert.assertTrue(i34 == 0);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(b37 == false);
    }

    @Test
    public void test641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test641");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator9.setUnknownObjectBehavior(0);
        int i12 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) i12, (java.lang.Object) (short) 1);
        int i15 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b24 = fixedOrderComparator23.isLocked();
        boolean b25 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator23);
        int i26 = fixedOrderComparator8.getUnknownObjectBehavior();
        boolean b27 = fixedOrderComparator8.isLocked();
        int i28 = fixedOrderComparator8.getUnknownObjectBehavior();
        int i29 = fixedOrderComparator8.getUnknownObjectBehavior();
        fixedOrderComparator8.setUnknownObjectBehavior((int) (byte) 0);
        java.lang.Object[] obj_array38 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array38);
        boolean b41 = fixedOrderComparator39.add((java.lang.Object) (-1.0f));
        int i42 = fixedOrderComparator39.getUnknownObjectBehavior();
        java.lang.Object[] obj_array49 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array49);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array49);
        fixedOrderComparator51.setUnknownObjectBehavior((int) (short) 0);
        int i54 = fixedOrderComparator51.getUnknownObjectBehavior();
        boolean b55 = fixedOrderComparator39.add((java.lang.Object) i54);
        int i56 = fixedOrderComparator39.getUnknownObjectBehavior();
        int i57 = fixedOrderComparator39.getUnknownObjectBehavior();
        boolean b58 = fixedOrderComparator8.add((java.lang.Object) i57);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i15 == 2);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(i26 == 2);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertTrue(i28 == 2);
        org.junit.Assert.assertTrue(i29 == 2);
        org.junit.Assert.assertNotNull(obj_array38);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertTrue(i42 == 2);
        org.junit.Assert.assertNotNull(obj_array49);
        org.junit.Assert.assertTrue(i54 == 0);
        org.junit.Assert.assertTrue(b55 == false);
        org.junit.Assert.assertTrue(i56 == 2);
        org.junit.Assert.assertTrue(i57 == 2);
        org.junit.Assert.assertTrue(b58 == true);
    }

    @Test
    public void test642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test642");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        int i11 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object obj13 = null;
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) 10.0f, obj13);
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator();
        int i16 = fixedOrderComparator15.getUnknownObjectBehavior();
        java.lang.Object[] obj_array23 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array23);
        boolean b28 = fixedOrderComparator15.add((java.lang.Object) fixedOrderComparator27);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b31 = fixedOrderComparator15.isLocked();
        int i33 = fixedOrderComparator8.compare((java.lang.Object) fixedOrderComparator15, (java.lang.Object) 2);
        java.lang.Object[] obj_array40 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array40);
        int i46 = fixedOrderComparator45.getUnknownObjectBehavior();
        fixedOrderComparator45.setUnknownObjectBehavior((int) (byte) 1);
        try {
            boolean b49 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator45);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i16 == 2);
        org.junit.Assert.assertNotNull(obj_array23);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertTrue(i33 == 0);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(i46 == 2);
    }

    @Test
    public void test643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test643");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator9.setUnknownObjectBehavior(0);
        int i12 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) i12, (java.lang.Object) (short) 1);
        boolean b15 = fixedOrderComparator8.isLocked();
        try {
            fixedOrderComparator8.setUnknownObjectBehavior((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(b15 == false);
    }

    @Test
    public void test644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test644");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b6 = fixedOrderComparator0.isLocked();
        int i7 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i8 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i9 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array16 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        boolean b19 = fixedOrderComparator17.add((java.lang.Object) (-1.0f));
        int i20 = fixedOrderComparator17.getUnknownObjectBehavior();
        java.lang.Object[] obj_array27 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array27);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array27);
        fixedOrderComparator29.setUnknownObjectBehavior((int) (short) 0);
        int i32 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b33 = fixedOrderComparator17.add((java.lang.Object) i32);
        int i34 = fixedOrderComparator17.getUnknownObjectBehavior();
        int i35 = fixedOrderComparator17.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator17.isLocked();
        java.lang.Object[] obj_array43 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array43);
        boolean b46 = fixedOrderComparator45.isLocked();
        int i47 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator17, (java.lang.Object) fixedOrderComparator45);
        int i48 = fixedOrderComparator45.getUnknownObjectBehavior();
        java.lang.Object[] obj_array55 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator();
        int i61 = fixedOrderComparator60.getUnknownObjectBehavior();
        java.lang.Object[] obj_array68 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array68);
        boolean b73 = fixedOrderComparator60.add((java.lang.Object) fixedOrderComparator72);
        fixedOrderComparator60.setUnknownObjectBehavior(0);
        int i76 = fixedOrderComparator60.getUnknownObjectBehavior();
        try {
            int i77 = fixedOrderComparator45.compare((java.lang.Object) obj_array55, (java.lang.Object) i76);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b6 == false);
        org.junit.Assert.assertTrue(i7 == 0);
        org.junit.Assert.assertTrue(i8 == 0);
        org.junit.Assert.assertTrue(i9 == 0);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i20 == 2);
        org.junit.Assert.assertNotNull(obj_array27);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertTrue(i34 == 2);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertNotNull(obj_array43);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(i48 == 2);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(i61 == 2);
        org.junit.Assert.assertNotNull(obj_array68);
        org.junit.Assert.assertTrue(b73 == true);
        org.junit.Assert.assertTrue(i76 == 0);
    }

    @Test
    public void test645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test645");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        int i12 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array19);
        java.lang.Object[] obj_array30 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array30);
        int i36 = fixedOrderComparator7.compare((java.lang.Object) fixedOrderComparator23, (java.lang.Object) fixedOrderComparator35);
        java.lang.Object[] obj_array43 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array43);
        boolean b53 = fixedOrderComparator23.add((java.lang.Object) obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array43);
        fixedOrderComparator54.setUnknownObjectBehavior((int) (short) 1);
        fixedOrderComparator54.setUnknownObjectBehavior(2);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(i36 == 0);
        org.junit.Assert.assertNotNull(obj_array43);
        org.junit.Assert.assertTrue(b53 == true);
    }

    @Test
    public void test646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test646");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { fixedOrderComparator0, obj_array22 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array22);
        int i37 = fixedOrderComparator36.getUnknownObjectBehavior();
        java.lang.Object[] obj_array44 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array44);
        boolean b47 = fixedOrderComparator45.add((java.lang.Object) (-1.0f));
        fixedOrderComparator45.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array57 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array57);
        fixedOrderComparator59.setUnknownObjectBehavior((int) (short) 0);
        int i62 = fixedOrderComparator45.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator59);
        java.lang.Object[] obj_array69 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array69);
        fixedOrderComparator70.setUnknownObjectBehavior(0);
        boolean b74 = fixedOrderComparator70.add((java.lang.Object) 1.0f);
        int i75 = fixedOrderComparator70.getUnknownObjectBehavior();
        boolean b76 = fixedOrderComparator70.isLocked();
        java.lang.Object[] obj_array77 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator(obj_array77);
        java.lang.Object[] obj_array79 = new java.lang.Object[] { fixedOrderComparator78 };
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array79);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array79);
        java.lang.Object[] obj_array88 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator89 = new collections.comparators.FixedOrderComparator(obj_array88);
        collections.comparators.FixedOrderComparator fixedOrderComparator90 = new collections.comparators.FixedOrderComparator(obj_array88);
        int i91 = fixedOrderComparator70.compare((java.lang.Object) fixedOrderComparator81, (java.lang.Object) obj_array88);
        collections.comparators.FixedOrderComparator fixedOrderComparator92 = new collections.comparators.FixedOrderComparator(obj_array88);
        collections.comparators.FixedOrderComparator fixedOrderComparator93 = new collections.comparators.FixedOrderComparator(obj_array88);
        collections.comparators.FixedOrderComparator fixedOrderComparator94 = new collections.comparators.FixedOrderComparator(obj_array88);
        try {
            int i95 = fixedOrderComparator36.compare((java.lang.Object) i62, (java.lang.Object) fixedOrderComparator94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i37 == 2);
        org.junit.Assert.assertNotNull(obj_array44);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertNotNull(obj_array57);
        org.junit.Assert.assertTrue(i62 == 0);
        org.junit.Assert.assertNotNull(obj_array69);
        org.junit.Assert.assertTrue(b74 == true);
        org.junit.Assert.assertTrue(i75 == 0);
        org.junit.Assert.assertTrue(b76 == false);
        org.junit.Assert.assertNotNull(obj_array77);
        org.junit.Assert.assertNotNull(obj_array79);
        org.junit.Assert.assertNotNull(obj_array88);
        org.junit.Assert.assertTrue(i91 == 0);
    }

    @Test
    public void test647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test647");
        java.lang.Object[] obj_array0 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator1 = new collections.comparators.FixedOrderComparator(obj_array0);
        java.lang.Object[] obj_array2 = new java.lang.Object[] { fixedOrderComparator1 };
        collections.comparators.FixedOrderComparator fixedOrderComparator3 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator4 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator5 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator6 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array2);
        java.lang.Object[] obj_array16 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array16);
        java.lang.Object[] obj_array25 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array25);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array25);
        fixedOrderComparator27.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array36 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array36);
        int i40 = fixedOrderComparator27.compare((java.lang.Object) fixedOrderComparator38, (java.lang.Object) (-1.0d));
        boolean b41 = fixedOrderComparator18.add((java.lang.Object) fixedOrderComparator27);
        boolean b42 = fixedOrderComparator18.isLocked();
        java.lang.Object[] obj_array43 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array43);
        int i45 = fixedOrderComparator44.getUnknownObjectBehavior();
        boolean b46 = fixedOrderComparator44.isLocked();
        int i47 = fixedOrderComparator44.getUnknownObjectBehavior();
        boolean b48 = fixedOrderComparator18.add((java.lang.Object) i47);
        java.lang.Object[] obj_array55 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array55);
        fixedOrderComparator57.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array66 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array66);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array66);
        int i70 = fixedOrderComparator57.compare((java.lang.Object) fixedOrderComparator68, (java.lang.Object) (-1.0d));
        boolean b71 = fixedOrderComparator68.isLocked();
        int i72 = fixedOrderComparator68.getUnknownObjectBehavior();
        try {
            boolean b73 = fixedOrderComparator9.addAsEqual((java.lang.Object) i47, (java.lang.Object) fixedOrderComparator68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array0);
        org.junit.Assert.assertNotNull(obj_array2);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertNotNull(obj_array25);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertNotNull(obj_array43);
        org.junit.Assert.assertTrue(i45 == 2);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue(i47 == 2);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertNotNull(obj_array66);
        org.junit.Assert.assertTrue(i70 == 0);
        org.junit.Assert.assertTrue(b71 == false);
        org.junit.Assert.assertTrue(i72 == 2);
    }

    @Test
    public void test648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test648");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b6 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array13 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array13);
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array13);
        fixedOrderComparator15.setUnknownObjectBehavior((int) (short) 0);
        int i18 = fixedOrderComparator15.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator19.setUnknownObjectBehavior(0);
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array29);
        java.lang.Object[] obj_array39 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array39);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array39);
        java.lang.Object[] obj_array48 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array48);
        fixedOrderComparator50.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array59 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array59);
        int i63 = fixedOrderComparator50.compare((java.lang.Object) fixedOrderComparator61, (java.lang.Object) (-1.0d));
        boolean b64 = fixedOrderComparator41.add((java.lang.Object) fixedOrderComparator50);
        boolean b65 = fixedOrderComparator50.isLocked();
        int i66 = fixedOrderComparator50.getUnknownObjectBehavior();
        int i67 = fixedOrderComparator19.compare((java.lang.Object) obj_array29, (java.lang.Object) fixedOrderComparator50);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array29);
        int i69 = fixedOrderComparator68.getUnknownObjectBehavior();
        int i71 = fixedOrderComparator15.compare((java.lang.Object) i69, (java.lang.Object) (-1L));
        java.lang.Object[] obj_array78 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array78);
        java.lang.Object[] obj_array81 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array81);
        boolean b83 = fixedOrderComparator80.add((java.lang.Object) obj_array81);
        collections.comparators.FixedOrderComparator fixedOrderComparator84 = new collections.comparators.FixedOrderComparator(obj_array81);
        int i85 = fixedOrderComparator0.compare((java.lang.Object) i71, (java.lang.Object) fixedOrderComparator84);
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b6 == false);
        org.junit.Assert.assertNotNull(obj_array13);
        org.junit.Assert.assertTrue(i18 == 0);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertNotNull(obj_array39);
        org.junit.Assert.assertNotNull(obj_array48);
        org.junit.Assert.assertNotNull(obj_array59);
        org.junit.Assert.assertTrue(i63 == 0);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue(b65 == true);
        org.junit.Assert.assertTrue(i66 == 0);
        org.junit.Assert.assertTrue(i67 == 0);
        org.junit.Assert.assertTrue(i69 == 2);
        org.junit.Assert.assertTrue(i71 == 0);
        org.junit.Assert.assertNotNull(obj_array78);
        org.junit.Assert.assertNotNull(obj_array81);
        org.junit.Assert.assertTrue(b83 == true);
        org.junit.Assert.assertTrue(i85 == 0);
    }

    @Test
    public void test649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test649");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        boolean b1 = fixedOrderComparator0.isLocked();
        boolean b3 = fixedOrderComparator0.add((java.lang.Object) 10.0d);
        java.lang.Object obj4 = null;
        boolean b5 = fixedOrderComparator0.add(obj4);
        boolean b6 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array13 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array13);
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array13);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        fixedOrderComparator24.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array33 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array33);
        int i37 = fixedOrderComparator24.compare((java.lang.Object) fixedOrderComparator35, (java.lang.Object) (-1.0d));
        boolean b38 = fixedOrderComparator15.add((java.lang.Object) fixedOrderComparator24);
        int i39 = fixedOrderComparator24.getUnknownObjectBehavior();
        boolean b40 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator24);
        org.junit.Assert.assertTrue(b1 == false);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue(b5 == true);
        org.junit.Assert.assertTrue(b6 == false);
        org.junit.Assert.assertNotNull(obj_array13);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertTrue(i37 == 0);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(i39 == 0);
        org.junit.Assert.assertTrue(b40 == true);
    }

    @Test
    public void test650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test650");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        int i46 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Object obj48 = null;
        int i49 = fixedOrderComparator7.compare(obj47, obj48);
        java.lang.Object[] obj_array56 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array56);
        java.lang.Object[] obj_array64 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array64);
        int i68 = fixedOrderComparator7.compare((java.lang.Object) obj_array56, (java.lang.Object) fixedOrderComparator67);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array56);
        int i71 = fixedOrderComparator70.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertNotNull(obj_array56);
        org.junit.Assert.assertNotNull(obj_array64);
        org.junit.Assert.assertTrue(i68 == 0);
        org.junit.Assert.assertTrue(i71 == 2);
    }

    @Test
    public void test651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test651");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object obj10 = null;
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        fixedOrderComparator18.setUnknownObjectBehavior(0);
        boolean b22 = fixedOrderComparator18.add((java.lang.Object) 1.0f);
        int i23 = fixedOrderComparator18.getUnknownObjectBehavior();
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array30);
        java.lang.Object[] obj_array41 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array41);
        int i47 = fixedOrderComparator18.compare((java.lang.Object) fixedOrderComparator34, (java.lang.Object) fixedOrderComparator46);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array54);
        boolean b64 = fixedOrderComparator34.add((java.lang.Object) obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array54);
        fixedOrderComparator65.setUnknownObjectBehavior((int) (short) 1);
        try {
            int i68 = fixedOrderComparator9.compare(obj10, (java.lang.Object) fixedOrderComparator65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue(i23 == 0);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertTrue(b64 == true);
    }

    @Test
    public void test652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test652");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b13 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object[] obj_array20 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array20);
        java.lang.Object[] obj_array34 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array34);
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        fixedOrderComparator43.setUnknownObjectBehavior(0);
        boolean b46 = fixedOrderComparator35.add((java.lang.Object) 0);
        fixedOrderComparator35.setUnknownObjectBehavior((int) (short) 0);
        boolean b49 = fixedOrderComparator35.isLocked();
        boolean b50 = fixedOrderComparator35.isLocked();
        boolean b51 = fixedOrderComparator35.isLocked();
        int i52 = fixedOrderComparator35.getUnknownObjectBehavior();
        int i53 = fixedOrderComparator35.getUnknownObjectBehavior();
        java.lang.Object[] obj_array60 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array60);
        fixedOrderComparator61.setUnknownObjectBehavior(0);
        boolean b65 = fixedOrderComparator61.add((java.lang.Object) 1.0f);
        java.lang.Object obj66 = null;
        java.lang.Object[] obj_array73 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator74 = new collections.comparators.FixedOrderComparator(obj_array73);
        fixedOrderComparator74.setUnknownObjectBehavior(0);
        boolean b78 = fixedOrderComparator74.add((java.lang.Object) 1.0f);
        int i79 = fixedOrderComparator74.getUnknownObjectBehavior();
        int i80 = fixedOrderComparator61.compare(obj66, (java.lang.Object) i79);
        java.lang.Object[] obj_array87 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator88 = new collections.comparators.FixedOrderComparator(obj_array87);
        collections.comparators.FixedOrderComparator fixedOrderComparator89 = new collections.comparators.FixedOrderComparator(obj_array87);
        java.lang.Object[] obj_array90 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator91 = new collections.comparators.FixedOrderComparator(obj_array90);
        boolean b92 = fixedOrderComparator89.add((java.lang.Object) obj_array90);
        collections.comparators.FixedOrderComparator fixedOrderComparator93 = new collections.comparators.FixedOrderComparator(obj_array90);
        collections.comparators.FixedOrderComparator fixedOrderComparator94 = new collections.comparators.FixedOrderComparator(obj_array90);
        collections.comparators.FixedOrderComparator fixedOrderComparator95 = new collections.comparators.FixedOrderComparator(obj_array90);
        boolean b96 = fixedOrderComparator35.addAsEqual((java.lang.Object) i79, (java.lang.Object) obj_array90);
        collections.comparators.FixedOrderComparator fixedOrderComparator97 = new collections.comparators.FixedOrderComparator(obj_array90);
        collections.comparators.FixedOrderComparator fixedOrderComparator98 = new collections.comparators.FixedOrderComparator(obj_array90);
        try {
            boolean b99 = fixedOrderComparator7.addAsEqual((java.lang.Object) fixedOrderComparator27, (java.lang.Object) obj_array90);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertNotNull(obj_array34);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue(b49 == false);
        org.junit.Assert.assertTrue(b50 == false);
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertTrue(i52 == 0);
        org.junit.Assert.assertTrue(i53 == 0);
        org.junit.Assert.assertNotNull(obj_array60);
        org.junit.Assert.assertTrue(b65 == true);
        org.junit.Assert.assertNotNull(obj_array73);
        org.junit.Assert.assertTrue(b78 == true);
        org.junit.Assert.assertTrue(i79 == 0);
        org.junit.Assert.assertTrue(i80 == (-1));
        org.junit.Assert.assertNotNull(obj_array87);
        org.junit.Assert.assertNotNull(obj_array90);
        org.junit.Assert.assertTrue(b92 == true);
        org.junit.Assert.assertTrue(b96 == true);
    }

    @Test
    public void test653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test653");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator8.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array19 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator22.setUnknownObjectBehavior(0);
        int i25 = fixedOrderComparator22.getUnknownObjectBehavior();
        boolean b27 = fixedOrderComparator21.addAsEqual((java.lang.Object) i25, (java.lang.Object) (short) 1);
        int i28 = fixedOrderComparator21.getUnknownObjectBehavior();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        boolean b37 = fixedOrderComparator36.isLocked();
        boolean b38 = fixedOrderComparator21.add((java.lang.Object) fixedOrderComparator36);
        boolean b39 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator21);
        boolean b41 = fixedOrderComparator21.add((java.lang.Object) 1.0f);
        try {
            fixedOrderComparator21.setUnknownObjectBehavior((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertTrue(i28 == 2);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b41 == false);
    }

    @Test
    public void test654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test654");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b10 = fixedOrderComparator9.isLocked();
        try {
            fixedOrderComparator9.setUnknownObjectBehavior((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b10 == false);
    }

    @Test
    public void test655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test655");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b28 = fixedOrderComparator14.add((java.lang.Object) obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array21);
        java.lang.Object obj30 = null;
        boolean b31 = fixedOrderComparator29.add(obj30);
        boolean b32 = fixedOrderComparator29.isLocked();
        boolean b33 = fixedOrderComparator29.isLocked();
        int i34 = fixedOrderComparator29.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertTrue(i34 == 2);
    }

    @Test
    public void test656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test656");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b28 = fixedOrderComparator14.add((java.lang.Object) obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array21);
        try {
            fixedOrderComparator32.setUnknownObjectBehavior((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b28 == true);
    }

    @Test
    public void test657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test657");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i4 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array11);
        boolean b14 = fixedOrderComparator13.isLocked();
        boolean b15 = fixedOrderComparator13.isLocked();
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b25 = fixedOrderComparator23.add((java.lang.Object) (-1.0f));
        fixedOrderComparator23.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array34 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array34);
        int i38 = fixedOrderComparator37.getUnknownObjectBehavior();
        boolean b39 = fixedOrderComparator37.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array47 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array47);
        boolean b50 = fixedOrderComparator48.add((java.lang.Object) (-1.0f));
        int i51 = fixedOrderComparator48.getUnknownObjectBehavior();
        java.lang.Object[] obj_array58 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array58);
        fixedOrderComparator60.setUnknownObjectBehavior((int) (short) 0);
        int i63 = fixedOrderComparator60.getUnknownObjectBehavior();
        boolean b64 = fixedOrderComparator48.add((java.lang.Object) i63);
        boolean b65 = fixedOrderComparator40.add((java.lang.Object) fixedOrderComparator48);
        int i66 = fixedOrderComparator23.compare((java.lang.Object) b39, (java.lang.Object) fixedOrderComparator40);
        java.lang.Object[] obj_array74 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array74);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array74);
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array74);
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator(obj_array74);
        java.lang.Object[] obj_array79 = new java.lang.Object[] { fixedOrderComparator40, (byte) 10, obj_array74 };
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array74);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array74);
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array74);
        boolean b83 = fixedOrderComparator13.add((java.lang.Object) fixedOrderComparator82);
        int i84 = fixedOrderComparator13.getUnknownObjectBehavior();
        boolean b85 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator13);
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(i4 == 0);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertTrue(b15 == false);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertNotNull(obj_array34);
        org.junit.Assert.assertTrue(i38 == 2);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertNotNull(obj_array47);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertTrue(i51 == 2);
        org.junit.Assert.assertNotNull(obj_array58);
        org.junit.Assert.assertTrue(i63 == 0);
        org.junit.Assert.assertTrue(b64 == false);
        org.junit.Assert.assertTrue(b65 == true);
        org.junit.Assert.assertTrue(i66 == 0);
        org.junit.Assert.assertNotNull(obj_array74);
        org.junit.Assert.assertNotNull(obj_array79);
        org.junit.Assert.assertTrue(b83 == true);
        org.junit.Assert.assertTrue(i84 == 2);
        org.junit.Assert.assertTrue(b85 == true);
    }

    @Test
    public void test658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test658");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i11 = fixedOrderComparator10.getUnknownObjectBehavior();
        int i12 = fixedOrderComparator10.getUnknownObjectBehavior();
        boolean b13 = fixedOrderComparator10.isLocked();
        int i14 = fixedOrderComparator10.getUnknownObjectBehavior();
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b27 = fixedOrderComparator10.add((java.lang.Object) obj_array21);
        java.lang.Object[] obj_array28 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        int i30 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b31 = fixedOrderComparator29.isLocked();
        int i32 = fixedOrderComparator29.getUnknownObjectBehavior();
        java.lang.Object[] obj_array39 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array39);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array39);
        fixedOrderComparator41.setUnknownObjectBehavior((int) (short) 0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        java.lang.Object obj46 = null;
        boolean b47 = fixedOrderComparator41.addAsEqual((java.lang.Object) 10.0f, obj46);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator();
        int i49 = fixedOrderComparator48.getUnknownObjectBehavior();
        java.lang.Object[] obj_array56 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array56);
        boolean b61 = fixedOrderComparator48.add((java.lang.Object) fixedOrderComparator60);
        fixedOrderComparator48.setUnknownObjectBehavior(0);
        boolean b64 = fixedOrderComparator48.isLocked();
        int i66 = fixedOrderComparator41.compare((java.lang.Object) fixedOrderComparator48, (java.lang.Object) 2);
        try {
            boolean b67 = fixedOrderComparator10.addAsEqual((java.lang.Object) i32, (java.lang.Object) fixedOrderComparator41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 2);
        org.junit.Assert.assertTrue(i12 == 2);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(i14 == 2);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(i30 == 2);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertTrue(i32 == 2);
        org.junit.Assert.assertNotNull(obj_array39);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertTrue(i49 == 2);
        org.junit.Assert.assertNotNull(obj_array56);
        org.junit.Assert.assertTrue(b61 == true);
        org.junit.Assert.assertTrue(b64 == false);
        org.junit.Assert.assertTrue(i66 == 0);
    }

    @Test
    public void test659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test659");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator8.setUnknownObjectBehavior(2);
        boolean b13 = fixedOrderComparator8.isLocked();
        boolean b14 = fixedOrderComparator8.isLocked();
        boolean b15 = fixedOrderComparator8.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator();
        int i17 = fixedOrderComparator16.getUnknownObjectBehavior();
        java.lang.Object[] obj_array24 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array24);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array24);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array24);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array24);
        boolean b29 = fixedOrderComparator16.add((java.lang.Object) fixedOrderComparator28);
        fixedOrderComparator16.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array38 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array38);
        java.lang.Object[] obj_array45 = new java.lang.Object[] { fixedOrderComparator16, obj_array38 };
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array38);
        boolean b48 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator47);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertTrue(b15 == false);
        org.junit.Assert.assertTrue(i17 == 2);
        org.junit.Assert.assertNotNull(obj_array24);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertNotNull(obj_array38);
        org.junit.Assert.assertNotNull(obj_array45);
        org.junit.Assert.assertTrue(b48 == true);
    }

    @Test
    public void test660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test660");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b6 = fixedOrderComparator0.add((java.lang.Object) 10L);
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        int i10 = fixedOrderComparator7.getUnknownObjectBehavior();
        fixedOrderComparator7.setUnknownObjectBehavior((int) (byte) 0);
        boolean b14 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        java.lang.Object[] obj_array24 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array24);
        boolean b26 = fixedOrderComparator23.add((java.lang.Object) obj_array24);
        boolean b27 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator23);
        boolean b28 = fixedOrderComparator0.add((java.lang.Object) b27);
        int i29 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array36 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array36);
        fixedOrderComparator38.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator38.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array49 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array49);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array49);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator52.setUnknownObjectBehavior(0);
        int i55 = fixedOrderComparator52.getUnknownObjectBehavior();
        boolean b57 = fixedOrderComparator51.addAsEqual((java.lang.Object) i55, (java.lang.Object) (short) 1);
        int i58 = fixedOrderComparator51.getUnknownObjectBehavior();
        java.lang.Object[] obj_array65 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array65);
        boolean b67 = fixedOrderComparator66.isLocked();
        boolean b68 = fixedOrderComparator51.add((java.lang.Object) fixedOrderComparator66);
        boolean b69 = fixedOrderComparator38.add((java.lang.Object) fixedOrderComparator51);
        boolean b70 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator51);
        int i71 = fixedOrderComparator51.getUnknownObjectBehavior();
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertTrue(i10 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertNotNull(obj_array24);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(i29 == 0);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertNotNull(obj_array49);
        org.junit.Assert.assertTrue(i55 == 0);
        org.junit.Assert.assertTrue(b57 == true);
        org.junit.Assert.assertTrue(i58 == 2);
        org.junit.Assert.assertNotNull(obj_array65);
        org.junit.Assert.assertTrue(b67 == false);
        org.junit.Assert.assertTrue(b68 == true);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertTrue(i71 == 2);
    }

    @Test
    public void test661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test661");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i11 = fixedOrderComparator10.getUnknownObjectBehavior();
        int i12 = fixedOrderComparator10.getUnknownObjectBehavior();
        boolean b13 = fixedOrderComparator10.isLocked();
        int i14 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 1);
        int i17 = fixedOrderComparator10.getUnknownObjectBehavior();
        int i18 = fixedOrderComparator10.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 2);
        org.junit.Assert.assertTrue(i12 == 2);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(i14 == 2);
        org.junit.Assert.assertTrue(i17 == 1);
        org.junit.Assert.assertTrue(i18 == 1);
    }

    @Test
    public void test662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test662");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        java.lang.Object[] obj_array46 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array54);
        int i58 = fixedOrderComparator57.getUnknownObjectBehavior();
        boolean b59 = fixedOrderComparator57.isLocked();
        int i60 = fixedOrderComparator41.compare((java.lang.Object) fixedOrderComparator47, (java.lang.Object) fixedOrderComparator57);
        boolean b61 = fixedOrderComparator57.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator62.setUnknownObjectBehavior(0);
        int i65 = fixedOrderComparator62.getUnknownObjectBehavior();
        fixedOrderComparator62.setUnknownObjectBehavior((int) (byte) 0);
        boolean b69 = fixedOrderComparator62.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array76 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array76);
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator(obj_array76);
        java.lang.Object[] obj_array79 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array79);
        boolean b81 = fixedOrderComparator78.add((java.lang.Object) obj_array79);
        boolean b82 = fixedOrderComparator62.add((java.lang.Object) fixedOrderComparator78);
        fixedOrderComparator78.setUnknownObjectBehavior((int) (short) 0);
        int i85 = fixedOrderComparator78.getUnknownObjectBehavior();
        boolean b86 = fixedOrderComparator57.add((java.lang.Object) i85);
        int i87 = fixedOrderComparator57.getUnknownObjectBehavior();
        java.lang.Object[] obj_array95 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator96 = new collections.comparators.FixedOrderComparator(obj_array95);
        fixedOrderComparator96.setUnknownObjectBehavior(0);
        try {
            int i99 = fixedOrderComparator57.compare((java.lang.Object) (short) 100, (java.lang.Object) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertTrue(i58 == 2);
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertTrue(i60 == 0);
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertTrue(i65 == 0);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertNotNull(obj_array76);
        org.junit.Assert.assertNotNull(obj_array79);
        org.junit.Assert.assertTrue(b81 == true);
        org.junit.Assert.assertTrue(b82 == true);
        org.junit.Assert.assertTrue(i85 == 0);
        org.junit.Assert.assertTrue(b86 == false);
        org.junit.Assert.assertTrue(i87 == 2);
        org.junit.Assert.assertNotNull(obj_array95);
    }

    @Test
    public void test663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test663");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array19 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator21.setUnknownObjectBehavior((int) (short) 0);
        int i24 = fixedOrderComparator7.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator21);
        int i25 = fixedOrderComparator21.getUnknownObjectBehavior();
        fixedOrderComparator21.setUnknownObjectBehavior(1);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator28.setUnknownObjectBehavior(0);
        boolean b31 = fixedOrderComparator28.isLocked();
        boolean b32 = fixedOrderComparator28.isLocked();
        java.lang.Object[] obj_array39 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array39);
        fixedOrderComparator40.setUnknownObjectBehavior(0);
        boolean b44 = fixedOrderComparator40.add((java.lang.Object) 1.0f);
        boolean b46 = fixedOrderComparator40.add((java.lang.Object) 1.0f);
        int i48 = fixedOrderComparator28.compare((java.lang.Object) fixedOrderComparator40, (java.lang.Object) 1.0d);
        fixedOrderComparator40.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array57 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator();
        int i63 = fixedOrderComparator62.getUnknownObjectBehavior();
        boolean b64 = fixedOrderComparator62.isLocked();
        fixedOrderComparator62.setUnknownObjectBehavior(0);
        int i67 = fixedOrderComparator40.compare((java.lang.Object) obj_array57, (java.lang.Object) fixedOrderComparator62);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array57);
        boolean b69 = fixedOrderComparator68.isLocked();
        java.lang.Object[] obj_array76 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array76);
        java.lang.Object[] obj_array84 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array84);
        fixedOrderComparator85.setUnknownObjectBehavior(0);
        boolean b88 = fixedOrderComparator77.add((java.lang.Object) 0);
        boolean b89 = fixedOrderComparator77.isLocked();
        boolean b90 = fixedOrderComparator77.isLocked();
        int i91 = fixedOrderComparator21.compare((java.lang.Object) fixedOrderComparator68, (java.lang.Object) b90);
        int i92 = fixedOrderComparator21.getUnknownObjectBehavior();
        try {
            fixedOrderComparator21.setUnknownObjectBehavior(100);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNotNull(obj_array39);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue(i48 == 0);
        org.junit.Assert.assertNotNull(obj_array57);
        org.junit.Assert.assertTrue(i63 == 2);
        org.junit.Assert.assertTrue(b64 == false);
        org.junit.Assert.assertTrue(i67 == 0);
        org.junit.Assert.assertTrue(b69 == false);
        org.junit.Assert.assertNotNull(obj_array76);
        org.junit.Assert.assertNotNull(obj_array84);
        org.junit.Assert.assertTrue(b88 == false);
        org.junit.Assert.assertTrue(b89 == false);
        org.junit.Assert.assertTrue(b90 == false);
        org.junit.Assert.assertTrue(i91 == 0);
        org.junit.Assert.assertTrue(i92 == 1);
    }

    @Test
    public void test664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test664");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b14 = fixedOrderComparator12.add((java.lang.Object) (short) 1);
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator();
        int i16 = fixedOrderComparator15.getUnknownObjectBehavior();
        boolean b17 = fixedOrderComparator15.isLocked();
        boolean b18 = fixedOrderComparator15.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator();
        int i20 = fixedOrderComparator19.getUnknownObjectBehavior();
        boolean b21 = fixedOrderComparator19.isLocked();
        fixedOrderComparator19.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator15.add((java.lang.Object) fixedOrderComparator19);
        java.lang.Object[] obj_array31 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        boolean b34 = fixedOrderComparator32.add((java.lang.Object) (short) 10);
        boolean b35 = fixedOrderComparator32.isLocked();
        fixedOrderComparator32.setUnknownObjectBehavior((int) (short) 0);
        boolean b38 = fixedOrderComparator19.add((java.lang.Object) fixedOrderComparator32);
        java.lang.Object[] obj_array45 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array45);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array45);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array54);
        fixedOrderComparator56.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array65 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array65);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array65);
        int i69 = fixedOrderComparator56.compare((java.lang.Object) fixedOrderComparator67, (java.lang.Object) (-1.0d));
        boolean b70 = fixedOrderComparator47.add((java.lang.Object) fixedOrderComparator56);
        boolean b71 = fixedOrderComparator47.isLocked();
        try {
            int i72 = fixedOrderComparator12.compare((java.lang.Object) fixedOrderComparator19, (java.lang.Object) fixedOrderComparator47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i16 == 2);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 2);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(b35 == false);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertNotNull(obj_array45);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertNotNull(obj_array65);
        org.junit.Assert.assertTrue(i69 == 0);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertTrue(b71 == false);
    }

    @Test
    public void test665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test665");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        int i11 = fixedOrderComparator8.getUnknownObjectBehavior();
        int i12 = fixedOrderComparator8.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        int i19 = fixedOrderComparator13.getUnknownObjectBehavior();
        boolean b20 = fixedOrderComparator8.add((java.lang.Object) i19);
        int i21 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object[] obj_array28 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        boolean b31 = fixedOrderComparator29.add((java.lang.Object) (-1.0f));
        fixedOrderComparator29.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array40);
        int i44 = fixedOrderComparator43.getUnknownObjectBehavior();
        boolean b45 = fixedOrderComparator43.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array53 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array53);
        boolean b56 = fixedOrderComparator54.add((java.lang.Object) (-1.0f));
        int i57 = fixedOrderComparator54.getUnknownObjectBehavior();
        java.lang.Object[] obj_array64 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array64);
        fixedOrderComparator66.setUnknownObjectBehavior((int) (short) 0);
        int i69 = fixedOrderComparator66.getUnknownObjectBehavior();
        boolean b70 = fixedOrderComparator54.add((java.lang.Object) i69);
        boolean b71 = fixedOrderComparator46.add((java.lang.Object) fixedOrderComparator54);
        int i72 = fixedOrderComparator29.compare((java.lang.Object) b45, (java.lang.Object) fixedOrderComparator46);
        java.lang.Object[] obj_array80 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array80);
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array80);
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator(obj_array80);
        collections.comparators.FixedOrderComparator fixedOrderComparator84 = new collections.comparators.FixedOrderComparator(obj_array80);
        java.lang.Object[] obj_array85 = new java.lang.Object[] { fixedOrderComparator46, (byte) 10, obj_array80 };
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array80);
        collections.comparators.FixedOrderComparator fixedOrderComparator87 = new collections.comparators.FixedOrderComparator(obj_array80);
        collections.comparators.FixedOrderComparator fixedOrderComparator88 = new collections.comparators.FixedOrderComparator(obj_array80);
        java.lang.Object obj89 = null;
        boolean b90 = fixedOrderComparator88.add(obj89);
        int i91 = fixedOrderComparator88.getUnknownObjectBehavior();
        try {
            boolean b93 = fixedOrderComparator8.addAsEqual((java.lang.Object) i91, (java.lang.Object) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 0);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(i44 == 2);
        org.junit.Assert.assertTrue(b45 == false);
        org.junit.Assert.assertNotNull(obj_array53);
        org.junit.Assert.assertTrue(b56 == true);
        org.junit.Assert.assertTrue(i57 == 2);
        org.junit.Assert.assertNotNull(obj_array64);
        org.junit.Assert.assertTrue(i69 == 0);
        org.junit.Assert.assertTrue(b70 == false);
        org.junit.Assert.assertTrue(b71 == true);
        org.junit.Assert.assertTrue(i72 == 0);
        org.junit.Assert.assertNotNull(obj_array80);
        org.junit.Assert.assertNotNull(obj_array85);
        org.junit.Assert.assertTrue(b90 == true);
        org.junit.Assert.assertTrue(i91 == 2);
    }

    @Test
    public void test666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test666");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        fixedOrderComparator0.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        fixedOrderComparator23.setUnknownObjectBehavior(0);
        boolean b26 = fixedOrderComparator15.add((java.lang.Object) 0);
        boolean b27 = fixedOrderComparator15.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator();
        int i29 = fixedOrderComparator28.getUnknownObjectBehavior();
        boolean b30 = fixedOrderComparator15.add((java.lang.Object) i29);
        int i32 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator15, (java.lang.Object) 100);
        java.lang.Object[] obj_array39 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array39);
        java.lang.Object[] obj_array47 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array47);
        fixedOrderComparator48.setUnknownObjectBehavior(0);
        boolean b51 = fixedOrderComparator40.add((java.lang.Object) 0);
        java.lang.Object obj52 = null;
        try {
            boolean b53 = fixedOrderComparator0.addAsEqual((java.lang.Object) b51, obj52);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertTrue(i29 == 2);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertNotNull(obj_array39);
        org.junit.Assert.assertNotNull(obj_array47);
        org.junit.Assert.assertTrue(b51 == false);
    }

    @Test
    public void test667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test667");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i11 = fixedOrderComparator10.getUnknownObjectBehavior();
        int i12 = fixedOrderComparator10.getUnknownObjectBehavior();
        boolean b13 = fixedOrderComparator10.isLocked();
        int i14 = fixedOrderComparator10.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        int i18 = fixedOrderComparator15.getUnknownObjectBehavior();
        java.lang.Object[] obj_array25 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array25);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array25);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array25);
        java.lang.Object[] obj_array35 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        java.lang.Object[] obj_array44 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array44);
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array44);
        fixedOrderComparator46.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array55 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array55);
        int i59 = fixedOrderComparator46.compare((java.lang.Object) fixedOrderComparator57, (java.lang.Object) (-1.0d));
        boolean b60 = fixedOrderComparator37.add((java.lang.Object) fixedOrderComparator46);
        boolean b61 = fixedOrderComparator46.isLocked();
        int i62 = fixedOrderComparator46.getUnknownObjectBehavior();
        int i63 = fixedOrderComparator15.compare((java.lang.Object) obj_array25, (java.lang.Object) fixedOrderComparator46);
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array25);
        int i65 = fixedOrderComparator64.getUnknownObjectBehavior();
        boolean b66 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator64);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 2);
        org.junit.Assert.assertTrue(i12 == 2);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(i14 == 2);
        org.junit.Assert.assertTrue(i18 == 0);
        org.junit.Assert.assertNotNull(obj_array25);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertNotNull(obj_array44);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(i59 == 0);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertTrue(b61 == true);
        org.junit.Assert.assertTrue(i62 == 0);
        org.junit.Assert.assertTrue(i63 == 0);
        org.junit.Assert.assertTrue(i65 == 2);
        org.junit.Assert.assertTrue(b66 == true);
    }

    @Test
    public void test668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test668");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator();
        int i22 = fixedOrderComparator21.getUnknownObjectBehavior();
        java.lang.Object[] obj_array29 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array29);
        boolean b34 = fixedOrderComparator21.add((java.lang.Object) fixedOrderComparator33);
        fixedOrderComparator21.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array43 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array43);
        java.lang.Object[] obj_array50 = new java.lang.Object[] { fixedOrderComparator21, obj_array43 };
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array43);
        java.lang.Object[] obj_array66 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array66);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array66);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array66);
        int i70 = fixedOrderComparator69.getUnknownObjectBehavior();
        boolean b71 = fixedOrderComparator69.isLocked();
        int i72 = fixedOrderComparator69.getUnknownObjectBehavior();
        java.lang.Object[] obj_array79 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array79);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array79);
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array79);
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator(obj_array79);
        boolean b84 = fixedOrderComparator69.add((java.lang.Object) fixedOrderComparator83);
        boolean b85 = fixedOrderComparator69.isLocked();
        try {
            boolean b86 = fixedOrderComparator12.addAsEqual((java.lang.Object) obj_array43, (java.lang.Object) fixedOrderComparator69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertTrue(i22 == 2);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertNotNull(obj_array43);
        org.junit.Assert.assertNotNull(obj_array50);
        org.junit.Assert.assertNotNull(obj_array66);
        org.junit.Assert.assertTrue(i70 == 2);
        org.junit.Assert.assertTrue(b71 == false);
        org.junit.Assert.assertTrue(i72 == 2);
        org.junit.Assert.assertNotNull(obj_array79);
        org.junit.Assert.assertTrue(b84 == true);
        org.junit.Assert.assertTrue(b85 == false);
    }

    @Test
    public void test669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test669");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i14 = fixedOrderComparator13.getUnknownObjectBehavior();
        int i15 = fixedOrderComparator13.getUnknownObjectBehavior();
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i14 == 2);
        org.junit.Assert.assertTrue(i15 == 2);
        org.junit.Assert.assertTrue(i16 == 2);
    }

    @Test
    public void test670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test670");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i28 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b29 = fixedOrderComparator7.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator30.setUnknownObjectBehavior(0);
        int i33 = fixedOrderComparator30.getUnknownObjectBehavior();
        fixedOrderComparator30.setUnknownObjectBehavior((int) (byte) 0);
        int i36 = fixedOrderComparator30.getUnknownObjectBehavior();
        int i37 = fixedOrderComparator30.getUnknownObjectBehavior();
        boolean b38 = fixedOrderComparator30.isLocked();
        java.lang.Object[] obj_array45 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array45);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array45);
        java.lang.Object[] obj_array48 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array48);
        boolean b50 = fixedOrderComparator47.add((java.lang.Object) obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array48);
        int i52 = fixedOrderComparator51.getUnknownObjectBehavior();
        boolean b53 = fixedOrderComparator51.isLocked();
        try {
            boolean b54 = fixedOrderComparator7.addAsEqual((java.lang.Object) b38, (java.lang.Object) fixedOrderComparator51);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertTrue(i33 == 0);
        org.junit.Assert.assertTrue(i36 == 0);
        org.junit.Assert.assertTrue(i37 == 0);
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertNotNull(obj_array45);
        org.junit.Assert.assertNotNull(obj_array48);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertTrue(i52 == 2);
        org.junit.Assert.assertTrue(b53 == false);
    }

    @Test
    public void test671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test671");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i10 = fixedOrderComparator9.getUnknownObjectBehavior();
        fixedOrderComparator9.setUnknownObjectBehavior(0);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i10 == 2);
    }

    @Test
    public void test672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test672");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        boolean b46 = fixedOrderComparator7.isLocked();
        boolean b47 = fixedOrderComparator7.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(b47 == true);
    }

    @Test
    public void test673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test673");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        int i12 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator7.add((java.lang.Object) 10L);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b24 = fixedOrderComparator22.add((java.lang.Object) (-1.0f));
        fixedOrderComparator22.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array33 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array33);
        int i37 = fixedOrderComparator36.getUnknownObjectBehavior();
        boolean b38 = fixedOrderComparator36.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array46 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        boolean b49 = fixedOrderComparator47.add((java.lang.Object) (-1.0f));
        int i50 = fixedOrderComparator47.getUnknownObjectBehavior();
        java.lang.Object[] obj_array57 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array57);
        fixedOrderComparator59.setUnknownObjectBehavior((int) (short) 0);
        int i62 = fixedOrderComparator59.getUnknownObjectBehavior();
        boolean b63 = fixedOrderComparator47.add((java.lang.Object) i62);
        boolean b64 = fixedOrderComparator39.add((java.lang.Object) fixedOrderComparator47);
        int i65 = fixedOrderComparator22.compare((java.lang.Object) b38, (java.lang.Object) fixedOrderComparator39);
        java.lang.Object[] obj_array73 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator74 = new collections.comparators.FixedOrderComparator(obj_array73);
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array73);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array73);
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array73);
        java.lang.Object[] obj_array78 = new java.lang.Object[] { fixedOrderComparator39, (byte) 10, obj_array73 };
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array73);
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array73);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array73);
        boolean b82 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator81);
        boolean b83 = fixedOrderComparator81.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertTrue(i37 == 2);
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(i50 == 2);
        org.junit.Assert.assertNotNull(obj_array57);
        org.junit.Assert.assertTrue(i62 == 0);
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue(i65 == 0);
        org.junit.Assert.assertNotNull(obj_array73);
        org.junit.Assert.assertNotNull(obj_array78);
        org.junit.Assert.assertTrue(b82 == true);
        org.junit.Assert.assertTrue(b83 == false);
    }

    @Test
    public void test674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test674");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i11 = fixedOrderComparator10.getUnknownObjectBehavior();
        int i12 = fixedOrderComparator10.getUnknownObjectBehavior();
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator10.isLocked();
        java.lang.Object[] obj_array21 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b24 = fixedOrderComparator22.add((java.lang.Object) (-1.0f));
        fixedOrderComparator22.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array34 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array34);
        fixedOrderComparator36.setUnknownObjectBehavior((int) (short) 0);
        int i39 = fixedOrderComparator22.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator36);
        fixedOrderComparator36.setUnknownObjectBehavior((int) (byte) 0);
        boolean b42 = fixedOrderComparator10.add((java.lang.Object) (byte) 0);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 2);
        org.junit.Assert.assertTrue(i12 == 2);
        org.junit.Assert.assertTrue(i13 == 2);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNotNull(obj_array34);
        org.junit.Assert.assertTrue(i39 == 0);
        org.junit.Assert.assertTrue(b42 == true);
    }

    @Test
    public void test675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test675");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b10 = fixedOrderComparator9.isLocked();
        int i11 = fixedOrderComparator9.getUnknownObjectBehavior();
        int i12 = fixedOrderComparator9.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b10 == false);
        org.junit.Assert.assertTrue(i11 == 2);
        org.junit.Assert.assertTrue(i12 == 2);
    }

    @Test
    public void test676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test676");
        java.lang.Object[] obj_array0 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator1 = new collections.comparators.FixedOrderComparator(obj_array0);
        collections.comparators.FixedOrderComparator fixedOrderComparator2 = new collections.comparators.FixedOrderComparator(obj_array0);
        collections.comparators.FixedOrderComparator fixedOrderComparator3 = new collections.comparators.FixedOrderComparator(obj_array0);
        collections.comparators.FixedOrderComparator fixedOrderComparator4 = new collections.comparators.FixedOrderComparator(obj_array0);
        boolean b5 = fixedOrderComparator4.isLocked();
        org.junit.Assert.assertNotNull(obj_array0);
        org.junit.Assert.assertTrue(b5 == false);
    }

    @Test
    public void test677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test677");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        int i11 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object obj13 = null;
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) 10.0f, obj13);
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        int i18 = fixedOrderComparator15.getUnknownObjectBehavior();
        fixedOrderComparator15.setUnknownObjectBehavior((int) (byte) 0);
        boolean b21 = fixedOrderComparator15.isLocked();
        int i22 = fixedOrderComparator15.getUnknownObjectBehavior();
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array29);
        int i33 = fixedOrderComparator32.getUnknownObjectBehavior();
        int i34 = fixedOrderComparator8.compare((java.lang.Object) fixedOrderComparator15, (java.lang.Object) i33);
        boolean b35 = fixedOrderComparator15.isLocked();
        int i36 = fixedOrderComparator15.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i18 == 0);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i33 == 2);
        org.junit.Assert.assertTrue(i34 == 0);
        org.junit.Assert.assertTrue(b35 == false);
        org.junit.Assert.assertTrue(i36 == 0);
    }

    @Test
    public void test678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test678");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        try {
            fixedOrderComparator7.setUnknownObjectBehavior((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
    }

    @Test
    public void test679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test679");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        fixedOrderComparator11.setUnknownObjectBehavior(0);
        boolean b15 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        boolean b17 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator();
        boolean b19 = fixedOrderComparator18.isLocked();
        boolean b21 = fixedOrderComparator18.add((java.lang.Object) 10.0d);
        int i22 = fixedOrderComparator0.compare((java.lang.Object) b17, (java.lang.Object) fixedOrderComparator18);
        int i23 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b24 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array31 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array31);
        fixedOrderComparator33.setUnknownObjectBehavior((int) (short) 0);
        int i36 = fixedOrderComparator33.getUnknownObjectBehavior();
        int i37 = fixedOrderComparator33.getUnknownObjectBehavior();
        java.lang.Object[] obj_array44 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array44);
        fixedOrderComparator45.setUnknownObjectBehavior(0);
        boolean b49 = fixedOrderComparator45.add((java.lang.Object) 1.0f);
        boolean b51 = fixedOrderComparator45.add((java.lang.Object) 1.0f);
        fixedOrderComparator45.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array60 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array60);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array60);
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array60);
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array60);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array60);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array60);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array60);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array60);
        boolean b69 = fixedOrderComparator45.add((java.lang.Object) obj_array60);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array60);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array60);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array60);
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator(obj_array60);
        collections.comparators.FixedOrderComparator fixedOrderComparator74 = new collections.comparators.FixedOrderComparator(obj_array60);
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array60);
        try {
            boolean b76 = fixedOrderComparator0.addAsEqual((java.lang.Object) i37, (java.lang.Object) obj_array60);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(i23 == 0);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertTrue(i36 == 0);
        org.junit.Assert.assertTrue(i37 == 0);
        org.junit.Assert.assertNotNull(obj_array44);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertNotNull(obj_array60);
        org.junit.Assert.assertTrue(b69 == true);
    }

    @Test
    public void test680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test680");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        boolean b3 = fixedOrderComparator0.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator4 = new collections.comparators.FixedOrderComparator();
        int i5 = fixedOrderComparator4.getUnknownObjectBehavior();
        boolean b6 = fixedOrderComparator4.isLocked();
        fixedOrderComparator4.setUnknownObjectBehavior(0);
        boolean b9 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator4);
        java.lang.Object[] obj_array16 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array16);
        java.lang.Object[] obj_array31 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array31);
        boolean b38 = fixedOrderComparator24.add((java.lang.Object) obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array31);
        boolean b41 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator40);
        java.lang.Object[] obj_array48 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array48);
        java.lang.Object[] obj_array63 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array63);
        boolean b70 = fixedOrderComparator56.add((java.lang.Object) obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array63);
        boolean b73 = fixedOrderComparator40.add((java.lang.Object) fixedOrderComparator72);
        try {
            fixedOrderComparator40.setUnknownObjectBehavior(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(i5 == 2);
        org.junit.Assert.assertTrue(b6 == false);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertNotNull(obj_array48);
        org.junit.Assert.assertNotNull(obj_array63);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertTrue(b73 == true);
    }

    @Test
    public void test681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test681");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        boolean b21 = fixedOrderComparator7.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator();
        int i23 = fixedOrderComparator22.getUnknownObjectBehavior();
        boolean b24 = fixedOrderComparator22.isLocked();
        fixedOrderComparator22.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array33 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array43 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator46.setUnknownObjectBehavior(0);
        int i49 = fixedOrderComparator46.getUnknownObjectBehavior();
        boolean b51 = fixedOrderComparator45.addAsEqual((java.lang.Object) i49, (java.lang.Object) (short) 1);
        int i53 = fixedOrderComparator34.compare((java.lang.Object) fixedOrderComparator45, (java.lang.Object) '#');
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator54.setUnknownObjectBehavior(0);
        boolean b57 = fixedOrderComparator54.isLocked();
        boolean b58 = fixedOrderComparator54.isLocked();
        java.lang.Object[] obj_array65 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array65);
        fixedOrderComparator66.setUnknownObjectBehavior(0);
        boolean b70 = fixedOrderComparator66.add((java.lang.Object) 1.0f);
        boolean b72 = fixedOrderComparator66.add((java.lang.Object) 1.0f);
        int i74 = fixedOrderComparator54.compare((java.lang.Object) fixedOrderComparator66, (java.lang.Object) 1.0d);
        fixedOrderComparator66.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array83 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator84 = new collections.comparators.FixedOrderComparator(obj_array83);
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array83);
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array83);
        collections.comparators.FixedOrderComparator fixedOrderComparator87 = new collections.comparators.FixedOrderComparator(obj_array83);
        collections.comparators.FixedOrderComparator fixedOrderComparator88 = new collections.comparators.FixedOrderComparator();
        int i89 = fixedOrderComparator88.getUnknownObjectBehavior();
        boolean b90 = fixedOrderComparator88.isLocked();
        fixedOrderComparator88.setUnknownObjectBehavior(0);
        int i93 = fixedOrderComparator66.compare((java.lang.Object) obj_array83, (java.lang.Object) fixedOrderComparator88);
        boolean b94 = fixedOrderComparator45.add((java.lang.Object) fixedOrderComparator66);
        try {
            boolean b95 = fixedOrderComparator7.addAsEqual((java.lang.Object) fixedOrderComparator22, (java.lang.Object) fixedOrderComparator45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(i23 == 2);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertNotNull(obj_array43);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertTrue(b51 == true);
        org.junit.Assert.assertTrue(i53 == 0);
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertTrue(b58 == false);
        org.junit.Assert.assertNotNull(obj_array65);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertTrue(b72 == false);
        org.junit.Assert.assertTrue(i74 == 0);
        org.junit.Assert.assertNotNull(obj_array83);
        org.junit.Assert.assertTrue(i89 == 2);
        org.junit.Assert.assertTrue(b90 == false);
        org.junit.Assert.assertTrue(i93 == 0);
        org.junit.Assert.assertTrue(b94 == true);
    }

    @Test
    public void test682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test682");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        fixedOrderComparator19.setUnknownObjectBehavior((int) (short) 0);
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        java.lang.Object obj24 = null;
        boolean b25 = fixedOrderComparator19.addAsEqual((java.lang.Object) 10.0f, obj24);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator();
        int i27 = fixedOrderComparator26.getUnknownObjectBehavior();
        java.lang.Object[] obj_array34 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array34);
        boolean b39 = fixedOrderComparator26.add((java.lang.Object) fixedOrderComparator38);
        fixedOrderComparator26.setUnknownObjectBehavior(0);
        boolean b42 = fixedOrderComparator26.isLocked();
        int i44 = fixedOrderComparator19.compare((java.lang.Object) fixedOrderComparator26, (java.lang.Object) 2);
        boolean b45 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator26);
        java.lang.Object[] obj_array52 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array52);
        fixedOrderComparator53.setUnknownObjectBehavior(0);
        boolean b57 = fixedOrderComparator53.add((java.lang.Object) 1.0f);
        java.lang.Object obj58 = null;
        java.lang.Object[] obj_array65 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array65);
        fixedOrderComparator66.setUnknownObjectBehavior(0);
        boolean b70 = fixedOrderComparator66.add((java.lang.Object) 1.0f);
        int i71 = fixedOrderComparator66.getUnknownObjectBehavior();
        int i72 = fixedOrderComparator53.compare(obj58, (java.lang.Object) i71);
        int i73 = fixedOrderComparator53.getUnknownObjectBehavior();
        boolean b74 = fixedOrderComparator53.isLocked();
        java.lang.Object[] obj_array81 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array81);
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator(obj_array81);
        fixedOrderComparator83.setUnknownObjectBehavior((int) (short) 0);
        int i86 = fixedOrderComparator83.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator87 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator87.setUnknownObjectBehavior(0);
        int i90 = fixedOrderComparator87.getUnknownObjectBehavior();
        int i91 = fixedOrderComparator53.compare((java.lang.Object) i86, (java.lang.Object) fixedOrderComparator87);
        boolean b92 = fixedOrderComparator26.add((java.lang.Object) fixedOrderComparator87);
        try {
            fixedOrderComparator26.setUnknownObjectBehavior((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(i27 == 2);
        org.junit.Assert.assertNotNull(obj_array34);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertNotNull(obj_array52);
        org.junit.Assert.assertTrue(b57 == true);
        org.junit.Assert.assertNotNull(obj_array65);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertTrue(i71 == 0);
        org.junit.Assert.assertTrue(i72 == (-1));
        org.junit.Assert.assertTrue(i73 == 0);
        org.junit.Assert.assertTrue(b74 == true);
        org.junit.Assert.assertNotNull(obj_array81);
        org.junit.Assert.assertTrue(i86 == 0);
        org.junit.Assert.assertTrue(i90 == 0);
        org.junit.Assert.assertTrue(i91 == 1);
        org.junit.Assert.assertTrue(b92 == true);
    }

    @Test
    public void test683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test683");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array10);
        java.lang.Object[] obj_array20 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array20);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        fixedOrderComparator31.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array40);
        int i44 = fixedOrderComparator31.compare((java.lang.Object) fixedOrderComparator42, (java.lang.Object) (-1.0d));
        boolean b45 = fixedOrderComparator22.add((java.lang.Object) fixedOrderComparator31);
        boolean b46 = fixedOrderComparator31.isLocked();
        int i47 = fixedOrderComparator31.getUnknownObjectBehavior();
        int i48 = fixedOrderComparator0.compare((java.lang.Object) obj_array10, (java.lang.Object) fixedOrderComparator31);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array10);
        try {
            fixedOrderComparator50.setUnknownObjectBehavior(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(i48 == 0);
    }

    @Test
    public void test684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test684");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b6 = fixedOrderComparator0.isLocked();
        int i7 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i8 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i9 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array16 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        boolean b19 = fixedOrderComparator17.add((java.lang.Object) (-1.0f));
        int i20 = fixedOrderComparator17.getUnknownObjectBehavior();
        java.lang.Object[] obj_array27 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array27);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array27);
        fixedOrderComparator29.setUnknownObjectBehavior((int) (short) 0);
        int i32 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b33 = fixedOrderComparator17.add((java.lang.Object) i32);
        int i34 = fixedOrderComparator17.getUnknownObjectBehavior();
        int i35 = fixedOrderComparator17.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator17.isLocked();
        java.lang.Object[] obj_array43 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array43);
        boolean b46 = fixedOrderComparator45.isLocked();
        int i47 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator17, (java.lang.Object) fixedOrderComparator45);
        try {
            fixedOrderComparator0.setUnknownObjectBehavior((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b6 == false);
        org.junit.Assert.assertTrue(i7 == 0);
        org.junit.Assert.assertTrue(i8 == 0);
        org.junit.Assert.assertTrue(i9 == 0);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i20 == 2);
        org.junit.Assert.assertNotNull(obj_array27);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertTrue(i34 == 2);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertNotNull(obj_array43);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue(i47 == 0);
    }

    @Test
    public void test685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test685");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator8.setUnknownObjectBehavior(0);
        boolean b13 = fixedOrderComparator8.isLocked();
        boolean b14 = fixedOrderComparator8.isLocked();
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array21);
        java.lang.Object[] obj_array36 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array36);
        boolean b43 = fixedOrderComparator29.add((java.lang.Object) obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array36);
        java.lang.Object[] obj_array51 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array51);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array51);
        boolean b54 = fixedOrderComparator44.add((java.lang.Object) obj_array51);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array51);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array51);
        java.lang.Object obj57 = null;
        try {
            boolean b58 = fixedOrderComparator8.addAsEqual((java.lang.Object) fixedOrderComparator56, obj57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertNotNull(obj_array51);
        org.junit.Assert.assertTrue(b54 == true);
    }

    @Test
    public void test686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test686");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array16 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        boolean b19 = fixedOrderComparator17.add((java.lang.Object) (-1.0f));
        fixedOrderComparator17.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array28 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array28);
        int i32 = fixedOrderComparator31.getUnknownObjectBehavior();
        boolean b33 = fixedOrderComparator31.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array41 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array41);
        boolean b44 = fixedOrderComparator42.add((java.lang.Object) (-1.0f));
        int i45 = fixedOrderComparator42.getUnknownObjectBehavior();
        java.lang.Object[] obj_array52 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array52);
        fixedOrderComparator54.setUnknownObjectBehavior((int) (short) 0);
        int i57 = fixedOrderComparator54.getUnknownObjectBehavior();
        boolean b58 = fixedOrderComparator42.add((java.lang.Object) i57);
        boolean b59 = fixedOrderComparator34.add((java.lang.Object) fixedOrderComparator42);
        int i60 = fixedOrderComparator17.compare((java.lang.Object) b33, (java.lang.Object) fixedOrderComparator34);
        java.lang.Object[] obj_array68 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array68);
        java.lang.Object[] obj_array73 = new java.lang.Object[] { fixedOrderComparator34, (byte) 10, obj_array68 };
        collections.comparators.FixedOrderComparator fixedOrderComparator74 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array68);
        boolean b76 = fixedOrderComparator9.add((java.lang.Object) fixedOrderComparator75);
        int i77 = fixedOrderComparator75.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(i32 == 2);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertTrue(i45 == 2);
        org.junit.Assert.assertNotNull(obj_array52);
        org.junit.Assert.assertTrue(i57 == 0);
        org.junit.Assert.assertTrue(b58 == false);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertTrue(i60 == 0);
        org.junit.Assert.assertNotNull(obj_array68);
        org.junit.Assert.assertNotNull(obj_array73);
        org.junit.Assert.assertTrue(b76 == true);
        org.junit.Assert.assertTrue(i77 == 2);
    }

    @Test
    public void test687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test687");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array10);
        java.lang.Object[] obj_array20 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array20);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        fixedOrderComparator31.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array40);
        int i44 = fixedOrderComparator31.compare((java.lang.Object) fixedOrderComparator42, (java.lang.Object) (-1.0d));
        boolean b45 = fixedOrderComparator22.add((java.lang.Object) fixedOrderComparator31);
        boolean b46 = fixedOrderComparator31.isLocked();
        int i47 = fixedOrderComparator31.getUnknownObjectBehavior();
        int i48 = fixedOrderComparator0.compare((java.lang.Object) obj_array10, (java.lang.Object) fixedOrderComparator31);
        try {
            fixedOrderComparator0.setUnknownObjectBehavior((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(i48 == 0);
    }

    @Test
    public void test688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test688");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        int i12 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i13 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator7.isLocked();
        boolean b15 = fixedOrderComparator7.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertTrue(b15 == false);
    }

    @Test
    public void test689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test689");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array18 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array18);
        int i22 = fixedOrderComparator21.getUnknownObjectBehavior();
        boolean b23 = fixedOrderComparator21.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array31 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        boolean b34 = fixedOrderComparator32.add((java.lang.Object) (-1.0f));
        int i35 = fixedOrderComparator32.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        fixedOrderComparator44.setUnknownObjectBehavior((int) (short) 0);
        int i47 = fixedOrderComparator44.getUnknownObjectBehavior();
        boolean b48 = fixedOrderComparator32.add((java.lang.Object) i47);
        boolean b49 = fixedOrderComparator24.add((java.lang.Object) fixedOrderComparator32);
        int i50 = fixedOrderComparator7.compare((java.lang.Object) b23, (java.lang.Object) fixedOrderComparator24);
        java.lang.Object[] obj_array58 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array58);
        java.lang.Object[] obj_array63 = new java.lang.Object[] { fixedOrderComparator24, (byte) 10, obj_array58 };
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array58);
        java.lang.Object obj67 = null;
        boolean b68 = fixedOrderComparator66.add(obj67);
        int i69 = fixedOrderComparator66.getUnknownObjectBehavior();
        int i70 = fixedOrderComparator66.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertTrue(i22 == 2);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(i50 == 0);
        org.junit.Assert.assertNotNull(obj_array58);
        org.junit.Assert.assertNotNull(obj_array63);
        org.junit.Assert.assertTrue(b68 == true);
        org.junit.Assert.assertTrue(i69 == 2);
        org.junit.Assert.assertTrue(i70 == 2);
    }

    @Test
    public void test690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test690");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i11 = fixedOrderComparator10.getUnknownObjectBehavior();
        int i12 = fixedOrderComparator10.getUnknownObjectBehavior();
        boolean b13 = fixedOrderComparator10.isLocked();
        int i14 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 1);
        int i17 = fixedOrderComparator10.getUnknownObjectBehavior();
        boolean b18 = fixedOrderComparator10.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 2);
        org.junit.Assert.assertTrue(i12 == 2);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(i14 == 2);
        org.junit.Assert.assertTrue(i17 == 1);
        org.junit.Assert.assertTrue(b18 == false);
    }

    @Test
    public void test691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test691");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        boolean b1 = fixedOrderComparator0.isLocked();
        boolean b3 = fixedOrderComparator0.add((java.lang.Object) 10.0d);
        java.lang.Object obj4 = null;
        boolean b5 = fixedOrderComparator0.add(obj4);
        java.lang.Object[] obj_array12 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array12);
        java.lang.Object[] obj_array20 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        fixedOrderComparator21.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator13.add((java.lang.Object) 0);
        fixedOrderComparator13.setUnknownObjectBehavior((int) (short) 0);
        boolean b27 = fixedOrderComparator13.isLocked();
        boolean b28 = fixedOrderComparator13.isLocked();
        boolean b29 = fixedOrderComparator13.isLocked();
        int i30 = fixedOrderComparator13.getUnknownObjectBehavior();
        int i31 = fixedOrderComparator13.getUnknownObjectBehavior();
        java.lang.Object[] obj_array38 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array38);
        fixedOrderComparator39.setUnknownObjectBehavior(0);
        boolean b43 = fixedOrderComparator39.add((java.lang.Object) 1.0f);
        java.lang.Object obj44 = null;
        java.lang.Object[] obj_array51 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array51);
        fixedOrderComparator52.setUnknownObjectBehavior(0);
        boolean b56 = fixedOrderComparator52.add((java.lang.Object) 1.0f);
        int i57 = fixedOrderComparator52.getUnknownObjectBehavior();
        int i58 = fixedOrderComparator39.compare(obj44, (java.lang.Object) i57);
        java.lang.Object[] obj_array65 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array65);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array65);
        java.lang.Object[] obj_array68 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array68);
        boolean b70 = fixedOrderComparator67.add((java.lang.Object) obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator(obj_array68);
        boolean b74 = fixedOrderComparator13.addAsEqual((java.lang.Object) i57, (java.lang.Object) obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array68);
        boolean b77 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator76);
        try {
            fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b1 == false);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue(b5 == true);
        org.junit.Assert.assertNotNull(obj_array12);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertTrue(i31 == 0);
        org.junit.Assert.assertNotNull(obj_array38);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertNotNull(obj_array51);
        org.junit.Assert.assertTrue(b56 == true);
        org.junit.Assert.assertTrue(i57 == 0);
        org.junit.Assert.assertTrue(i58 == (-1));
        org.junit.Assert.assertNotNull(obj_array65);
        org.junit.Assert.assertNotNull(obj_array68);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertTrue(b74 == true);
        org.junit.Assert.assertTrue(b77 == true);
    }

    @Test
    public void test692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test692");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        boolean b21 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array28 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator31.setUnknownObjectBehavior(0);
        int i34 = fixedOrderComparator31.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator30.addAsEqual((java.lang.Object) i34, (java.lang.Object) (short) 1);
        int i37 = fixedOrderComparator30.getUnknownObjectBehavior();
        java.lang.Object[] obj_array44 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array44);
        boolean b46 = fixedOrderComparator45.isLocked();
        boolean b47 = fixedOrderComparator30.add((java.lang.Object) fixedOrderComparator45);
        int i48 = fixedOrderComparator30.getUnknownObjectBehavior();
        java.lang.Object[] obj_array55 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        fixedOrderComparator56.setUnknownObjectBehavior(0);
        boolean b60 = fixedOrderComparator56.add((java.lang.Object) 1.0f);
        int i61 = fixedOrderComparator56.getUnknownObjectBehavior();
        boolean b62 = fixedOrderComparator56.isLocked();
        int i63 = fixedOrderComparator0.compare((java.lang.Object) i48, (java.lang.Object) fixedOrderComparator56);
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator64.setUnknownObjectBehavior(0);
        int i67 = fixedOrderComparator64.getUnknownObjectBehavior();
        fixedOrderComparator64.setUnknownObjectBehavior((int) (byte) 0);
        int i70 = fixedOrderComparator64.getUnknownObjectBehavior();
        int i71 = fixedOrderComparator64.getUnknownObjectBehavior();
        boolean b72 = fixedOrderComparator64.isLocked();
        java.lang.Object[] obj_array79 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array79);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array79);
        fixedOrderComparator81.setUnknownObjectBehavior((int) (short) 0);
        boolean b85 = fixedOrderComparator81.add((java.lang.Object) ' ');
        try {
            boolean b86 = fixedOrderComparator56.addAsEqual((java.lang.Object) b72, (java.lang.Object) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(i34 == 0);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(i37 == 2);
        org.junit.Assert.assertNotNull(obj_array44);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertTrue(i48 == 2);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertTrue(i61 == 0);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertTrue(i63 == 0);
        org.junit.Assert.assertTrue(i67 == 0);
        org.junit.Assert.assertTrue(i70 == 0);
        org.junit.Assert.assertTrue(i71 == 0);
        org.junit.Assert.assertTrue(b72 == false);
        org.junit.Assert.assertNotNull(obj_array79);
        org.junit.Assert.assertTrue(b85 == true);
    }

    @Test
    public void test693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test693");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b28 = fixedOrderComparator14.add((java.lang.Object) obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array21);
        java.lang.Object[] obj_array36 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array36);
        boolean b39 = fixedOrderComparator29.add((java.lang.Object) obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array36);
        int i43 = fixedOrderComparator42.getUnknownObjectBehavior();
        try {
            fixedOrderComparator42.setUnknownObjectBehavior((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(i43 == 2);
    }

    @Test
    public void test694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test694");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        int i12 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i13 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array20 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        java.lang.Object[] obj_array28 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        boolean b32 = fixedOrderComparator21.add((java.lang.Object) 0);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator33.setUnknownObjectBehavior(0);
        boolean b36 = fixedOrderComparator33.isLocked();
        boolean b37 = fixedOrderComparator33.isLocked();
        java.lang.Object[] obj_array44 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array44);
        fixedOrderComparator45.setUnknownObjectBehavior(0);
        boolean b49 = fixedOrderComparator45.add((java.lang.Object) 1.0f);
        boolean b51 = fixedOrderComparator45.add((java.lang.Object) 1.0f);
        int i53 = fixedOrderComparator33.compare((java.lang.Object) fixedOrderComparator45, (java.lang.Object) 1.0d);
        int i54 = fixedOrderComparator33.getUnknownObjectBehavior();
        boolean b55 = fixedOrderComparator33.isLocked();
        boolean b56 = fixedOrderComparator33.isLocked();
        boolean b57 = fixedOrderComparator21.add((java.lang.Object) fixedOrderComparator33);
        boolean b58 = fixedOrderComparator7.add((java.lang.Object) b57);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertNotNull(obj_array44);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertTrue(i53 == 0);
        org.junit.Assert.assertTrue(i54 == 0);
        org.junit.Assert.assertTrue(b55 == true);
        org.junit.Assert.assertTrue(b56 == true);
        org.junit.Assert.assertTrue(b57 == true);
        org.junit.Assert.assertTrue(b58 == true);
    }

    @Test
    public void test695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test695");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b28 = fixedOrderComparator14.add((java.lang.Object) obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array21);
        java.lang.Object[] obj_array36 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array36);
        boolean b39 = fixedOrderComparator29.add((java.lang.Object) obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array36);
        int i41 = fixedOrderComparator40.getUnknownObjectBehavior();
        boolean b42 = fixedOrderComparator40.isLocked();
        try {
            fixedOrderComparator40.setUnknownObjectBehavior(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(i41 == 2);
        org.junit.Assert.assertTrue(b42 == false);
    }

    @Test
    public void test696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test696");
        java.lang.Object[] obj_array0 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator1 = new collections.comparators.FixedOrderComparator(obj_array0);
        int i2 = fixedOrderComparator1.getUnknownObjectBehavior();
        boolean b3 = fixedOrderComparator1.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator4 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator4.setUnknownObjectBehavior(0);
        boolean b7 = fixedOrderComparator4.isLocked();
        boolean b8 = fixedOrderComparator4.isLocked();
        java.lang.Object[] obj_array15 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array15);
        fixedOrderComparator16.setUnknownObjectBehavior(0);
        boolean b20 = fixedOrderComparator16.add((java.lang.Object) 1.0f);
        boolean b22 = fixedOrderComparator16.add((java.lang.Object) 1.0f);
        int i24 = fixedOrderComparator4.compare((java.lang.Object) fixedOrderComparator16, (java.lang.Object) 1.0d);
        fixedOrderComparator16.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array33 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator();
        int i39 = fixedOrderComparator38.getUnknownObjectBehavior();
        boolean b40 = fixedOrderComparator38.isLocked();
        fixedOrderComparator38.setUnknownObjectBehavior(0);
        int i43 = fixedOrderComparator16.compare((java.lang.Object) obj_array33, (java.lang.Object) fixedOrderComparator38);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array33);
        boolean b45 = fixedOrderComparator44.isLocked();
        java.lang.Object[] obj_array52 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator();
        int i63 = fixedOrderComparator62.getUnknownObjectBehavior();
        java.lang.Object[] obj_array70 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array70);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array70);
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator(obj_array70);
        collections.comparators.FixedOrderComparator fixedOrderComparator74 = new collections.comparators.FixedOrderComparator(obj_array70);
        boolean b75 = fixedOrderComparator62.add((java.lang.Object) fixedOrderComparator74);
        fixedOrderComparator62.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array84 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array84);
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array84);
        collections.comparators.FixedOrderComparator fixedOrderComparator87 = new collections.comparators.FixedOrderComparator(obj_array84);
        collections.comparators.FixedOrderComparator fixedOrderComparator88 = new collections.comparators.FixedOrderComparator(obj_array84);
        collections.comparators.FixedOrderComparator fixedOrderComparator89 = new collections.comparators.FixedOrderComparator(obj_array84);
        collections.comparators.FixedOrderComparator fixedOrderComparator90 = new collections.comparators.FixedOrderComparator(obj_array84);
        java.lang.Object[] obj_array91 = new java.lang.Object[] { fixedOrderComparator62, obj_array84 };
        collections.comparators.FixedOrderComparator fixedOrderComparator92 = new collections.comparators.FixedOrderComparator(obj_array84);
        collections.comparators.FixedOrderComparator fixedOrderComparator93 = new collections.comparators.FixedOrderComparator(obj_array84);
        collections.comparators.FixedOrderComparator fixedOrderComparator94 = new collections.comparators.FixedOrderComparator(obj_array84);
        boolean b95 = fixedOrderComparator61.add((java.lang.Object) obj_array84);
        try {
            boolean b96 = fixedOrderComparator1.addAsEqual((java.lang.Object) fixedOrderComparator44, (java.lang.Object) fixedOrderComparator61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array0);
        org.junit.Assert.assertTrue(i2 == 2);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(obj_array15);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertTrue(i39 == 2);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertTrue(i43 == 0);
        org.junit.Assert.assertTrue(b45 == false);
        org.junit.Assert.assertNotNull(obj_array52);
        org.junit.Assert.assertTrue(i63 == 2);
        org.junit.Assert.assertNotNull(obj_array70);
        org.junit.Assert.assertTrue(b75 == true);
        org.junit.Assert.assertNotNull(obj_array84);
        org.junit.Assert.assertNotNull(obj_array91);
        org.junit.Assert.assertTrue(b95 == true);
    }

    @Test
    public void test697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test697");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { fixedOrderComparator0, obj_array22 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array22);
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertNotNull(obj_array29);
    }

    @Test
    public void test698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test698");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        boolean b1 = fixedOrderComparator0.isLocked();
        boolean b3 = fixedOrderComparator0.add((java.lang.Object) 10.0d);
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array11);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array11);
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array11);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        fixedOrderComparator24.setUnknownObjectBehavior((int) (short) 0);
        int i27 = fixedOrderComparator24.getUnknownObjectBehavior();
        java.lang.Object obj29 = null;
        boolean b30 = fixedOrderComparator24.addAsEqual((java.lang.Object) 10.0f, obj29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator();
        int i32 = fixedOrderComparator31.getUnknownObjectBehavior();
        java.lang.Object[] obj_array39 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array39);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array39);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array39);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array39);
        boolean b44 = fixedOrderComparator31.add((java.lang.Object) fixedOrderComparator43);
        fixedOrderComparator31.setUnknownObjectBehavior(0);
        boolean b47 = fixedOrderComparator31.isLocked();
        int i49 = fixedOrderComparator24.compare((java.lang.Object) fixedOrderComparator31, (java.lang.Object) 2);
        boolean b50 = fixedOrderComparator15.add((java.lang.Object) fixedOrderComparator31);
        int i51 = fixedOrderComparator31.getUnknownObjectBehavior();
        boolean b52 = fixedOrderComparator0.add((java.lang.Object) i51);
        java.lang.Object obj53 = null;
        boolean b54 = fixedOrderComparator0.add(obj53);
        org.junit.Assert.assertTrue(b1 == false);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue(i32 == 2);
        org.junit.Assert.assertNotNull(obj_array39);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertTrue(b47 == false);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertTrue(i51 == 0);
        org.junit.Assert.assertTrue(b52 == true);
        org.junit.Assert.assertTrue(b54 == true);
    }

    @Test
    public void test699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test699");
        java.lang.Object[] obj_array0 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator1 = new collections.comparators.FixedOrderComparator(obj_array0);
        java.lang.Object[] obj_array2 = new java.lang.Object[] { fixedOrderComparator1 };
        collections.comparators.FixedOrderComparator fixedOrderComparator3 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator4 = new collections.comparators.FixedOrderComparator(obj_array2);
        int i5 = fixedOrderComparator4.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array0);
        org.junit.Assert.assertNotNull(obj_array2);
        org.junit.Assert.assertTrue(i5 == 2);
    }

    @Test
    public void test700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test700");
        java.lang.Object[] obj_array0 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator1 = new collections.comparators.FixedOrderComparator(obj_array0);
        java.lang.Object[] obj_array2 = new java.lang.Object[] { fixedOrderComparator1 };
        collections.comparators.FixedOrderComparator fixedOrderComparator3 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator4 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator5 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator6 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator11.setUnknownObjectBehavior(0);
        int i14 = fixedOrderComparator11.getUnknownObjectBehavior();
        fixedOrderComparator11.setUnknownObjectBehavior((int) (byte) 0);
        boolean b18 = fixedOrderComparator11.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array25 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array25);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array25);
        java.lang.Object[] obj_array28 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        boolean b30 = fixedOrderComparator27.add((java.lang.Object) obj_array28);
        boolean b31 = fixedOrderComparator11.add((java.lang.Object) fixedOrderComparator27);
        fixedOrderComparator27.setUnknownObjectBehavior((int) (short) 0);
        int i34 = fixedOrderComparator27.getUnknownObjectBehavior();
        java.lang.Object[] obj_array41 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array41);
        fixedOrderComparator42.setUnknownObjectBehavior(0);
        boolean b46 = fixedOrderComparator42.add((java.lang.Object) 1.0f);
        try {
            int i47 = fixedOrderComparator10.compare((java.lang.Object) fixedOrderComparator27, (java.lang.Object) b46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array0);
        org.junit.Assert.assertNotNull(obj_array2);
        org.junit.Assert.assertTrue(i14 == 0);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertNotNull(obj_array25);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(i34 == 0);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertTrue(b46 == true);
    }

    @Test
    public void test701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test701");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        fixedOrderComparator0.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        fixedOrderComparator23.setUnknownObjectBehavior(0);
        boolean b26 = fixedOrderComparator15.add((java.lang.Object) 0);
        boolean b27 = fixedOrderComparator15.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator();
        int i29 = fixedOrderComparator28.getUnknownObjectBehavior();
        boolean b30 = fixedOrderComparator15.add((java.lang.Object) i29);
        int i32 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator15, (java.lang.Object) 100);
        boolean b33 = fixedOrderComparator15.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator();
        int i35 = fixedOrderComparator34.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array42);
        boolean b47 = fixedOrderComparator34.add((java.lang.Object) fixedOrderComparator46);
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array56 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array56);
        java.lang.Object[] obj_array63 = new java.lang.Object[] { fixedOrderComparator34, obj_array56 };
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array56);
        int i68 = fixedOrderComparator67.getUnknownObjectBehavior();
        boolean b69 = fixedOrderComparator15.add((java.lang.Object) i68);
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertTrue(i29 == 2);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertNotNull(obj_array56);
        org.junit.Assert.assertNotNull(obj_array63);
        org.junit.Assert.assertTrue(i68 == 2);
        org.junit.Assert.assertTrue(b69 == false);
    }

    @Test
    public void test702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test702");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b7 = fixedOrderComparator0.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        boolean b17 = fixedOrderComparator15.add((java.lang.Object) (-1.0f));
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator();
        int i19 = fixedOrderComparator18.getUnknownObjectBehavior();
        boolean b20 = fixedOrderComparator18.isLocked();
        fixedOrderComparator18.setUnknownObjectBehavior(0);
        int i23 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator15, (java.lang.Object) 0);
        int i24 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array31 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        fixedOrderComparator32.setUnknownObjectBehavior(0);
        boolean b36 = fixedOrderComparator32.add((java.lang.Object) 1.0f);
        int i37 = fixedOrderComparator32.getUnknownObjectBehavior();
        boolean b38 = fixedOrderComparator32.isLocked();
        java.lang.Object[] obj_array39 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array39);
        java.lang.Object[] obj_array41 = new java.lang.Object[] { fixedOrderComparator40 };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array41);
        java.lang.Object[] obj_array50 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array50);
        int i53 = fixedOrderComparator32.compare((java.lang.Object) fixedOrderComparator43, (java.lang.Object) obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array50);
        java.lang.Object[] obj_array62 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array62);
        fixedOrderComparator64.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator64.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array75 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array75);
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array75);
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator78.setUnknownObjectBehavior(0);
        int i81 = fixedOrderComparator78.getUnknownObjectBehavior();
        boolean b83 = fixedOrderComparator77.addAsEqual((java.lang.Object) i81, (java.lang.Object) (short) 1);
        int i84 = fixedOrderComparator77.getUnknownObjectBehavior();
        java.lang.Object[] obj_array91 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator92 = new collections.comparators.FixedOrderComparator(obj_array91);
        boolean b93 = fixedOrderComparator92.isLocked();
        boolean b94 = fixedOrderComparator77.add((java.lang.Object) fixedOrderComparator92);
        boolean b95 = fixedOrderComparator64.add((java.lang.Object) fixedOrderComparator77);
        int i96 = fixedOrderComparator0.compare((java.lang.Object) obj_array50, (java.lang.Object) fixedOrderComparator77);
        int i97 = fixedOrderComparator77.getUnknownObjectBehavior();
        java.lang.Object obj98 = null;
        boolean b99 = fixedOrderComparator77.add(obj98);
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(i19 == 2);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertTrue(i23 == 0);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(i37 == 0);
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertNotNull(obj_array39);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertNotNull(obj_array50);
        org.junit.Assert.assertTrue(i53 == 0);
        org.junit.Assert.assertNotNull(obj_array62);
        org.junit.Assert.assertNotNull(obj_array75);
        org.junit.Assert.assertTrue(i81 == 0);
        org.junit.Assert.assertTrue(b83 == true);
        org.junit.Assert.assertTrue(i84 == 2);
        org.junit.Assert.assertNotNull(obj_array91);
        org.junit.Assert.assertTrue(b93 == false);
        org.junit.Assert.assertTrue(b94 == true);
        org.junit.Assert.assertTrue(b95 == true);
        org.junit.Assert.assertTrue(i96 == 0);
        org.junit.Assert.assertTrue(i97 == 2);
        org.junit.Assert.assertTrue(b99 == true);
    }

    @Test
    public void test703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test703");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        java.lang.Object[] obj_array46 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array54);
        int i58 = fixedOrderComparator57.getUnknownObjectBehavior();
        boolean b59 = fixedOrderComparator57.isLocked();
        int i60 = fixedOrderComparator41.compare((java.lang.Object) fixedOrderComparator47, (java.lang.Object) fixedOrderComparator57);
        java.lang.Object[] obj_array67 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array67);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array67);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array67);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array67);
        int i72 = fixedOrderComparator71.getUnknownObjectBehavior();
        int i73 = fixedOrderComparator71.getUnknownObjectBehavior();
        boolean b74 = fixedOrderComparator71.isLocked();
        boolean b75 = fixedOrderComparator57.add((java.lang.Object) fixedOrderComparator71);
        int i76 = fixedOrderComparator57.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertTrue(i58 == 2);
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertTrue(i60 == 0);
        org.junit.Assert.assertNotNull(obj_array67);
        org.junit.Assert.assertTrue(i72 == 2);
        org.junit.Assert.assertTrue(i73 == 2);
        org.junit.Assert.assertTrue(b74 == false);
        org.junit.Assert.assertTrue(b75 == true);
        org.junit.Assert.assertTrue(i76 == 2);
    }

    @Test
    public void test704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test704");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        boolean b1 = fixedOrderComparator0.isLocked();
        boolean b3 = fixedOrderComparator0.add((java.lang.Object) 10.0d);
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array11);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array11);
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array11);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        fixedOrderComparator24.setUnknownObjectBehavior((int) (short) 0);
        int i27 = fixedOrderComparator24.getUnknownObjectBehavior();
        java.lang.Object obj29 = null;
        boolean b30 = fixedOrderComparator24.addAsEqual((java.lang.Object) 10.0f, obj29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator();
        int i32 = fixedOrderComparator31.getUnknownObjectBehavior();
        java.lang.Object[] obj_array39 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array39);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array39);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array39);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array39);
        boolean b44 = fixedOrderComparator31.add((java.lang.Object) fixedOrderComparator43);
        fixedOrderComparator31.setUnknownObjectBehavior(0);
        boolean b47 = fixedOrderComparator31.isLocked();
        int i49 = fixedOrderComparator24.compare((java.lang.Object) fixedOrderComparator31, (java.lang.Object) 2);
        boolean b50 = fixedOrderComparator15.add((java.lang.Object) fixedOrderComparator31);
        int i51 = fixedOrderComparator31.getUnknownObjectBehavior();
        boolean b52 = fixedOrderComparator0.add((java.lang.Object) i51);
        try {
            fixedOrderComparator0.setUnknownObjectBehavior((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b1 == false);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue(i32 == 2);
        org.junit.Assert.assertNotNull(obj_array39);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertTrue(b47 == false);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertTrue(i51 == 0);
        org.junit.Assert.assertTrue(b52 == true);
    }

    @Test
    public void test705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test705");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array16 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array16);
        fixedOrderComparator18.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator18.setUnknownObjectBehavior(0);
        boolean b23 = fixedOrderComparator7.add((java.lang.Object) 0);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertTrue(b23 == false);
    }

    @Test
    public void test706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test706");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        int i46 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Object obj48 = null;
        int i49 = fixedOrderComparator7.compare(obj47, obj48);
        java.lang.Object[] obj_array56 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array56);
        java.lang.Object[] obj_array64 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array64);
        int i68 = fixedOrderComparator7.compare((java.lang.Object) obj_array56, (java.lang.Object) fixedOrderComparator67);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array56);
        try {
            fixedOrderComparator70.setUnknownObjectBehavior((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertNotNull(obj_array56);
        org.junit.Assert.assertNotNull(obj_array64);
        org.junit.Assert.assertTrue(i68 == 0);
    }

    @Test
    public void test707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test707");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b28 = fixedOrderComparator14.add((java.lang.Object) obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array21);
        java.lang.Object obj30 = null;
        boolean b31 = fixedOrderComparator29.add(obj30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator();
        boolean b33 = fixedOrderComparator32.isLocked();
        boolean b35 = fixedOrderComparator32.add((java.lang.Object) 10.0d);
        boolean b36 = fixedOrderComparator32.isLocked();
        int i37 = fixedOrderComparator32.getUnknownObjectBehavior();
        boolean b38 = fixedOrderComparator29.add((java.lang.Object) i37);
        int i39 = fixedOrderComparator29.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(i37 == 2);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(i39 == 2);
    }

    @Test
    public void test708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test708");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b12 = fixedOrderComparator10.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        boolean b19 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object obj21 = null;
        int i22 = fixedOrderComparator13.compare((java.lang.Object) 1.0d, obj21);
        boolean b23 = fixedOrderComparator13.isLocked();
        boolean b24 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object[] obj_array31 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array31);
        fixedOrderComparator33.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        int i46 = fixedOrderComparator33.compare((java.lang.Object) fixedOrderComparator44, (java.lang.Object) (-1.0d));
        boolean b47 = fixedOrderComparator44.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator48.setUnknownObjectBehavior(0);
        boolean b51 = fixedOrderComparator48.isLocked();
        java.lang.Object[] obj_array58 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array58);
        fixedOrderComparator59.setUnknownObjectBehavior(0);
        boolean b63 = fixedOrderComparator59.add((java.lang.Object) 1.0f);
        boolean b65 = fixedOrderComparator59.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator();
        boolean b67 = fixedOrderComparator66.isLocked();
        boolean b69 = fixedOrderComparator66.add((java.lang.Object) 10.0d);
        int i70 = fixedOrderComparator48.compare((java.lang.Object) b65, (java.lang.Object) fixedOrderComparator66);
        boolean b71 = fixedOrderComparator48.isLocked();
        int i72 = fixedOrderComparator0.compare((java.lang.Object) b47, (java.lang.Object) fixedOrderComparator48);
        int i73 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i74 = fixedOrderComparator0.getUnknownObjectBehavior();
        try {
            fixedOrderComparator0.setUnknownObjectBehavior(1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertTrue(b47 == false);
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertNotNull(obj_array58);
        org.junit.Assert.assertTrue(b63 == true);
        org.junit.Assert.assertTrue(b65 == false);
        org.junit.Assert.assertTrue(b67 == false);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertTrue(i70 == 0);
        org.junit.Assert.assertTrue(b71 == true);
        org.junit.Assert.assertTrue(i72 == 0);
        org.junit.Assert.assertTrue(i73 == 0);
        org.junit.Assert.assertTrue(i74 == 0);
    }

    @Test
    public void test709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test709");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        boolean b3 = fixedOrderComparator0.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator4 = new collections.comparators.FixedOrderComparator();
        int i5 = fixedOrderComparator4.getUnknownObjectBehavior();
        boolean b6 = fixedOrderComparator4.isLocked();
        fixedOrderComparator4.setUnknownObjectBehavior(0);
        boolean b9 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator4);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        boolean b22 = fixedOrderComparator20.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator23.setUnknownObjectBehavior(0);
        int i26 = fixedOrderComparator23.getUnknownObjectBehavior();
        fixedOrderComparator23.setUnknownObjectBehavior((int) (byte) 0);
        boolean b29 = fixedOrderComparator20.add((java.lang.Object) fixedOrderComparator23);
        java.lang.Object obj31 = null;
        int i32 = fixedOrderComparator23.compare((java.lang.Object) 1.0d, obj31);
        boolean b33 = fixedOrderComparator23.isLocked();
        boolean b34 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator23);
        java.lang.Object[] obj_array41 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator44.setUnknownObjectBehavior(0);
        int i47 = fixedOrderComparator44.getUnknownObjectBehavior();
        boolean b49 = fixedOrderComparator43.addAsEqual((java.lang.Object) i47, (java.lang.Object) (short) 1);
        int i50 = fixedOrderComparator43.getUnknownObjectBehavior();
        java.lang.Object[] obj_array57 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array57);
        boolean b59 = fixedOrderComparator58.isLocked();
        boolean b60 = fixedOrderComparator43.add((java.lang.Object) fixedOrderComparator58);
        int i61 = fixedOrderComparator43.getUnknownObjectBehavior();
        boolean b62 = fixedOrderComparator43.isLocked();
        int i63 = fixedOrderComparator43.getUnknownObjectBehavior();
        int i64 = fixedOrderComparator43.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator();
        int i66 = fixedOrderComparator65.getUnknownObjectBehavior();
        java.lang.Object[] obj_array73 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator74 = new collections.comparators.FixedOrderComparator(obj_array73);
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array73);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array73);
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array73);
        boolean b78 = fixedOrderComparator65.add((java.lang.Object) fixedOrderComparator77);
        fixedOrderComparator65.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array87 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator88 = new collections.comparators.FixedOrderComparator(obj_array87);
        collections.comparators.FixedOrderComparator fixedOrderComparator89 = new collections.comparators.FixedOrderComparator(obj_array87);
        collections.comparators.FixedOrderComparator fixedOrderComparator90 = new collections.comparators.FixedOrderComparator(obj_array87);
        collections.comparators.FixedOrderComparator fixedOrderComparator91 = new collections.comparators.FixedOrderComparator(obj_array87);
        collections.comparators.FixedOrderComparator fixedOrderComparator92 = new collections.comparators.FixedOrderComparator(obj_array87);
        collections.comparators.FixedOrderComparator fixedOrderComparator93 = new collections.comparators.FixedOrderComparator(obj_array87);
        java.lang.Object[] obj_array94 = new java.lang.Object[] { fixedOrderComparator65, obj_array87 };
        collections.comparators.FixedOrderComparator fixedOrderComparator95 = new collections.comparators.FixedOrderComparator(obj_array87);
        collections.comparators.FixedOrderComparator fixedOrderComparator96 = new collections.comparators.FixedOrderComparator(obj_array87);
        int i97 = fixedOrderComparator10.compare((java.lang.Object) fixedOrderComparator43, (java.lang.Object) obj_array87);
        boolean b98 = fixedOrderComparator4.add((java.lang.Object) i97);
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(i5 == 2);
        org.junit.Assert.assertTrue(b6 == false);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue(i26 == 0);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b33 == true);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(i50 == 2);
        org.junit.Assert.assertNotNull(obj_array57);
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertTrue(i61 == 2);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertTrue(i63 == 2);
        org.junit.Assert.assertTrue(i64 == 2);
        org.junit.Assert.assertTrue(i66 == 2);
        org.junit.Assert.assertNotNull(obj_array73);
        org.junit.Assert.assertTrue(b78 == true);
        org.junit.Assert.assertNotNull(obj_array87);
        org.junit.Assert.assertNotNull(obj_array94);
        org.junit.Assert.assertTrue(i97 == 0);
        org.junit.Assert.assertTrue(b98 == true);
    }

    @Test
    public void test710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test710");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        int i12 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b13 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array14 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        java.lang.Object[] obj_array16 = new java.lang.Object[] { fixedOrderComparator15 };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array16);
        java.lang.Object[] obj_array25 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array25);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array25);
        int i28 = fixedOrderComparator7.compare((java.lang.Object) fixedOrderComparator18, (java.lang.Object) obj_array25);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array25);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array25);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array25);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array25);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array25);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertNotNull(obj_array25);
        org.junit.Assert.assertTrue(i28 == 0);
    }

    @Test
    public void test711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test711");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array9 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b11 = fixedOrderComparator8.add((java.lang.Object) obj_array9);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array9);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array9);
        java.lang.Object obj14 = null;
        boolean b15 = fixedOrderComparator13.add(obj14);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        fixedOrderComparator24.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator24.setUnknownObjectBehavior(2);
        int i29 = fixedOrderComparator24.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator30.setUnknownObjectBehavior(0);
        int i33 = fixedOrderComparator30.getUnknownObjectBehavior();
        fixedOrderComparator30.setUnknownObjectBehavior((int) (byte) 0);
        boolean b36 = fixedOrderComparator24.add((java.lang.Object) fixedOrderComparator30);
        int i37 = fixedOrderComparator24.getUnknownObjectBehavior();
        boolean b38 = fixedOrderComparator13.add((java.lang.Object) fixedOrderComparator24);
        java.lang.Object[] obj_array45 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array45);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array45);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array45);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array45);
        int i50 = fixedOrderComparator49.getUnknownObjectBehavior();
        int i51 = fixedOrderComparator49.getUnknownObjectBehavior();
        int i52 = fixedOrderComparator49.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator53.setUnknownObjectBehavior(0);
        int i56 = fixedOrderComparator53.getUnknownObjectBehavior();
        fixedOrderComparator53.setUnknownObjectBehavior((int) (byte) 0);
        boolean b60 = fixedOrderComparator53.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array67 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array67);
        boolean b70 = fixedOrderComparator68.add((java.lang.Object) (-1.0f));
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator();
        int i72 = fixedOrderComparator71.getUnknownObjectBehavior();
        boolean b73 = fixedOrderComparator71.isLocked();
        fixedOrderComparator71.setUnknownObjectBehavior(0);
        int i76 = fixedOrderComparator53.compare((java.lang.Object) fixedOrderComparator68, (java.lang.Object) 0);
        java.lang.Object[] obj_array83 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator84 = new collections.comparators.FixedOrderComparator(obj_array83);
        fixedOrderComparator84.setUnknownObjectBehavior(0);
        boolean b87 = fixedOrderComparator68.add((java.lang.Object) fixedOrderComparator84);
        boolean b88 = fixedOrderComparator49.add((java.lang.Object) b87);
        boolean b89 = fixedOrderComparator13.add((java.lang.Object) b87);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(i29 == 2);
        org.junit.Assert.assertTrue(i33 == 0);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(i37 == 2);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertNotNull(obj_array45);
        org.junit.Assert.assertTrue(i50 == 2);
        org.junit.Assert.assertTrue(i51 == 2);
        org.junit.Assert.assertTrue(i52 == 2);
        org.junit.Assert.assertTrue(i56 == 0);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertNotNull(obj_array67);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertTrue(i72 == 2);
        org.junit.Assert.assertTrue(b73 == false);
        org.junit.Assert.assertTrue(i76 == 0);
        org.junit.Assert.assertNotNull(obj_array83);
        org.junit.Assert.assertTrue(b87 == true);
        org.junit.Assert.assertTrue(b88 == true);
        org.junit.Assert.assertTrue(b89 == true);
    }

    @Test
    public void test712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test712");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj17 = null;
        boolean b18 = fixedOrderComparator7.add(obj17);
        java.lang.Object[] obj_array25 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array25);
        fixedOrderComparator26.setUnknownObjectBehavior(0);
        boolean b30 = fixedOrderComparator26.add((java.lang.Object) 1.0f);
        boolean b32 = fixedOrderComparator26.add((java.lang.Object) 1.0f);
        boolean b33 = fixedOrderComparator26.isLocked();
        boolean b34 = fixedOrderComparator26.isLocked();
        boolean b35 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator26);
        int i36 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b37 = fixedOrderComparator7.isLocked();
        boolean b38 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array45 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array45);
        boolean b48 = fixedOrderComparator46.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator49.setUnknownObjectBehavior(0);
        int i52 = fixedOrderComparator49.getUnknownObjectBehavior();
        fixedOrderComparator49.setUnknownObjectBehavior((int) (byte) 0);
        boolean b55 = fixedOrderComparator46.add((java.lang.Object) fixedOrderComparator49);
        java.lang.Object obj56 = null;
        boolean b57 = fixedOrderComparator46.add(obj56);
        java.lang.Object[] obj_array64 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array64);
        fixedOrderComparator65.setUnknownObjectBehavior(0);
        boolean b69 = fixedOrderComparator65.add((java.lang.Object) 1.0f);
        boolean b71 = fixedOrderComparator65.add((java.lang.Object) 1.0f);
        boolean b72 = fixedOrderComparator65.isLocked();
        boolean b73 = fixedOrderComparator65.isLocked();
        boolean b74 = fixedOrderComparator46.add((java.lang.Object) fixedOrderComparator65);
        java.lang.Object[] obj_array75 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array75);
        java.lang.Object[] obj_array77 = new java.lang.Object[] { fixedOrderComparator76 };
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator(obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array77);
        try {
            int i80 = fixedOrderComparator7.compare((java.lang.Object) b74, (java.lang.Object) fixedOrderComparator79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertNotNull(obj_array25);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertTrue(i36 == 2);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertNotNull(obj_array45);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertTrue(i52 == 0);
        org.junit.Assert.assertTrue(b55 == true);
        org.junit.Assert.assertTrue(b57 == true);
        org.junit.Assert.assertNotNull(obj_array64);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertTrue(b71 == false);
        org.junit.Assert.assertTrue(b72 == false);
        org.junit.Assert.assertTrue(b73 == false);
        org.junit.Assert.assertTrue(b74 == true);
        org.junit.Assert.assertNotNull(obj_array75);
        org.junit.Assert.assertNotNull(obj_array77);
    }

    @Test
    public void test713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test713");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        int i23 = fixedOrderComparator12.getUnknownObjectBehavior();
        int i24 = fixedOrderComparator12.getUnknownObjectBehavior();
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertTrue(i23 == 0);
        org.junit.Assert.assertTrue(i24 == 0);
    }

    @Test
    public void test714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test714");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        boolean b21 = fixedOrderComparator7.isLocked();
        boolean b22 = fixedOrderComparator7.isLocked();
        boolean b23 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array30 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array30);
        int i35 = fixedOrderComparator34.getUnknownObjectBehavior();
        int i36 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b37 = fixedOrderComparator34.isLocked();
        int i38 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b39 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator34);
        boolean b41 = fixedOrderComparator34.add((java.lang.Object) (byte) 10);
        try {
            fixedOrderComparator34.setUnknownObjectBehavior((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(i36 == 2);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(i38 == 2);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b41 == true);
    }

    @Test
    public void test715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test715");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b7 = fixedOrderComparator0.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array14);
        java.lang.Object[] obj_array17 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        boolean b19 = fixedOrderComparator16.add((java.lang.Object) obj_array17);
        boolean b20 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator16);
        fixedOrderComparator16.setUnknownObjectBehavior((int) (short) 0);
        try {
            fixedOrderComparator16.setUnknownObjectBehavior((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(b20 == true);
    }

    @Test
    public void test716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test716");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i8 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i9 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b10 = fixedOrderComparator7.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i8 == 2);
        org.junit.Assert.assertTrue(i9 == 2);
        org.junit.Assert.assertTrue(b10 == false);
    }

    @Test
    public void test717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test717");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i11 = fixedOrderComparator10.getUnknownObjectBehavior();
        int i12 = fixedOrderComparator10.getUnknownObjectBehavior();
        boolean b13 = fixedOrderComparator10.isLocked();
        int i14 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array23 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array23);
        int i28 = fixedOrderComparator27.getUnknownObjectBehavior();
        int i29 = fixedOrderComparator27.getUnknownObjectBehavior();
        boolean b30 = fixedOrderComparator27.isLocked();
        boolean b31 = fixedOrderComparator27.isLocked();
        boolean b32 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator27);
        java.lang.Object[] obj_array39 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array39);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array39);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array39);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array39);
        int i44 = fixedOrderComparator43.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator43.getUnknownObjectBehavior();
        boolean b46 = fixedOrderComparator43.isLocked();
        fixedOrderComparator43.setUnknownObjectBehavior(0);
        java.lang.Object obj49 = null;
        java.lang.Object[] obj_array56 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array56);
        int i61 = fixedOrderComparator43.compare(obj49, (java.lang.Object) obj_array56);
        java.lang.Object obj62 = null;
        java.lang.Object[] obj_array69 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator74 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array69);
        int i77 = fixedOrderComparator43.compare(obj62, (java.lang.Object) obj_array69);
        boolean b78 = fixedOrderComparator10.add(obj62);
        try {
            fixedOrderComparator10.setUnknownObjectBehavior((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 2);
        org.junit.Assert.assertTrue(i12 == 2);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(i14 == 2);
        org.junit.Assert.assertNotNull(obj_array23);
        org.junit.Assert.assertTrue(i28 == 2);
        org.junit.Assert.assertTrue(i29 == 2);
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertNotNull(obj_array39);
        org.junit.Assert.assertTrue(i44 == 2);
        org.junit.Assert.assertTrue(i45 == 2);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertNotNull(obj_array56);
        org.junit.Assert.assertTrue(i61 == 0);
        org.junit.Assert.assertNotNull(obj_array69);
        org.junit.Assert.assertTrue(i77 == 0);
        org.junit.Assert.assertTrue(b78 == true);
    }

    @Test
    public void test718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test718");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b12 = fixedOrderComparator10.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        boolean b19 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object obj21 = null;
        int i22 = fixedOrderComparator13.compare((java.lang.Object) 1.0d, obj21);
        boolean b23 = fixedOrderComparator13.isLocked();
        boolean b24 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator13);
        boolean b25 = fixedOrderComparator13.isLocked();
        int i26 = fixedOrderComparator13.getUnknownObjectBehavior();
        boolean b27 = fixedOrderComparator13.isLocked();
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(i26 == 0);
        org.junit.Assert.assertTrue(b27 == true);
    }

    @Test
    public void test719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test719");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj18 = null;
        int i19 = fixedOrderComparator10.compare((java.lang.Object) 1.0d, obj18);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        int i32 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b34 = fixedOrderComparator28.addAsEqual((java.lang.Object) i32, (java.lang.Object) (short) 1);
        int i35 = fixedOrderComparator28.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        boolean b44 = fixedOrderComparator43.isLocked();
        boolean b45 = fixedOrderComparator28.add((java.lang.Object) fixedOrderComparator43);
        int i47 = fixedOrderComparator10.compare((java.lang.Object) fixedOrderComparator28, (java.lang.Object) 1L);
        boolean b48 = fixedOrderComparator10.isLocked();
        java.lang.Object[] obj_array56 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array56);
        fixedOrderComparator58.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array67 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array67);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array67);
        int i71 = fixedOrderComparator58.compare((java.lang.Object) fixedOrderComparator69, (java.lang.Object) (-1.0d));
        boolean b72 = fixedOrderComparator69.isLocked();
        try {
            boolean b73 = fixedOrderComparator10.addAsEqual((java.lang.Object) (byte) 1, (java.lang.Object) b72);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertNotNull(obj_array56);
        org.junit.Assert.assertNotNull(obj_array67);
        org.junit.Assert.assertTrue(i71 == 0);
        org.junit.Assert.assertTrue(b72 == false);
    }

    @Test
    public void test720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test720");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        fixedOrderComparator0.setUnknownObjectBehavior(1);
        fixedOrderComparator0.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array16 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        fixedOrderComparator17.setUnknownObjectBehavior(0);
        boolean b21 = fixedOrderComparator17.add((java.lang.Object) 1.0f);
        boolean b23 = fixedOrderComparator17.add((java.lang.Object) 1.0f);
        boolean b24 = fixedOrderComparator17.isLocked();
        boolean b25 = fixedOrderComparator17.isLocked();
        int i26 = fixedOrderComparator17.getUnknownObjectBehavior();
        int i27 = fixedOrderComparator17.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator17);
        int i29 = fixedOrderComparator17.getUnknownObjectBehavior();
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertTrue(i26 == 0);
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(i29 == 0);
    }

    @Test
    public void test721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test721");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array18 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array18);
        boolean b22 = fixedOrderComparator11.add((java.lang.Object) obj_array18);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertTrue(b22 == true);
    }

    @Test
    public void test722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test722");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b13 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        fixedOrderComparator7.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b31 = fixedOrderComparator7.add((java.lang.Object) obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b33 = fixedOrderComparator32.isLocked();
        int i34 = fixedOrderComparator32.getUnknownObjectBehavior();
        boolean b35 = fixedOrderComparator32.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertTrue(i34 == 2);
        org.junit.Assert.assertTrue(b35 == false);
    }

    @Test
    public void test723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test723");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { fixedOrderComparator0, obj_array22 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b39 = fixedOrderComparator37.add((java.lang.Object) (-1.0d));
        java.lang.Object[] obj_array46 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array46);
        java.lang.Object[] obj_array62 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array62);
        fixedOrderComparator63.setUnknownObjectBehavior(0);
        boolean b67 = fixedOrderComparator63.add((java.lang.Object) 1.0f);
        boolean b69 = fixedOrderComparator63.add((java.lang.Object) 1.0f);
        fixedOrderComparator63.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array78 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator84 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array78);
        boolean b87 = fixedOrderComparator63.add((java.lang.Object) obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator88 = new collections.comparators.FixedOrderComparator(obj_array78);
        try {
            int i89 = fixedOrderComparator37.compare((java.lang.Object) fixedOrderComparator55, (java.lang.Object) obj_array78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertNotNull(obj_array62);
        org.junit.Assert.assertTrue(b67 == true);
        org.junit.Assert.assertTrue(b69 == false);
        org.junit.Assert.assertNotNull(obj_array78);
        org.junit.Assert.assertTrue(b87 == true);
    }

    @Test
    public void test724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test724");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj17 = null;
        boolean b18 = fixedOrderComparator7.add(obj17);
        java.lang.Object[] obj_array25 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array25);
        fixedOrderComparator26.setUnknownObjectBehavior(0);
        boolean b30 = fixedOrderComparator26.add((java.lang.Object) 1.0f);
        boolean b32 = fixedOrderComparator26.add((java.lang.Object) 1.0f);
        boolean b33 = fixedOrderComparator26.isLocked();
        boolean b34 = fixedOrderComparator26.isLocked();
        boolean b35 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator26);
        boolean b36 = fixedOrderComparator26.isLocked();
        boolean b37 = fixedOrderComparator26.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertNotNull(obj_array25);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(b37 == false);
    }

    @Test
    public void test725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test725");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        java.lang.Object obj17 = null;
        java.lang.Object[] obj_array24 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array24);
        fixedOrderComparator25.setUnknownObjectBehavior(0);
        boolean b29 = fixedOrderComparator25.add((java.lang.Object) 1.0f);
        int i30 = fixedOrderComparator25.getUnknownObjectBehavior();
        int i31 = fixedOrderComparator12.compare(obj17, (java.lang.Object) i30);
        int i32 = fixedOrderComparator12.getUnknownObjectBehavior();
        int i33 = fixedOrderComparator12.getUnknownObjectBehavior();
        int i35 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 10.0d);
        int i36 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i37 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i38 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array45 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array45);
        boolean b48 = fixedOrderComparator46.add((java.lang.Object) (-1.0f));
        int i49 = fixedOrderComparator46.getUnknownObjectBehavior();
        java.lang.Object[] obj_array56 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array56);
        fixedOrderComparator58.setUnknownObjectBehavior((int) (short) 0);
        int i61 = fixedOrderComparator58.getUnknownObjectBehavior();
        boolean b62 = fixedOrderComparator46.add((java.lang.Object) i61);
        int i63 = fixedOrderComparator46.getUnknownObjectBehavior();
        int i64 = fixedOrderComparator46.getUnknownObjectBehavior();
        boolean b65 = fixedOrderComparator46.isLocked();
        int i66 = fixedOrderComparator46.getUnknownObjectBehavior();
        int i67 = fixedOrderComparator46.getUnknownObjectBehavior();
        java.lang.Object[] obj_array74 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array74);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array74);
        java.lang.Object[] obj_array77 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator(obj_array77);
        boolean b79 = fixedOrderComparator76.add((java.lang.Object) obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator(obj_array77);
        int i84 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator46, (java.lang.Object) obj_array77);
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertNotNull(obj_array24);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertTrue(i31 == (-1));
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(i33 == 0);
        org.junit.Assert.assertTrue(i35 == 0);
        org.junit.Assert.assertTrue(i36 == 0);
        org.junit.Assert.assertTrue(i37 == 0);
        org.junit.Assert.assertTrue(i38 == 0);
        org.junit.Assert.assertNotNull(obj_array45);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertTrue(i49 == 2);
        org.junit.Assert.assertNotNull(obj_array56);
        org.junit.Assert.assertTrue(i61 == 0);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertTrue(i63 == 2);
        org.junit.Assert.assertTrue(i64 == 2);
        org.junit.Assert.assertTrue(b65 == false);
        org.junit.Assert.assertTrue(i66 == 2);
        org.junit.Assert.assertTrue(i67 == 2);
        org.junit.Assert.assertNotNull(obj_array74);
        org.junit.Assert.assertNotNull(obj_array77);
        org.junit.Assert.assertTrue(b79 == true);
        org.junit.Assert.assertTrue(i84 == 0);
    }

    @Test
    public void test726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test726");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array7 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array7);
        boolean b10 = fixedOrderComparator8.add((java.lang.Object) (-1.0f));
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array19);
        int i23 = fixedOrderComparator22.getUnknownObjectBehavior();
        boolean b24 = fixedOrderComparator22.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array32 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        boolean b35 = fixedOrderComparator33.add((java.lang.Object) (-1.0f));
        int i36 = fixedOrderComparator33.getUnknownObjectBehavior();
        java.lang.Object[] obj_array43 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array43);
        fixedOrderComparator45.setUnknownObjectBehavior((int) (short) 0);
        int i48 = fixedOrderComparator45.getUnknownObjectBehavior();
        boolean b49 = fixedOrderComparator33.add((java.lang.Object) i48);
        boolean b50 = fixedOrderComparator25.add((java.lang.Object) fixedOrderComparator33);
        int i51 = fixedOrderComparator8.compare((java.lang.Object) b24, (java.lang.Object) fixedOrderComparator25);
        boolean b52 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator25);
        org.junit.Assert.assertNotNull(obj_array7);
        org.junit.Assert.assertTrue(b10 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(i23 == 2);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertTrue(i36 == 2);
        org.junit.Assert.assertNotNull(obj_array43);
        org.junit.Assert.assertTrue(i48 == 0);
        org.junit.Assert.assertTrue(b49 == false);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertTrue(i51 == 0);
        org.junit.Assert.assertTrue(b52 == true);
    }

    @Test
    public void test727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test727");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b28 = fixedOrderComparator14.add((java.lang.Object) obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b30 = fixedOrderComparator29.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator();
        int i32 = fixedOrderComparator31.getUnknownObjectBehavior();
        boolean b33 = fixedOrderComparator31.isLocked();
        boolean b34 = fixedOrderComparator31.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator();
        int i36 = fixedOrderComparator35.getUnknownObjectBehavior();
        boolean b37 = fixedOrderComparator35.isLocked();
        fixedOrderComparator35.setUnknownObjectBehavior(0);
        boolean b40 = fixedOrderComparator31.add((java.lang.Object) fixedOrderComparator35);
        int i41 = fixedOrderComparator35.getUnknownObjectBehavior();
        java.lang.Object[] obj_array48 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array48);
        fixedOrderComparator50.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator50.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array61 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array61);
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array61);
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator64.setUnknownObjectBehavior(0);
        int i67 = fixedOrderComparator64.getUnknownObjectBehavior();
        boolean b69 = fixedOrderComparator63.addAsEqual((java.lang.Object) i67, (java.lang.Object) (short) 1);
        int i70 = fixedOrderComparator63.getUnknownObjectBehavior();
        java.lang.Object[] obj_array77 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator(obj_array77);
        boolean b79 = fixedOrderComparator78.isLocked();
        boolean b80 = fixedOrderComparator63.add((java.lang.Object) fixedOrderComparator78);
        boolean b81 = fixedOrderComparator50.add((java.lang.Object) fixedOrderComparator63);
        boolean b82 = fixedOrderComparator35.add((java.lang.Object) fixedOrderComparator50);
        boolean b83 = fixedOrderComparator29.add((java.lang.Object) fixedOrderComparator35);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertTrue(i32 == 2);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertTrue(i36 == 2);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertTrue(i41 == 0);
        org.junit.Assert.assertNotNull(obj_array48);
        org.junit.Assert.assertNotNull(obj_array61);
        org.junit.Assert.assertTrue(i67 == 0);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertTrue(i70 == 2);
        org.junit.Assert.assertNotNull(obj_array77);
        org.junit.Assert.assertTrue(b79 == false);
        org.junit.Assert.assertTrue(b80 == true);
        org.junit.Assert.assertTrue(b81 == true);
        org.junit.Assert.assertTrue(b82 == true);
        org.junit.Assert.assertTrue(b83 == true);
    }

    @Test
    public void test728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test728");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        boolean b21 = fixedOrderComparator0.isLocked();
        int i22 = fixedOrderComparator0.getUnknownObjectBehavior();
        try {
            fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue(i22 == 0);
    }

    @Test
    public void test729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test729");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b13 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        fixedOrderComparator7.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b31 = fixedOrderComparator7.add((java.lang.Object) obj_array22);
        java.lang.Object[] obj_array38 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array38);
        fixedOrderComparator40.setUnknownObjectBehavior((int) (short) 0);
        int i43 = fixedOrderComparator40.getUnknownObjectBehavior();
        java.lang.Object obj45 = null;
        boolean b46 = fixedOrderComparator40.addAsEqual((java.lang.Object) 10.0f, obj45);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator();
        int i48 = fixedOrderComparator47.getUnknownObjectBehavior();
        java.lang.Object[] obj_array55 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array55);
        boolean b60 = fixedOrderComparator47.add((java.lang.Object) fixedOrderComparator59);
        fixedOrderComparator47.setUnknownObjectBehavior(0);
        boolean b63 = fixedOrderComparator47.isLocked();
        int i65 = fixedOrderComparator40.compare((java.lang.Object) fixedOrderComparator47, (java.lang.Object) 2);
        java.lang.Object[] obj_array66 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array66);
        java.lang.Object[] obj_array68 = new java.lang.Object[] { fixedOrderComparator67 };
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array68);
        boolean b72 = fixedOrderComparator47.add((java.lang.Object) fixedOrderComparator71);
        boolean b73 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator47);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertNotNull(obj_array38);
        org.junit.Assert.assertTrue(i43 == 0);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(i48 == 2);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertTrue(i65 == 0);
        org.junit.Assert.assertNotNull(obj_array66);
        org.junit.Assert.assertNotNull(obj_array68);
        org.junit.Assert.assertTrue(b72 == true);
        org.junit.Assert.assertTrue(b73 == true);
    }

    @Test
    public void test730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test730");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        int i11 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object obj13 = null;
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) 10.0f, obj13);
        boolean b15 = fixedOrderComparator8.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(b15 == false);
    }

    @Test
    public void test731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test731");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        int i21 = fixedOrderComparator8.compare((java.lang.Object) fixedOrderComparator19, (java.lang.Object) (-1.0d));
        boolean b22 = fixedOrderComparator19.isLocked();
        java.lang.Object[] obj_array29 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        int i32 = fixedOrderComparator31.getUnknownObjectBehavior();
        int i33 = fixedOrderComparator31.getUnknownObjectBehavior();
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        int i42 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i43 = fixedOrderComparator41.getUnknownObjectBehavior();
        java.lang.Object[] obj_array50 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array50);
        int i57 = fixedOrderComparator56.getUnknownObjectBehavior();
        boolean b58 = fixedOrderComparator41.add((java.lang.Object) fixedOrderComparator56);
        try {
            boolean b59 = fixedOrderComparator19.addAsEqual((java.lang.Object) i33, (java.lang.Object) b58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i32 == 2);
        org.junit.Assert.assertTrue(i33 == 2);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(i42 == 2);
        org.junit.Assert.assertTrue(i43 == 2);
        org.junit.Assert.assertNotNull(obj_array50);
        org.junit.Assert.assertTrue(i57 == 2);
        org.junit.Assert.assertTrue(b58 == true);
    }

    @Test
    public void test732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test732");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i11 = fixedOrderComparator10.getUnknownObjectBehavior();
        int i12 = fixedOrderComparator10.getUnknownObjectBehavior();
        boolean b13 = fixedOrderComparator10.isLocked();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        java.lang.Object obj16 = null;
        java.lang.Object[] obj_array23 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array23);
        int i28 = fixedOrderComparator10.compare(obj16, (java.lang.Object) obj_array23);
        java.lang.Object obj29 = null;
        java.lang.Object[] obj_array36 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array36);
        int i44 = fixedOrderComparator10.compare(obj29, (java.lang.Object) obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array36);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 2);
        org.junit.Assert.assertTrue(i12 == 2);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertNotNull(obj_array23);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertTrue(i44 == 0);
    }

    @Test
    public void test733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test733");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i11 = fixedOrderComparator10.getUnknownObjectBehavior();
        int i12 = fixedOrderComparator10.getUnknownObjectBehavior();
        boolean b13 = fixedOrderComparator10.isLocked();
        int i14 = fixedOrderComparator10.getUnknownObjectBehavior();
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b27 = fixedOrderComparator10.add((java.lang.Object) obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator30.setUnknownObjectBehavior(0);
        boolean b33 = fixedOrderComparator30.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator();
        int i35 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator34.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator();
        int i38 = fixedOrderComparator37.getUnknownObjectBehavior();
        boolean b39 = fixedOrderComparator37.isLocked();
        boolean b40 = fixedOrderComparator34.add((java.lang.Object) b39);
        boolean b41 = fixedOrderComparator34.isLocked();
        java.lang.Object[] obj_array48 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array48);
        boolean b51 = fixedOrderComparator49.add((java.lang.Object) (-1.0f));
        int i52 = fixedOrderComparator49.getUnknownObjectBehavior();
        boolean b53 = fixedOrderComparator34.add((java.lang.Object) i52);
        java.lang.Object[] obj_array60 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array60);
        boolean b63 = fixedOrderComparator61.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator64.setUnknownObjectBehavior(0);
        int i67 = fixedOrderComparator64.getUnknownObjectBehavior();
        fixedOrderComparator64.setUnknownObjectBehavior((int) (byte) 0);
        boolean b70 = fixedOrderComparator61.add((java.lang.Object) fixedOrderComparator64);
        java.lang.Object obj71 = null;
        boolean b72 = fixedOrderComparator61.add(obj71);
        java.lang.Object[] obj_array79 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array79);
        fixedOrderComparator80.setUnknownObjectBehavior(0);
        boolean b84 = fixedOrderComparator80.add((java.lang.Object) 1.0f);
        boolean b86 = fixedOrderComparator80.add((java.lang.Object) 1.0f);
        boolean b87 = fixedOrderComparator80.isLocked();
        boolean b88 = fixedOrderComparator80.isLocked();
        boolean b89 = fixedOrderComparator61.add((java.lang.Object) fixedOrderComparator80);
        boolean b90 = fixedOrderComparator80.isLocked();
        boolean b91 = fixedOrderComparator34.add((java.lang.Object) b90);
        boolean b92 = fixedOrderComparator30.add((java.lang.Object) fixedOrderComparator34);
        fixedOrderComparator30.setUnknownObjectBehavior(2);
        boolean b95 = fixedOrderComparator29.add((java.lang.Object) fixedOrderComparator30);
        try {
            fixedOrderComparator29.setUnknownObjectBehavior((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 2);
        org.junit.Assert.assertTrue(i12 == 2);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(i14 == 2);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(i38 == 2);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertNotNull(obj_array48);
        org.junit.Assert.assertTrue(b51 == true);
        org.junit.Assert.assertTrue(i52 == 2);
        org.junit.Assert.assertTrue(b53 == true);
        org.junit.Assert.assertNotNull(obj_array60);
        org.junit.Assert.assertTrue(b63 == true);
        org.junit.Assert.assertTrue(i67 == 0);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertTrue(b72 == true);
        org.junit.Assert.assertNotNull(obj_array79);
        org.junit.Assert.assertTrue(b84 == true);
        org.junit.Assert.assertTrue(b86 == false);
        org.junit.Assert.assertTrue(b87 == false);
        org.junit.Assert.assertTrue(b88 == false);
        org.junit.Assert.assertTrue(b89 == true);
        org.junit.Assert.assertTrue(b90 == false);
        org.junit.Assert.assertTrue(b91 == false);
        org.junit.Assert.assertTrue(b92 == true);
        org.junit.Assert.assertTrue(b95 == true);
    }

    @Test
    public void test734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test734");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        fixedOrderComparator19.setUnknownObjectBehavior((int) (short) 0);
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        java.lang.Object obj24 = null;
        boolean b25 = fixedOrderComparator19.addAsEqual((java.lang.Object) 10.0f, obj24);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator();
        int i27 = fixedOrderComparator26.getUnknownObjectBehavior();
        java.lang.Object[] obj_array34 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array34);
        boolean b39 = fixedOrderComparator26.add((java.lang.Object) fixedOrderComparator38);
        fixedOrderComparator26.setUnknownObjectBehavior(0);
        boolean b42 = fixedOrderComparator26.isLocked();
        int i44 = fixedOrderComparator19.compare((java.lang.Object) fixedOrderComparator26, (java.lang.Object) 2);
        boolean b45 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator26);
        java.lang.Object[] obj_array52 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array52);
        boolean b55 = fixedOrderComparator53.add((java.lang.Object) (-1.0f));
        fixedOrderComparator53.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array65 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array65);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array65);
        fixedOrderComparator67.setUnknownObjectBehavior((int) (short) 0);
        int i70 = fixedOrderComparator53.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator67);
        boolean b71 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator53);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator72.setUnknownObjectBehavior(0);
        boolean b75 = fixedOrderComparator72.isLocked();
        java.lang.Object[] obj_array82 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator(obj_array82);
        fixedOrderComparator83.setUnknownObjectBehavior(0);
        boolean b87 = fixedOrderComparator83.add((java.lang.Object) 1.0f);
        boolean b89 = fixedOrderComparator83.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator90 = new collections.comparators.FixedOrderComparator();
        boolean b91 = fixedOrderComparator90.isLocked();
        boolean b93 = fixedOrderComparator90.add((java.lang.Object) 10.0d);
        int i94 = fixedOrderComparator72.compare((java.lang.Object) b89, (java.lang.Object) fixedOrderComparator90);
        boolean b95 = fixedOrderComparator90.isLocked();
        try {
            boolean b96 = fixedOrderComparator53.add((java.lang.Object) fixedOrderComparator90);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(i27 == 2);
        org.junit.Assert.assertNotNull(obj_array34);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertNotNull(obj_array52);
        org.junit.Assert.assertTrue(b55 == true);
        org.junit.Assert.assertNotNull(obj_array65);
        org.junit.Assert.assertTrue(i70 == 0);
        org.junit.Assert.assertTrue(b71 == true);
        org.junit.Assert.assertTrue(b75 == false);
        org.junit.Assert.assertNotNull(obj_array82);
        org.junit.Assert.assertTrue(b87 == true);
        org.junit.Assert.assertTrue(b89 == false);
        org.junit.Assert.assertTrue(b91 == false);
        org.junit.Assert.assertTrue(b93 == true);
        org.junit.Assert.assertTrue(i94 == 0);
        org.junit.Assert.assertTrue(b95 == false);
    }

    @Test
    public void test735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test735");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        int i6 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array13 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array13);
        fixedOrderComparator14.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator14.add((java.lang.Object) 1.0f);
        int i19 = fixedOrderComparator14.getUnknownObjectBehavior();
        boolean b20 = fixedOrderComparator14.isLocked();
        java.lang.Object[] obj_array21 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        java.lang.Object[] obj_array23 = new java.lang.Object[] { fixedOrderComparator22 };
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array23);
        java.lang.Object[] obj_array32 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array32);
        int i35 = fixedOrderComparator14.compare((java.lang.Object) fixedOrderComparator25, (java.lang.Object) obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array32);
        boolean b39 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator38);
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(i6 == 0);
        org.junit.Assert.assertNotNull(obj_array13);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertNotNull(obj_array23);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertTrue(i35 == 0);
        org.junit.Assert.assertTrue(b39 == true);
    }

    @Test
    public void test736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test736");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        boolean b19 = fixedOrderComparator7.isLocked();
        int i20 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i21 = fixedOrderComparator7.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(i20 == 2);
        org.junit.Assert.assertTrue(i21 == 2);
    }

    @Test
    public void test737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test737");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b7 = fixedOrderComparator0.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array14);
        java.lang.Object[] obj_array17 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        boolean b19 = fixedOrderComparator16.add((java.lang.Object) obj_array17);
        boolean b20 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator16);
        int i21 = fixedOrderComparator0.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator22.setUnknownObjectBehavior(0);
        boolean b25 = fixedOrderComparator22.isLocked();
        boolean b26 = fixedOrderComparator22.isLocked();
        java.lang.Object[] obj_array33 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        boolean b38 = fixedOrderComparator34.add((java.lang.Object) 1.0f);
        boolean b40 = fixedOrderComparator34.add((java.lang.Object) 1.0f);
        int i42 = fixedOrderComparator22.compare((java.lang.Object) fixedOrderComparator34, (java.lang.Object) 1.0d);
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array51 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array51);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array51);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array51);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array51);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator();
        int i57 = fixedOrderComparator56.getUnknownObjectBehavior();
        boolean b58 = fixedOrderComparator56.isLocked();
        fixedOrderComparator56.setUnknownObjectBehavior(0);
        int i61 = fixedOrderComparator34.compare((java.lang.Object) obj_array51, (java.lang.Object) fixedOrderComparator56);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array51);
        boolean b63 = fixedOrderComparator62.isLocked();
        java.lang.Object[] obj_array70 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array70);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array70);
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator73.setUnknownObjectBehavior(0);
        int i76 = fixedOrderComparator73.getUnknownObjectBehavior();
        boolean b78 = fixedOrderComparator72.addAsEqual((java.lang.Object) i76, (java.lang.Object) (short) 1);
        java.lang.Object[] obj_array85 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array85);
        collections.comparators.FixedOrderComparator fixedOrderComparator87 = new collections.comparators.FixedOrderComparator(obj_array85);
        collections.comparators.FixedOrderComparator fixedOrderComparator88 = new collections.comparators.FixedOrderComparator(obj_array85);
        collections.comparators.FixedOrderComparator fixedOrderComparator89 = new collections.comparators.FixedOrderComparator(obj_array85);
        collections.comparators.FixedOrderComparator fixedOrderComparator90 = new collections.comparators.FixedOrderComparator(obj_array85);
        collections.comparators.FixedOrderComparator fixedOrderComparator91 = new collections.comparators.FixedOrderComparator(obj_array85);
        boolean b92 = fixedOrderComparator72.add((java.lang.Object) fixedOrderComparator91);
        boolean b93 = fixedOrderComparator62.add((java.lang.Object) fixedOrderComparator72);
        boolean b94 = fixedOrderComparator0.add((java.lang.Object) b93);
        boolean b95 = fixedOrderComparator0.isLocked();
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertTrue(i42 == 0);
        org.junit.Assert.assertNotNull(obj_array51);
        org.junit.Assert.assertTrue(i57 == 2);
        org.junit.Assert.assertTrue(b58 == false);
        org.junit.Assert.assertTrue(i61 == 0);
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertNotNull(obj_array70);
        org.junit.Assert.assertTrue(i76 == 0);
        org.junit.Assert.assertTrue(b78 == true);
        org.junit.Assert.assertNotNull(obj_array85);
        org.junit.Assert.assertTrue(b92 == true);
        org.junit.Assert.assertTrue(b93 == true);
        org.junit.Assert.assertTrue(b94 == true);
        org.junit.Assert.assertTrue(b95 == false);
    }

    @Test
    public void test738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test738");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { fixedOrderComparator0, obj_array22 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array22);
        int i37 = fixedOrderComparator36.getUnknownObjectBehavior();
        boolean b38 = fixedOrderComparator36.isLocked();
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i37 == 2);
        org.junit.Assert.assertTrue(b38 == false);
    }

    @Test
    public void test739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test739");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        java.lang.Object[] obj_array46 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array54);
        int i58 = fixedOrderComparator57.getUnknownObjectBehavior();
        boolean b59 = fixedOrderComparator57.isLocked();
        int i60 = fixedOrderComparator41.compare((java.lang.Object) fixedOrderComparator47, (java.lang.Object) fixedOrderComparator57);
        boolean b61 = fixedOrderComparator57.isLocked();
        fixedOrderComparator57.setUnknownObjectBehavior((int) (byte) 0);
        int i64 = fixedOrderComparator57.getUnknownObjectBehavior();
        try {
            fixedOrderComparator57.setUnknownObjectBehavior((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertTrue(i58 == 2);
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertTrue(i60 == 0);
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertTrue(i64 == 0);
    }

    @Test
    public void test740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test740");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        java.lang.Object[] obj_array46 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array54);
        int i58 = fixedOrderComparator57.getUnknownObjectBehavior();
        boolean b59 = fixedOrderComparator57.isLocked();
        int i60 = fixedOrderComparator41.compare((java.lang.Object) fixedOrderComparator47, (java.lang.Object) fixedOrderComparator57);
        java.lang.Object[] obj_array67 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array67);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array67);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator70.setUnknownObjectBehavior(0);
        int i73 = fixedOrderComparator70.getUnknownObjectBehavior();
        boolean b75 = fixedOrderComparator69.addAsEqual((java.lang.Object) i73, (java.lang.Object) (short) 1);
        int i76 = fixedOrderComparator69.getUnknownObjectBehavior();
        java.lang.Object[] obj_array83 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator84 = new collections.comparators.FixedOrderComparator(obj_array83);
        boolean b85 = fixedOrderComparator84.isLocked();
        boolean b86 = fixedOrderComparator69.add((java.lang.Object) fixedOrderComparator84);
        int i87 = fixedOrderComparator69.getUnknownObjectBehavior();
        boolean b88 = fixedOrderComparator69.isLocked();
        boolean b89 = fixedOrderComparator47.add((java.lang.Object) b88);
        int i90 = fixedOrderComparator47.getUnknownObjectBehavior();
        boolean b91 = fixedOrderComparator47.isLocked();
        boolean b92 = fixedOrderComparator47.isLocked();
        boolean b93 = fixedOrderComparator47.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertTrue(i58 == 2);
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertTrue(i60 == 0);
        org.junit.Assert.assertNotNull(obj_array67);
        org.junit.Assert.assertTrue(i73 == 0);
        org.junit.Assert.assertTrue(b75 == true);
        org.junit.Assert.assertTrue(i76 == 2);
        org.junit.Assert.assertNotNull(obj_array83);
        org.junit.Assert.assertTrue(b85 == false);
        org.junit.Assert.assertTrue(b86 == true);
        org.junit.Assert.assertTrue(i87 == 2);
        org.junit.Assert.assertTrue(b88 == false);
        org.junit.Assert.assertTrue(b89 == true);
        org.junit.Assert.assertTrue(i90 == 2);
        org.junit.Assert.assertTrue(b91 == false);
        org.junit.Assert.assertTrue(b92 == false);
        org.junit.Assert.assertTrue(b93 == false);
    }

    @Test
    public void test741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test741");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array18 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array18);
        int i22 = fixedOrderComparator21.getUnknownObjectBehavior();
        boolean b23 = fixedOrderComparator21.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array31 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        boolean b34 = fixedOrderComparator32.add((java.lang.Object) (-1.0f));
        int i35 = fixedOrderComparator32.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        fixedOrderComparator44.setUnknownObjectBehavior((int) (short) 0);
        int i47 = fixedOrderComparator44.getUnknownObjectBehavior();
        boolean b48 = fixedOrderComparator32.add((java.lang.Object) i47);
        boolean b49 = fixedOrderComparator24.add((java.lang.Object) fixedOrderComparator32);
        int i50 = fixedOrderComparator7.compare((java.lang.Object) b23, (java.lang.Object) fixedOrderComparator24);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator();
        int i52 = fixedOrderComparator51.getUnknownObjectBehavior();
        boolean b53 = fixedOrderComparator51.isLocked();
        fixedOrderComparator51.setUnknownObjectBehavior(0);
        boolean b57 = fixedOrderComparator51.add((java.lang.Object) 10L);
        boolean b58 = fixedOrderComparator51.isLocked();
        java.lang.Object[] obj_array65 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array65);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array65);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array65);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array65);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array65);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array65);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array65);
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator(obj_array65);
        collections.comparators.FixedOrderComparator fixedOrderComparator74 = new collections.comparators.FixedOrderComparator(obj_array65);
        boolean b75 = fixedOrderComparator51.add((java.lang.Object) fixedOrderComparator74);
        java.lang.Object[] obj_array82 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator(obj_array82);
        collections.comparators.FixedOrderComparator fixedOrderComparator84 = new collections.comparators.FixedOrderComparator(obj_array82);
        java.lang.Object[] obj_array85 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array85);
        boolean b87 = fixedOrderComparator84.add((java.lang.Object) obj_array85);
        collections.comparators.FixedOrderComparator fixedOrderComparator88 = new collections.comparators.FixedOrderComparator(obj_array85);
        collections.comparators.FixedOrderComparator fixedOrderComparator89 = new collections.comparators.FixedOrderComparator(obj_array85);
        boolean b90 = fixedOrderComparator89.isLocked();
        boolean b91 = fixedOrderComparator89.isLocked();
        try {
            int i92 = fixedOrderComparator24.compare((java.lang.Object) b75, (java.lang.Object) b91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertTrue(i22 == 2);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(i50 == 0);
        org.junit.Assert.assertTrue(i52 == 2);
        org.junit.Assert.assertTrue(b53 == false);
        org.junit.Assert.assertTrue(b57 == true);
        org.junit.Assert.assertTrue(b58 == false);
        org.junit.Assert.assertNotNull(obj_array65);
        org.junit.Assert.assertTrue(b75 == true);
        org.junit.Assert.assertNotNull(obj_array82);
        org.junit.Assert.assertNotNull(obj_array85);
        org.junit.Assert.assertTrue(b87 == true);
        org.junit.Assert.assertTrue(b90 == false);
        org.junit.Assert.assertTrue(b91 == false);
    }

    @Test
    public void test742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test742");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        java.lang.Object[] obj_array46 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array54);
        int i58 = fixedOrderComparator57.getUnknownObjectBehavior();
        boolean b59 = fixedOrderComparator57.isLocked();
        int i60 = fixedOrderComparator41.compare((java.lang.Object) fixedOrderComparator47, (java.lang.Object) fixedOrderComparator57);
        java.lang.Object[] obj_array67 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array67);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array67);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array67);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array67);
        int i72 = fixedOrderComparator71.getUnknownObjectBehavior();
        int i73 = fixedOrderComparator71.getUnknownObjectBehavior();
        boolean b74 = fixedOrderComparator71.isLocked();
        boolean b75 = fixedOrderComparator57.add((java.lang.Object) fixedOrderComparator71);
        int i76 = fixedOrderComparator71.getUnknownObjectBehavior();
        boolean b77 = fixedOrderComparator71.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertTrue(i58 == 2);
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertTrue(i60 == 0);
        org.junit.Assert.assertNotNull(obj_array67);
        org.junit.Assert.assertTrue(i72 == 2);
        org.junit.Assert.assertTrue(i73 == 2);
        org.junit.Assert.assertTrue(b74 == false);
        org.junit.Assert.assertTrue(b75 == true);
        org.junit.Assert.assertTrue(i76 == 2);
        org.junit.Assert.assertTrue(b77 == false);
    }

    @Test
    public void test743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test743");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b13 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        fixedOrderComparator7.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b31 = fixedOrderComparator7.add((java.lang.Object) obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b33 = fixedOrderComparator32.isLocked();
        int i34 = fixedOrderComparator32.getUnknownObjectBehavior();
        fixedOrderComparator32.setUnknownObjectBehavior((int) (short) 0);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertTrue(i34 == 2);
    }

    @Test
    public void test744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test744");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b13 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b14 = fixedOrderComparator7.isLocked();
        boolean b15 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b30 = fixedOrderComparator7.add((java.lang.Object) obj_array22);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertTrue(b15 == false);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b30 == true);
    }

    @Test
    public void test745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test745");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b12 = fixedOrderComparator10.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        boolean b19 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object obj21 = null;
        int i22 = fixedOrderComparator13.compare((java.lang.Object) 1.0d, obj21);
        boolean b23 = fixedOrderComparator13.isLocked();
        boolean b24 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator13);
        boolean b25 = fixedOrderComparator13.isLocked();
        int i26 = fixedOrderComparator13.getUnknownObjectBehavior();
        try {
            fixedOrderComparator13.setUnknownObjectBehavior((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(i26 == 0);
    }

    @Test
    public void test746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test746");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        int i11 = fixedOrderComparator8.getUnknownObjectBehavior();
        int i12 = fixedOrderComparator8.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        int i19 = fixedOrderComparator13.getUnknownObjectBehavior();
        boolean b20 = fixedOrderComparator8.add((java.lang.Object) i19);
        boolean b21 = fixedOrderComparator8.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 0);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertTrue(b21 == false);
    }

    @Test
    public void test747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test747");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        boolean b21 = fixedOrderComparator7.isLocked();
        boolean b22 = fixedOrderComparator7.isLocked();
        boolean b23 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        boolean b37 = fixedOrderComparator34.isLocked();
        java.lang.Object[] obj_array44 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array44);
        fixedOrderComparator45.setUnknownObjectBehavior(0);
        boolean b49 = fixedOrderComparator45.add((java.lang.Object) 1.0f);
        boolean b51 = fixedOrderComparator45.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator();
        boolean b53 = fixedOrderComparator52.isLocked();
        boolean b55 = fixedOrderComparator52.add((java.lang.Object) 10.0d);
        int i56 = fixedOrderComparator34.compare((java.lang.Object) b51, (java.lang.Object) fixedOrderComparator52);
        java.lang.Object[] obj_array63 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array63);
        fixedOrderComparator65.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array74 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array74);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array74);
        int i78 = fixedOrderComparator65.compare((java.lang.Object) fixedOrderComparator76, (java.lang.Object) (-1.0d));
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator79.setUnknownObjectBehavior(0);
        boolean b82 = fixedOrderComparator79.isLocked();
        boolean b83 = fixedOrderComparator76.add((java.lang.Object) fixedOrderComparator79);
        boolean b84 = fixedOrderComparator52.add((java.lang.Object) fixedOrderComparator76);
        try {
            boolean b85 = fixedOrderComparator7.addAsEqual((java.lang.Object) fixedOrderComparator33, (java.lang.Object) fixedOrderComparator52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertNotNull(obj_array44);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertTrue(b53 == false);
        org.junit.Assert.assertTrue(b55 == true);
        org.junit.Assert.assertTrue(i56 == 0);
        org.junit.Assert.assertNotNull(obj_array63);
        org.junit.Assert.assertNotNull(obj_array74);
        org.junit.Assert.assertTrue(i78 == 0);
        org.junit.Assert.assertTrue(b82 == false);
        org.junit.Assert.assertTrue(b83 == true);
        org.junit.Assert.assertTrue(b84 == true);
    }

    @Test
    public void test748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test748");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b13 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        fixedOrderComparator7.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b31 = fixedOrderComparator7.add((java.lang.Object) obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array22);
        java.lang.Object[] obj_array39 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array39);
        boolean b42 = fixedOrderComparator40.add((java.lang.Object) (-1.0f));
        fixedOrderComparator40.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array52 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array52);
        fixedOrderComparator54.setUnknownObjectBehavior((int) (short) 0);
        int i57 = fixedOrderComparator40.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator54);
        boolean b58 = fixedOrderComparator32.add((java.lang.Object) fixedOrderComparator40);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertNotNull(obj_array39);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertNotNull(obj_array52);
        org.junit.Assert.assertTrue(i57 == 0);
        org.junit.Assert.assertTrue(b58 == true);
    }

    @Test
    public void test749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test749");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        boolean b1 = fixedOrderComparator0.isLocked();
        boolean b3 = fixedOrderComparator0.add((java.lang.Object) 10.0d);
        java.lang.Object obj4 = null;
        boolean b5 = fixedOrderComparator0.add(obj4);
        java.lang.Object[] obj_array12 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array12);
        java.lang.Object[] obj_array20 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        fixedOrderComparator21.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator13.add((java.lang.Object) 0);
        fixedOrderComparator13.setUnknownObjectBehavior((int) (short) 0);
        boolean b27 = fixedOrderComparator13.isLocked();
        boolean b28 = fixedOrderComparator13.isLocked();
        boolean b29 = fixedOrderComparator13.isLocked();
        int i30 = fixedOrderComparator13.getUnknownObjectBehavior();
        int i31 = fixedOrderComparator13.getUnknownObjectBehavior();
        java.lang.Object[] obj_array38 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array38);
        fixedOrderComparator39.setUnknownObjectBehavior(0);
        boolean b43 = fixedOrderComparator39.add((java.lang.Object) 1.0f);
        java.lang.Object obj44 = null;
        java.lang.Object[] obj_array51 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array51);
        fixedOrderComparator52.setUnknownObjectBehavior(0);
        boolean b56 = fixedOrderComparator52.add((java.lang.Object) 1.0f);
        int i57 = fixedOrderComparator52.getUnknownObjectBehavior();
        int i58 = fixedOrderComparator39.compare(obj44, (java.lang.Object) i57);
        java.lang.Object[] obj_array65 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array65);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array65);
        java.lang.Object[] obj_array68 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array68);
        boolean b70 = fixedOrderComparator67.add((java.lang.Object) obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator(obj_array68);
        boolean b74 = fixedOrderComparator13.addAsEqual((java.lang.Object) i57, (java.lang.Object) obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array68);
        boolean b77 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator76);
        java.lang.Object[] obj_array84 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array84);
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array84);
        int i87 = fixedOrderComparator86.getUnknownObjectBehavior();
        boolean b88 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator86);
        org.junit.Assert.assertTrue(b1 == false);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue(b5 == true);
        org.junit.Assert.assertNotNull(obj_array12);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertTrue(i31 == 0);
        org.junit.Assert.assertNotNull(obj_array38);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertNotNull(obj_array51);
        org.junit.Assert.assertTrue(b56 == true);
        org.junit.Assert.assertTrue(i57 == 0);
        org.junit.Assert.assertTrue(i58 == (-1));
        org.junit.Assert.assertNotNull(obj_array65);
        org.junit.Assert.assertNotNull(obj_array68);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertTrue(b74 == true);
        org.junit.Assert.assertTrue(b77 == true);
        org.junit.Assert.assertNotNull(obj_array84);
        org.junit.Assert.assertTrue(i87 == 2);
        org.junit.Assert.assertTrue(b88 == true);
    }

    @Test
    public void test750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test750");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b28 = fixedOrderComparator14.add((java.lang.Object) obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array21);
        java.lang.Object[] obj_array36 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array36);
        boolean b39 = fixedOrderComparator29.add((java.lang.Object) obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array36);
        int i42 = fixedOrderComparator41.getUnknownObjectBehavior();
        java.lang.Object[] obj_array49 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array49);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array49);
        java.lang.Object[] obj_array58 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array58);
        fixedOrderComparator60.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array69 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array69);
        int i73 = fixedOrderComparator60.compare((java.lang.Object) fixedOrderComparator71, (java.lang.Object) (-1.0d));
        boolean b74 = fixedOrderComparator51.add((java.lang.Object) fixedOrderComparator60);
        java.lang.Object[] obj_array81 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array81);
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator(obj_array81);
        int i84 = fixedOrderComparator83.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator85.setUnknownObjectBehavior(0);
        int i88 = fixedOrderComparator85.getUnknownObjectBehavior();
        fixedOrderComparator85.setUnknownObjectBehavior((int) (byte) 0);
        fixedOrderComparator85.setUnknownObjectBehavior(1);
        boolean b93 = fixedOrderComparator83.add((java.lang.Object) fixedOrderComparator85);
        try {
            boolean b94 = fixedOrderComparator41.addAsEqual((java.lang.Object) fixedOrderComparator60, (java.lang.Object) b93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(i42 == 2);
        org.junit.Assert.assertNotNull(obj_array49);
        org.junit.Assert.assertNotNull(obj_array58);
        org.junit.Assert.assertNotNull(obj_array69);
        org.junit.Assert.assertTrue(i73 == 0);
        org.junit.Assert.assertTrue(b74 == true);
        org.junit.Assert.assertNotNull(obj_array81);
        org.junit.Assert.assertTrue(i84 == 2);
        org.junit.Assert.assertTrue(i88 == 0);
        org.junit.Assert.assertTrue(b93 == true);
    }

    @Test
    public void test751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test751");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        boolean b27 = fixedOrderComparator7.isLocked();
        int i28 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i29 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b30 = fixedOrderComparator7.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertTrue(i29 == 0);
        org.junit.Assert.assertTrue(b30 == true);
    }

    @Test
    public void test752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test752");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i8 = fixedOrderComparator7.getUnknownObjectBehavior();
        try {
            fixedOrderComparator7.setUnknownObjectBehavior((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i8 == 2);
    }

    @Test
    public void test753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test753");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b13 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        fixedOrderComparator7.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b31 = fixedOrderComparator7.add((java.lang.Object) obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array22);
        try {
            fixedOrderComparator35.setUnknownObjectBehavior((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b31 == true);
    }

    @Test
    public void test754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test754");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator8.setUnknownObjectBehavior(2);
        int i13 = fixedOrderComparator8.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator14.setUnknownObjectBehavior(0);
        int i17 = fixedOrderComparator14.getUnknownObjectBehavior();
        fixedOrderComparator14.setUnknownObjectBehavior((int) (byte) 0);
        boolean b20 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator14);
        java.lang.Object[] obj_array28 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        boolean b33 = fixedOrderComparator29.add((java.lang.Object) 1.0f);
        int i34 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b35 = fixedOrderComparator29.isLocked();
        java.lang.Object[] obj_array36 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        java.lang.Object[] obj_array38 = new java.lang.Object[] { fixedOrderComparator37 };
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array38);
        java.lang.Object[] obj_array47 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array47);
        int i50 = fixedOrderComparator29.compare((java.lang.Object) fixedOrderComparator40, (java.lang.Object) obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array47);
        try {
            int i55 = fixedOrderComparator8.compare((java.lang.Object) 100.0f, (java.lang.Object) fixedOrderComparator54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i13 == 2);
        org.junit.Assert.assertTrue(i17 == 0);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(b33 == true);
        org.junit.Assert.assertTrue(i34 == 0);
        org.junit.Assert.assertTrue(b35 == false);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertNotNull(obj_array38);
        org.junit.Assert.assertNotNull(obj_array47);
        org.junit.Assert.assertTrue(i50 == 0);
    }

    @Test
    public void test755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test755");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        boolean b10 = fixedOrderComparator7.isLocked();
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        int i13 = fixedOrderComparator7.getUnknownObjectBehavior();
        try {
            fixedOrderComparator7.setUnknownObjectBehavior(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(b10 == false);
        org.junit.Assert.assertTrue(i13 == 0);
    }

    @Test
    public void test756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test756");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        boolean b21 = fixedOrderComparator7.isLocked();
        boolean b22 = fixedOrderComparator7.isLocked();
        boolean b23 = fixedOrderComparator7.isLocked();
        int i24 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array31 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array31);
        boolean b35 = fixedOrderComparator34.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator();
        int i37 = fixedOrderComparator36.getUnknownObjectBehavior();
        java.lang.Object[] obj_array44 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array44);
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array44);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array44);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array44);
        boolean b49 = fixedOrderComparator36.add((java.lang.Object) fixedOrderComparator48);
        fixedOrderComparator36.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array58 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array58);
        java.lang.Object[] obj_array65 = new java.lang.Object[] { fixedOrderComparator36, obj_array58 };
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array58);
        int i70 = fixedOrderComparator69.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator();
        boolean b72 = fixedOrderComparator69.add((java.lang.Object) fixedOrderComparator71);
        try {
            boolean b73 = fixedOrderComparator7.addAsEqual((java.lang.Object) b35, (java.lang.Object) fixedOrderComparator69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertTrue(b35 == false);
        org.junit.Assert.assertTrue(i37 == 2);
        org.junit.Assert.assertNotNull(obj_array44);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertNotNull(obj_array58);
        org.junit.Assert.assertNotNull(obj_array65);
        org.junit.Assert.assertTrue(i70 == 2);
        org.junit.Assert.assertTrue(b72 == true);
    }

    @Test
    public void test757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test757");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i11 = fixedOrderComparator10.getUnknownObjectBehavior();
        int i12 = fixedOrderComparator10.getUnknownObjectBehavior();
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator10.isLocked();
        java.lang.Object[] obj_array21 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        fixedOrderComparator22.setUnknownObjectBehavior(0);
        boolean b26 = fixedOrderComparator22.add((java.lang.Object) 1.0f);
        java.lang.Object obj27 = null;
        java.lang.Object[] obj_array34 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array34);
        fixedOrderComparator35.setUnknownObjectBehavior(0);
        boolean b39 = fixedOrderComparator35.add((java.lang.Object) 1.0f);
        int i40 = fixedOrderComparator35.getUnknownObjectBehavior();
        int i41 = fixedOrderComparator22.compare(obj27, (java.lang.Object) i40);
        int i42 = fixedOrderComparator22.getUnknownObjectBehavior();
        boolean b43 = fixedOrderComparator22.isLocked();
        java.lang.Object[] obj_array50 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array50);
        fixedOrderComparator52.setUnknownObjectBehavior((int) (short) 0);
        int i55 = fixedOrderComparator52.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator56.setUnknownObjectBehavior(0);
        int i59 = fixedOrderComparator56.getUnknownObjectBehavior();
        int i60 = fixedOrderComparator22.compare((java.lang.Object) i55, (java.lang.Object) fixedOrderComparator56);
        int i61 = fixedOrderComparator22.getUnknownObjectBehavior();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Object obj63 = null;
        int i64 = fixedOrderComparator22.compare(obj62, obj63);
        boolean b65 = fixedOrderComparator10.add(obj62);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 2);
        org.junit.Assert.assertTrue(i12 == 2);
        org.junit.Assert.assertTrue(i13 == 2);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertNotNull(obj_array34);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i41 == (-1));
        org.junit.Assert.assertTrue(i42 == 0);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertNotNull(obj_array50);
        org.junit.Assert.assertTrue(i55 == 0);
        org.junit.Assert.assertTrue(i59 == 0);
        org.junit.Assert.assertTrue(i60 == 1);
        org.junit.Assert.assertTrue(i61 == 0);
        org.junit.Assert.assertTrue(i64 == 0);
        org.junit.Assert.assertTrue(b65 == true);
    }

    @Test
    public void test758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test758");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj18 = null;
        int i19 = fixedOrderComparator10.compare((java.lang.Object) 1.0d, obj18);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator();
        int i37 = fixedOrderComparator36.getUnknownObjectBehavior();
        java.lang.Object[] obj_array44 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array44);
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array44);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array44);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array44);
        boolean b49 = fixedOrderComparator36.add((java.lang.Object) fixedOrderComparator48);
        fixedOrderComparator36.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array58 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array58);
        java.lang.Object[] obj_array65 = new java.lang.Object[] { fixedOrderComparator36, obj_array58 };
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array58);
        boolean b71 = fixedOrderComparator70.isLocked();
        int i72 = fixedOrderComparator10.compare((java.lang.Object) fixedOrderComparator35, (java.lang.Object) fixedOrderComparator70);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(i37 == 2);
        org.junit.Assert.assertNotNull(obj_array44);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertNotNull(obj_array58);
        org.junit.Assert.assertNotNull(obj_array65);
        org.junit.Assert.assertTrue(b71 == false);
        org.junit.Assert.assertTrue(i72 == 0);
    }

    @Test
    public void test759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test759");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator();
        int i35 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator34.isLocked();
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        int i39 = fixedOrderComparator12.compare((java.lang.Object) obj_array29, (java.lang.Object) fixedOrderComparator34);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        java.lang.Object[] obj_array51 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array51);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array51);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array51);
        java.lang.Object[] obj_array61 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array61);
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array61);
        java.lang.Object[] obj_array70 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array70);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array70);
        fixedOrderComparator72.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array81 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array81);
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator(obj_array81);
        int i85 = fixedOrderComparator72.compare((java.lang.Object) fixedOrderComparator83, (java.lang.Object) (-1.0d));
        boolean b86 = fixedOrderComparator63.add((java.lang.Object) fixedOrderComparator72);
        boolean b87 = fixedOrderComparator72.isLocked();
        int i88 = fixedOrderComparator72.getUnknownObjectBehavior();
        int i89 = fixedOrderComparator41.compare((java.lang.Object) obj_array51, (java.lang.Object) fixedOrderComparator72);
        boolean b90 = fixedOrderComparator40.add((java.lang.Object) i89);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(i39 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertNotNull(obj_array51);
        org.junit.Assert.assertNotNull(obj_array61);
        org.junit.Assert.assertNotNull(obj_array70);
        org.junit.Assert.assertNotNull(obj_array81);
        org.junit.Assert.assertTrue(i85 == 0);
        org.junit.Assert.assertTrue(b86 == true);
        org.junit.Assert.assertTrue(b87 == true);
        org.junit.Assert.assertTrue(i88 == 0);
        org.junit.Assert.assertTrue(i89 == 0);
        org.junit.Assert.assertTrue(b90 == false);
    }

    @Test
    public void test760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test760");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i9 = fixedOrderComparator8.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        fixedOrderComparator10.setUnknownObjectBehavior(1);
        boolean b18 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator10);
        try {
            fixedOrderComparator10.setUnknownObjectBehavior((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i9 == 2);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b18 == true);
    }

    @Test
    public void test761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test761");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        boolean b12 = fixedOrderComparator8.add((java.lang.Object) ' ');
        try {
            fixedOrderComparator8.setUnknownObjectBehavior((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b12 == true);
    }

    @Test
    public void test762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test762");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj17 = null;
        boolean b18 = fixedOrderComparator7.add(obj17);
        java.lang.Object[] obj_array25 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array25);
        fixedOrderComparator26.setUnknownObjectBehavior(0);
        boolean b30 = fixedOrderComparator26.add((java.lang.Object) 1.0f);
        boolean b32 = fixedOrderComparator26.add((java.lang.Object) 1.0f);
        boolean b33 = fixedOrderComparator26.isLocked();
        boolean b34 = fixedOrderComparator26.isLocked();
        boolean b35 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator26);
        java.lang.Object[] obj_array42 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        boolean b45 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator44);
        boolean b46 = fixedOrderComparator44.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertNotNull(obj_array25);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(b46 == false);
    }

    @Test
    public void test763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test763");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator();
        int i35 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator34.isLocked();
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        int i39 = fixedOrderComparator12.compare((java.lang.Object) obj_array29, (java.lang.Object) fixedOrderComparator34);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator40.setUnknownObjectBehavior(0);
        int i43 = fixedOrderComparator40.getUnknownObjectBehavior();
        java.lang.Object[] obj_array50 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array50);
        java.lang.Object[] obj_array60 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array60);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array60);
        java.lang.Object[] obj_array69 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array69);
        fixedOrderComparator71.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array80 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array80);
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array80);
        int i84 = fixedOrderComparator71.compare((java.lang.Object) fixedOrderComparator82, (java.lang.Object) (-1.0d));
        boolean b85 = fixedOrderComparator62.add((java.lang.Object) fixedOrderComparator71);
        boolean b86 = fixedOrderComparator71.isLocked();
        int i87 = fixedOrderComparator71.getUnknownObjectBehavior();
        int i88 = fixedOrderComparator40.compare((java.lang.Object) obj_array50, (java.lang.Object) fixedOrderComparator71);
        collections.comparators.FixedOrderComparator fixedOrderComparator89 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator90 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator91 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator92 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator93 = new collections.comparators.FixedOrderComparator(obj_array50);
        fixedOrderComparator93.setUnknownObjectBehavior((int) (short) 0);
        boolean b96 = fixedOrderComparator34.add((java.lang.Object) (short) 0);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(i39 == 0);
        org.junit.Assert.assertTrue(i43 == 0);
        org.junit.Assert.assertNotNull(obj_array50);
        org.junit.Assert.assertNotNull(obj_array60);
        org.junit.Assert.assertNotNull(obj_array69);
        org.junit.Assert.assertNotNull(obj_array80);
        org.junit.Assert.assertTrue(i84 == 0);
        org.junit.Assert.assertTrue(b85 == true);
        org.junit.Assert.assertTrue(b86 == true);
        org.junit.Assert.assertTrue(i87 == 0);
        org.junit.Assert.assertTrue(i88 == 0);
        org.junit.Assert.assertTrue(b96 == true);
    }

    @Test
    public void test764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test764");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array9 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b11 = fixedOrderComparator8.add((java.lang.Object) obj_array9);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array9);
        int i13 = fixedOrderComparator12.getUnknownObjectBehavior();
        int i14 = fixedOrderComparator12.getUnknownObjectBehavior();
        java.lang.Object[] obj_array21 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        java.lang.Object[] obj_array24 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array24);
        boolean b26 = fixedOrderComparator23.add((java.lang.Object) obj_array24);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array24);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array24);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array24);
        boolean b30 = fixedOrderComparator29.isLocked();
        java.lang.Object[] obj_array37 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array37);
        fixedOrderComparator38.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array47 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator50.setUnknownObjectBehavior(0);
        int i53 = fixedOrderComparator50.getUnknownObjectBehavior();
        boolean b55 = fixedOrderComparator49.addAsEqual((java.lang.Object) i53, (java.lang.Object) (short) 1);
        int i57 = fixedOrderComparator38.compare((java.lang.Object) fixedOrderComparator49, (java.lang.Object) '#');
        java.lang.Object[] obj_array64 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array64);
        int i67 = fixedOrderComparator66.getUnknownObjectBehavior();
        boolean b68 = fixedOrderComparator49.add((java.lang.Object) i67);
        boolean b69 = fixedOrderComparator49.isLocked();
        try {
            boolean b70 = fixedOrderComparator12.addAsEqual((java.lang.Object) fixedOrderComparator29, (java.lang.Object) fixedOrderComparator49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(i13 == 2);
        org.junit.Assert.assertTrue(i14 == 2);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertNotNull(obj_array24);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertNotNull(obj_array37);
        org.junit.Assert.assertNotNull(obj_array47);
        org.junit.Assert.assertTrue(i53 == 0);
        org.junit.Assert.assertTrue(b55 == true);
        org.junit.Assert.assertTrue(i57 == 0);
        org.junit.Assert.assertNotNull(obj_array64);
        org.junit.Assert.assertTrue(i67 == 2);
        org.junit.Assert.assertTrue(b68 == true);
        org.junit.Assert.assertTrue(b69 == false);
    }

    @Test
    public void test765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test765");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        int i11 = fixedOrderComparator8.getUnknownObjectBehavior();
        int i12 = fixedOrderComparator8.getUnknownObjectBehavior();
        int i13 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object[] obj_array20 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array20);
        int i25 = fixedOrderComparator24.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator24.getUnknownObjectBehavior();
        boolean b27 = fixedOrderComparator24.isLocked();
        boolean b28 = fixedOrderComparator24.isLocked();
        boolean b29 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator24);
        try {
            fixedOrderComparator8.setUnknownObjectBehavior(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 0);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertTrue(i25 == 2);
        org.junit.Assert.assertTrue(i26 == 2);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertTrue(b29 == true);
    }

    @Test
    public void test766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test766");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        int i10 = fixedOrderComparator7.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator11.setUnknownObjectBehavior(0);
        boolean b14 = fixedOrderComparator11.isLocked();
        boolean b15 = fixedOrderComparator11.isLocked();
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        fixedOrderComparator23.setUnknownObjectBehavior(0);
        boolean b27 = fixedOrderComparator23.add((java.lang.Object) 1.0f);
        boolean b29 = fixedOrderComparator23.add((java.lang.Object) 1.0f);
        int i31 = fixedOrderComparator11.compare((java.lang.Object) fixedOrderComparator23, (java.lang.Object) 1.0d);
        boolean b32 = fixedOrderComparator23.isLocked();
        java.lang.Object[] obj_array39 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array39);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array39);
        fixedOrderComparator41.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator41.setUnknownObjectBehavior(2);
        boolean b46 = fixedOrderComparator41.isLocked();
        boolean b47 = fixedOrderComparator41.isLocked();
        int i48 = fixedOrderComparator7.compare((java.lang.Object) fixedOrderComparator23, (java.lang.Object) b47);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i10 == 0);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertTrue(b15 == false);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertTrue(i31 == 0);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNotNull(obj_array39);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue(b47 == false);
        org.junit.Assert.assertTrue(i48 == 0);
    }

    @Test
    public void test767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test767");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b8 = fixedOrderComparator7.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b8 == false);
    }

    @Test
    public void test768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test768");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        int i27 = fixedOrderComparator26.getUnknownObjectBehavior();
        int i28 = fixedOrderComparator26.getUnknownObjectBehavior();
        boolean b29 = fixedOrderComparator26.isLocked();
        int i30 = fixedOrderComparator26.getUnknownObjectBehavior();
        int i32 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator26, (java.lang.Object) 1L);
        int i33 = fixedOrderComparator0.getUnknownObjectBehavior();
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(i27 == 2);
        org.junit.Assert.assertTrue(i28 == 2);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertTrue(i30 == 2);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(i33 == 0);
    }

    @Test
    public void test769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test769");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { fixedOrderComparator0, obj_array22 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b39 = fixedOrderComparator37.add((java.lang.Object) (-1.0d));
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        int i41 = fixedOrderComparator37.getUnknownObjectBehavior();
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(i40 == 2);
        org.junit.Assert.assertTrue(i41 == 2);
    }

    @Test
    public void test770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test770");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        int i21 = fixedOrderComparator8.compare((java.lang.Object) fixedOrderComparator19, (java.lang.Object) (-1.0d));
        boolean b22 = fixedOrderComparator19.isLocked();
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        boolean b32 = fixedOrderComparator30.add((java.lang.Object) (-1.0f));
        fixedOrderComparator30.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array42 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        fixedOrderComparator44.setUnknownObjectBehavior((int) (short) 0);
        int i47 = fixedOrderComparator30.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator44);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        java.lang.Object[] obj_array62 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array62);
        fixedOrderComparator63.setUnknownObjectBehavior(0);
        boolean b66 = fixedOrderComparator55.add((java.lang.Object) 0);
        fixedOrderComparator55.setUnknownObjectBehavior((int) (short) 0);
        boolean b69 = fixedOrderComparator55.isLocked();
        boolean b70 = fixedOrderComparator19.addAsEqual((java.lang.Object) i47, (java.lang.Object) b69);
        int i71 = fixedOrderComparator19.getUnknownObjectBehavior();
        boolean b72 = fixedOrderComparator19.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertNotNull(obj_array62);
        org.junit.Assert.assertTrue(b66 == false);
        org.junit.Assert.assertTrue(b69 == false);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertTrue(i71 == 2);
        org.junit.Assert.assertTrue(b72 == false);
    }

    @Test
    public void test771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test771");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator8.setUnknownObjectBehavior(2);
        int i13 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object[] obj_array20 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array20);
        boolean b28 = fixedOrderComparator8.add((java.lang.Object) obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array20);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i13 == 2);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertTrue(b28 == true);
    }

    @Test
    public void test772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test772");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator9.setUnknownObjectBehavior(0);
        int i12 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) i12, (java.lang.Object) (short) 1);
        int i15 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        fixedOrderComparator24.setUnknownObjectBehavior((int) (short) 0);
        int i27 = fixedOrderComparator24.getUnknownObjectBehavior();
        int i28 = fixedOrderComparator24.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        int i32 = fixedOrderComparator29.getUnknownObjectBehavior();
        fixedOrderComparator29.setUnknownObjectBehavior((int) (byte) 0);
        int i35 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator24.add((java.lang.Object) i35);
        boolean b37 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator24);
        boolean b38 = fixedOrderComparator24.isLocked();
        int i39 = fixedOrderComparator24.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i15 == 2);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(i35 == 0);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertTrue(i39 == 0);
    }

    @Test
    public void test773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test773");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator6 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator6.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array15 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array15);
        boolean b18 = fixedOrderComparator16.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator19.setUnknownObjectBehavior(0);
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        fixedOrderComparator19.setUnknownObjectBehavior((int) (byte) 0);
        boolean b25 = fixedOrderComparator16.add((java.lang.Object) fixedOrderComparator19);
        java.lang.Object obj27 = null;
        int i28 = fixedOrderComparator19.compare((java.lang.Object) 1.0d, obj27);
        boolean b29 = fixedOrderComparator19.isLocked();
        boolean b30 = fixedOrderComparator6.add((java.lang.Object) fixedOrderComparator19);
        java.lang.Object[] obj_array37 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array37);
        fixedOrderComparator39.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array48 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array48);
        int i52 = fixedOrderComparator39.compare((java.lang.Object) fixedOrderComparator50, (java.lang.Object) (-1.0d));
        boolean b53 = fixedOrderComparator50.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator54.setUnknownObjectBehavior(0);
        boolean b57 = fixedOrderComparator54.isLocked();
        java.lang.Object[] obj_array64 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array64);
        fixedOrderComparator65.setUnknownObjectBehavior(0);
        boolean b69 = fixedOrderComparator65.add((java.lang.Object) 1.0f);
        boolean b71 = fixedOrderComparator65.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator();
        boolean b73 = fixedOrderComparator72.isLocked();
        boolean b75 = fixedOrderComparator72.add((java.lang.Object) 10.0d);
        int i76 = fixedOrderComparator54.compare((java.lang.Object) b71, (java.lang.Object) fixedOrderComparator72);
        boolean b77 = fixedOrderComparator54.isLocked();
        int i78 = fixedOrderComparator6.compare((java.lang.Object) b53, (java.lang.Object) fixedOrderComparator54);
        int i79 = fixedOrderComparator0.compare((java.lang.Object) 100.0f, (java.lang.Object) fixedOrderComparator6);
        boolean b80 = fixedOrderComparator0.isLocked();
        try {
            fixedOrderComparator0.setUnknownObjectBehavior(0);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array15);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertNotNull(obj_array37);
        org.junit.Assert.assertNotNull(obj_array48);
        org.junit.Assert.assertTrue(i52 == 0);
        org.junit.Assert.assertTrue(b53 == false);
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertNotNull(obj_array64);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertTrue(b71 == false);
        org.junit.Assert.assertTrue(b73 == false);
        org.junit.Assert.assertTrue(b75 == true);
        org.junit.Assert.assertTrue(i76 == 0);
        org.junit.Assert.assertTrue(b77 == true);
        org.junit.Assert.assertTrue(i78 == 0);
        org.junit.Assert.assertTrue(i79 == 0);
        org.junit.Assert.assertTrue(b80 == true);
    }

    @Test
    public void test774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test774");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        boolean b27 = fixedOrderComparator7.isLocked();
        int i28 = fixedOrderComparator7.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator();
        int i30 = fixedOrderComparator29.getUnknownObjectBehavior();
        java.lang.Object[] obj_array37 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array37);
        boolean b42 = fixedOrderComparator29.add((java.lang.Object) fixedOrderComparator41);
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array51 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array51);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array51);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array51);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array51);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array51);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array51);
        java.lang.Object[] obj_array58 = new java.lang.Object[] { fixedOrderComparator29, obj_array51 };
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array51);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array51);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array51);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array51);
        int i63 = fixedOrderComparator62.getUnknownObjectBehavior();
        java.lang.Object[] obj_array70 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array70);
        fixedOrderComparator71.setUnknownObjectBehavior(0);
        boolean b75 = fixedOrderComparator71.add((java.lang.Object) 1.0f);
        java.lang.Object obj76 = null;
        java.lang.Object[] obj_array83 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator84 = new collections.comparators.FixedOrderComparator(obj_array83);
        fixedOrderComparator84.setUnknownObjectBehavior(0);
        boolean b88 = fixedOrderComparator84.add((java.lang.Object) 1.0f);
        int i89 = fixedOrderComparator84.getUnknownObjectBehavior();
        int i90 = fixedOrderComparator71.compare(obj76, (java.lang.Object) i89);
        int i91 = fixedOrderComparator71.getUnknownObjectBehavior();
        try {
            boolean b92 = fixedOrderComparator7.addAsEqual((java.lang.Object) i63, (java.lang.Object) fixedOrderComparator71);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertTrue(i30 == 2);
        org.junit.Assert.assertNotNull(obj_array37);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertNotNull(obj_array51);
        org.junit.Assert.assertNotNull(obj_array58);
        org.junit.Assert.assertTrue(i63 == 2);
        org.junit.Assert.assertNotNull(obj_array70);
        org.junit.Assert.assertTrue(b75 == true);
        org.junit.Assert.assertNotNull(obj_array83);
        org.junit.Assert.assertTrue(b88 == true);
        org.junit.Assert.assertTrue(i89 == 0);
        org.junit.Assert.assertTrue(i90 == (-1));
        org.junit.Assert.assertTrue(i91 == 0);
    }

    @Test
    public void test775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test775");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { fixedOrderComparator0, obj_array22 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array22);
        try {
            fixedOrderComparator34.setUnknownObjectBehavior((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertNotNull(obj_array29);
    }

    @Test
    public void test776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test776");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array19 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator21.setUnknownObjectBehavior((int) (short) 0);
        int i24 = fixedOrderComparator7.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator21);
        int i25 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b27 = fixedOrderComparator7.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == 0);
        org.junit.Assert.assertTrue(b27 == true);
    }

    @Test
    public void test777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test777");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b28 = fixedOrderComparator14.add((java.lang.Object) obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array21);
        fixedOrderComparator29.setUnknownObjectBehavior((int) (byte) 0);
        boolean b32 = fixedOrderComparator29.isLocked();
        boolean b33 = fixedOrderComparator29.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertTrue(b33 == false);
    }

    @Test
    public void test778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test778");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b6 = fixedOrderComparator0.isLocked();
        int i7 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i8 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i9 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array16 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        boolean b19 = fixedOrderComparator17.add((java.lang.Object) (-1.0f));
        int i20 = fixedOrderComparator17.getUnknownObjectBehavior();
        java.lang.Object[] obj_array27 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array27);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array27);
        fixedOrderComparator29.setUnknownObjectBehavior((int) (short) 0);
        int i32 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b33 = fixedOrderComparator17.add((java.lang.Object) i32);
        int i34 = fixedOrderComparator17.getUnknownObjectBehavior();
        int i35 = fixedOrderComparator17.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator17.isLocked();
        java.lang.Object[] obj_array43 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array43);
        boolean b46 = fixedOrderComparator45.isLocked();
        int i47 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator17, (java.lang.Object) fixedOrderComparator45);
        boolean b48 = fixedOrderComparator17.isLocked();
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b6 == false);
        org.junit.Assert.assertTrue(i7 == 0);
        org.junit.Assert.assertTrue(i8 == 0);
        org.junit.Assert.assertTrue(i9 == 0);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i20 == 2);
        org.junit.Assert.assertNotNull(obj_array27);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertTrue(i34 == 2);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertNotNull(obj_array43);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b48 == false);
    }

    @Test
    public void test779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test779");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array16 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        boolean b19 = fixedOrderComparator17.add((java.lang.Object) (-1.0f));
        fixedOrderComparator17.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array28 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array28);
        int i32 = fixedOrderComparator31.getUnknownObjectBehavior();
        boolean b33 = fixedOrderComparator31.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array41 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array41);
        boolean b44 = fixedOrderComparator42.add((java.lang.Object) (-1.0f));
        int i45 = fixedOrderComparator42.getUnknownObjectBehavior();
        java.lang.Object[] obj_array52 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array52);
        fixedOrderComparator54.setUnknownObjectBehavior((int) (short) 0);
        int i57 = fixedOrderComparator54.getUnknownObjectBehavior();
        boolean b58 = fixedOrderComparator42.add((java.lang.Object) i57);
        boolean b59 = fixedOrderComparator34.add((java.lang.Object) fixedOrderComparator42);
        int i60 = fixedOrderComparator17.compare((java.lang.Object) b33, (java.lang.Object) fixedOrderComparator34);
        java.lang.Object[] obj_array68 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array68);
        java.lang.Object[] obj_array73 = new java.lang.Object[] { fixedOrderComparator34, (byte) 10, obj_array68 };
        collections.comparators.FixedOrderComparator fixedOrderComparator74 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array68);
        boolean b76 = fixedOrderComparator9.add((java.lang.Object) fixedOrderComparator75);
        fixedOrderComparator75.setUnknownObjectBehavior(0);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(i32 == 2);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertTrue(i45 == 2);
        org.junit.Assert.assertNotNull(obj_array52);
        org.junit.Assert.assertTrue(i57 == 0);
        org.junit.Assert.assertTrue(b58 == false);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertTrue(i60 == 0);
        org.junit.Assert.assertNotNull(obj_array68);
        org.junit.Assert.assertNotNull(obj_array73);
        org.junit.Assert.assertTrue(b76 == true);
    }

    @Test
    public void test780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test780");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i14 = fixedOrderComparator13.getUnknownObjectBehavior();
        int i15 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator();
        int i19 = fixedOrderComparator18.getUnknownObjectBehavior();
        boolean b20 = fixedOrderComparator18.isLocked();
        boolean b21 = fixedOrderComparator18.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator();
        int i23 = fixedOrderComparator22.getUnknownObjectBehavior();
        boolean b24 = fixedOrderComparator22.isLocked();
        fixedOrderComparator22.setUnknownObjectBehavior(0);
        boolean b27 = fixedOrderComparator18.add((java.lang.Object) fixedOrderComparator22);
        int i28 = fixedOrderComparator22.getUnknownObjectBehavior();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator37.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array48 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator51.setUnknownObjectBehavior(0);
        int i54 = fixedOrderComparator51.getUnknownObjectBehavior();
        boolean b56 = fixedOrderComparator50.addAsEqual((java.lang.Object) i54, (java.lang.Object) (short) 1);
        int i57 = fixedOrderComparator50.getUnknownObjectBehavior();
        java.lang.Object[] obj_array64 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array64);
        boolean b66 = fixedOrderComparator65.isLocked();
        boolean b67 = fixedOrderComparator50.add((java.lang.Object) fixedOrderComparator65);
        boolean b68 = fixedOrderComparator37.add((java.lang.Object) fixedOrderComparator50);
        boolean b69 = fixedOrderComparator22.add((java.lang.Object) fixedOrderComparator37);
        boolean b70 = fixedOrderComparator13.add((java.lang.Object) fixedOrderComparator22);
        int i71 = fixedOrderComparator13.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i14 == 2);
        org.junit.Assert.assertTrue(i15 == 2);
        org.junit.Assert.assertTrue(i19 == 2);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(i23 == 2);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertNotNull(obj_array48);
        org.junit.Assert.assertTrue(i54 == 0);
        org.junit.Assert.assertTrue(b56 == true);
        org.junit.Assert.assertTrue(i57 == 2);
        org.junit.Assert.assertNotNull(obj_array64);
        org.junit.Assert.assertTrue(b66 == false);
        org.junit.Assert.assertTrue(b67 == true);
        org.junit.Assert.assertTrue(b68 == true);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertTrue(i71 == 0);
    }

    @Test
    public void test781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test781");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        boolean b1 = fixedOrderComparator0.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator2 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator2.setUnknownObjectBehavior(0);
        int i5 = fixedOrderComparator2.getUnknownObjectBehavior();
        fixedOrderComparator2.setUnknownObjectBehavior((int) (byte) 0);
        boolean b9 = fixedOrderComparator2.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array16 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array16);
        java.lang.Object[] obj_array19 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        boolean b21 = fixedOrderComparator18.add((java.lang.Object) obj_array19);
        boolean b22 = fixedOrderComparator2.add((java.lang.Object) fixedOrderComparator18);
        fixedOrderComparator18.setUnknownObjectBehavior((int) (short) 0);
        boolean b25 = fixedOrderComparator18.isLocked();
        java.lang.Object obj26 = null;
        try {
            boolean b27 = fixedOrderComparator0.addAsEqual((java.lang.Object) b25, obj26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b1 == false);
        org.junit.Assert.assertTrue(i5 == 0);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue(b25 == false);
    }

    @Test
    public void test782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test782");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        boolean b1 = fixedOrderComparator0.isLocked();
        java.lang.Object obj2 = null;
        boolean b3 = fixedOrderComparator0.add(obj2);
        fixedOrderComparator0.setUnknownObjectBehavior(1);
        int i6 = fixedOrderComparator0.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        int i10 = fixedOrderComparator7.getUnknownObjectBehavior();
        fixedOrderComparator7.setUnknownObjectBehavior((int) (byte) 0);
        boolean b14 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        fixedOrderComparator22.setUnknownObjectBehavior(0);
        boolean b26 = fixedOrderComparator22.add((java.lang.Object) 1.0f);
        java.lang.Object obj27 = null;
        java.lang.Object[] obj_array34 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array34);
        fixedOrderComparator35.setUnknownObjectBehavior(0);
        boolean b39 = fixedOrderComparator35.add((java.lang.Object) 1.0f);
        int i40 = fixedOrderComparator35.getUnknownObjectBehavior();
        int i41 = fixedOrderComparator22.compare(obj27, (java.lang.Object) i40);
        int i42 = fixedOrderComparator22.getUnknownObjectBehavior();
        boolean b43 = fixedOrderComparator22.isLocked();
        java.lang.Object[] obj_array50 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array50);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array50);
        fixedOrderComparator52.setUnknownObjectBehavior((int) (short) 0);
        int i55 = fixedOrderComparator52.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator56.setUnknownObjectBehavior(0);
        int i59 = fixedOrderComparator56.getUnknownObjectBehavior();
        int i60 = fixedOrderComparator22.compare((java.lang.Object) i55, (java.lang.Object) fixedOrderComparator56);
        int i61 = fixedOrderComparator22.getUnknownObjectBehavior();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Object obj63 = null;
        int i64 = fixedOrderComparator22.compare(obj62, obj63);
        java.lang.Object[] obj_array71 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array71);
        java.lang.Object[] obj_array79 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array79);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array79);
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array79);
        int i83 = fixedOrderComparator22.compare((java.lang.Object) obj_array71, (java.lang.Object) fixedOrderComparator82);
        fixedOrderComparator82.setUnknownObjectBehavior((int) (short) 1);
        java.lang.Object[] obj_array92 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator93 = new collections.comparators.FixedOrderComparator(obj_array92);
        collections.comparators.FixedOrderComparator fixedOrderComparator94 = new collections.comparators.FixedOrderComparator(obj_array92);
        collections.comparators.FixedOrderComparator fixedOrderComparator95 = new collections.comparators.FixedOrderComparator(obj_array92);
        boolean b96 = fixedOrderComparator82.add((java.lang.Object) obj_array92);
        collections.comparators.FixedOrderComparator fixedOrderComparator97 = new collections.comparators.FixedOrderComparator(obj_array92);
        collections.comparators.FixedOrderComparator fixedOrderComparator98 = new collections.comparators.FixedOrderComparator(obj_array92);
        try {
            boolean b99 = fixedOrderComparator0.addAsEqual((java.lang.Object) b14, (java.lang.Object) fixedOrderComparator98);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b1 == false);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue(i6 == 1);
        org.junit.Assert.assertTrue(i10 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertNotNull(obj_array34);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i41 == (-1));
        org.junit.Assert.assertTrue(i42 == 0);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertNotNull(obj_array50);
        org.junit.Assert.assertTrue(i55 == 0);
        org.junit.Assert.assertTrue(i59 == 0);
        org.junit.Assert.assertTrue(i60 == 1);
        org.junit.Assert.assertTrue(i61 == 0);
        org.junit.Assert.assertTrue(i64 == 0);
        org.junit.Assert.assertNotNull(obj_array71);
        org.junit.Assert.assertNotNull(obj_array79);
        org.junit.Assert.assertTrue(i83 == 0);
        org.junit.Assert.assertNotNull(obj_array92);
        org.junit.Assert.assertTrue(b96 == true);
    }

    @Test
    public void test783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test783");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        int i11 = fixedOrderComparator8.getUnknownObjectBehavior();
        int i12 = fixedOrderComparator8.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        int i19 = fixedOrderComparator13.getUnknownObjectBehavior();
        boolean b20 = fixedOrderComparator8.add((java.lang.Object) i19);
        int i21 = fixedOrderComparator8.getUnknownObjectBehavior();
        try {
            fixedOrderComparator8.setUnknownObjectBehavior((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 0);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertTrue(i21 == 0);
    }

    @Test
    public void test784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test784");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b13 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        fixedOrderComparator7.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b31 = fixedOrderComparator7.add((java.lang.Object) obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array22);
        int i33 = fixedOrderComparator32.getUnknownObjectBehavior();
        try {
            fixedOrderComparator32.setUnknownObjectBehavior(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(i33 == 2);
    }

    @Test
    public void test785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test785");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        fixedOrderComparator19.setUnknownObjectBehavior((int) (short) 0);
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        java.lang.Object obj24 = null;
        boolean b25 = fixedOrderComparator19.addAsEqual((java.lang.Object) 10.0f, obj24);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator();
        int i27 = fixedOrderComparator26.getUnknownObjectBehavior();
        java.lang.Object[] obj_array34 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array34);
        boolean b39 = fixedOrderComparator26.add((java.lang.Object) fixedOrderComparator38);
        fixedOrderComparator26.setUnknownObjectBehavior(0);
        boolean b42 = fixedOrderComparator26.isLocked();
        int i44 = fixedOrderComparator19.compare((java.lang.Object) fixedOrderComparator26, (java.lang.Object) 2);
        boolean b45 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator26);
        int i46 = fixedOrderComparator26.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator();
        int i48 = fixedOrderComparator47.getUnknownObjectBehavior();
        boolean b49 = fixedOrderComparator47.isLocked();
        boolean b50 = fixedOrderComparator47.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator();
        int i52 = fixedOrderComparator51.getUnknownObjectBehavior();
        boolean b53 = fixedOrderComparator51.isLocked();
        fixedOrderComparator51.setUnknownObjectBehavior(0);
        boolean b56 = fixedOrderComparator47.add((java.lang.Object) fixedOrderComparator51);
        java.lang.Object[] obj_array63 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array63);
        boolean b66 = fixedOrderComparator64.add((java.lang.Object) (short) 10);
        boolean b67 = fixedOrderComparator64.isLocked();
        fixedOrderComparator64.setUnknownObjectBehavior((int) (short) 0);
        boolean b70 = fixedOrderComparator51.add((java.lang.Object) fixedOrderComparator64);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator71.setUnknownObjectBehavior(0);
        int i74 = fixedOrderComparator71.getUnknownObjectBehavior();
        fixedOrderComparator71.setUnknownObjectBehavior((int) (byte) 0);
        boolean b77 = fixedOrderComparator71.isLocked();
        boolean b78 = fixedOrderComparator71.isLocked();
        int i79 = fixedOrderComparator26.compare((java.lang.Object) b70, (java.lang.Object) b78);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(i27 == 2);
        org.junit.Assert.assertNotNull(obj_array34);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertTrue(i48 == 2);
        org.junit.Assert.assertTrue(b49 == false);
        org.junit.Assert.assertTrue(b50 == false);
        org.junit.Assert.assertTrue(i52 == 2);
        org.junit.Assert.assertTrue(b53 == false);
        org.junit.Assert.assertTrue(b56 == true);
        org.junit.Assert.assertNotNull(obj_array63);
        org.junit.Assert.assertTrue(b66 == true);
        org.junit.Assert.assertTrue(b67 == false);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertTrue(i74 == 0);
        org.junit.Assert.assertTrue(b77 == false);
        org.junit.Assert.assertTrue(b78 == false);
        org.junit.Assert.assertTrue(i79 == 0);
    }

    @Test
    public void test786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test786");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b12 = fixedOrderComparator10.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        boolean b19 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object obj21 = null;
        int i22 = fixedOrderComparator13.compare((java.lang.Object) 1.0d, obj21);
        boolean b23 = fixedOrderComparator13.isLocked();
        boolean b24 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object[] obj_array31 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        int i37 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b39 = fixedOrderComparator33.addAsEqual((java.lang.Object) i37, (java.lang.Object) (short) 1);
        int i40 = fixedOrderComparator33.getUnknownObjectBehavior();
        java.lang.Object[] obj_array47 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array47);
        boolean b49 = fixedOrderComparator48.isLocked();
        boolean b50 = fixedOrderComparator33.add((java.lang.Object) fixedOrderComparator48);
        int i51 = fixedOrderComparator33.getUnknownObjectBehavior();
        boolean b52 = fixedOrderComparator33.isLocked();
        int i53 = fixedOrderComparator33.getUnknownObjectBehavior();
        int i54 = fixedOrderComparator33.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator();
        int i56 = fixedOrderComparator55.getUnknownObjectBehavior();
        java.lang.Object[] obj_array63 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array63);
        boolean b68 = fixedOrderComparator55.add((java.lang.Object) fixedOrderComparator67);
        fixedOrderComparator55.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array77 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator(obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator(obj_array77);
        java.lang.Object[] obj_array84 = new java.lang.Object[] { fixedOrderComparator55, obj_array77 };
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array77);
        int i87 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator33, (java.lang.Object) obj_array77);
        int i88 = fixedOrderComparator33.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertTrue(i37 == 0);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(i40 == 2);
        org.junit.Assert.assertNotNull(obj_array47);
        org.junit.Assert.assertTrue(b49 == false);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertTrue(i51 == 2);
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertTrue(i53 == 2);
        org.junit.Assert.assertTrue(i54 == 2);
        org.junit.Assert.assertTrue(i56 == 2);
        org.junit.Assert.assertNotNull(obj_array63);
        org.junit.Assert.assertTrue(b68 == true);
        org.junit.Assert.assertNotNull(obj_array77);
        org.junit.Assert.assertNotNull(obj_array84);
        org.junit.Assert.assertTrue(i87 == 0);
        org.junit.Assert.assertTrue(i88 == 2);
    }

    @Test
    public void test787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test787");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i4 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b5 = fixedOrderComparator0.isLocked();
        boolean b6 = fixedOrderComparator0.isLocked();
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(i4 == 0);
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue(b6 == false);
    }

    @Test
    public void test788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test788");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        int i10 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        fixedOrderComparator19.setUnknownObjectBehavior((int) (short) 0);
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        boolean b23 = fixedOrderComparator7.add((java.lang.Object) i22);
        int i24 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i25 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b26 = fixedOrderComparator7.isLocked();
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i28 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b29 = fixedOrderComparator7.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i10 == 2);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue(i24 == 2);
        org.junit.Assert.assertTrue(i25 == 2);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertTrue(i27 == 2);
        org.junit.Assert.assertTrue(i28 == 2);
        org.junit.Assert.assertTrue(b29 == false);
    }

    @Test
    public void test789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test789");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator9.setUnknownObjectBehavior(0);
        int i12 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) i12, (java.lang.Object) (short) 1);
        int i15 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b24 = fixedOrderComparator23.isLocked();
        boolean b25 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator23);
        int i26 = fixedOrderComparator8.getUnknownObjectBehavior();
        boolean b27 = fixedOrderComparator8.isLocked();
        int i28 = fixedOrderComparator8.getUnknownObjectBehavior();
        int i29 = fixedOrderComparator8.getUnknownObjectBehavior();
        fixedOrderComparator8.setUnknownObjectBehavior(0);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i15 == 2);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(i26 == 2);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertTrue(i28 == 2);
        org.junit.Assert.assertTrue(i29 == 2);
    }

    @Test
    public void test790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test790");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj18 = null;
        int i19 = fixedOrderComparator10.compare((java.lang.Object) 1.0d, obj18);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        int i32 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b34 = fixedOrderComparator28.addAsEqual((java.lang.Object) i32, (java.lang.Object) (short) 1);
        int i35 = fixedOrderComparator28.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        boolean b44 = fixedOrderComparator43.isLocked();
        boolean b45 = fixedOrderComparator28.add((java.lang.Object) fixedOrderComparator43);
        int i47 = fixedOrderComparator10.compare((java.lang.Object) fixedOrderComparator28, (java.lang.Object) 1L);
        boolean b48 = fixedOrderComparator10.isLocked();
        try {
            fixedOrderComparator10.setUnknownObjectBehavior((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b48 == true);
    }

    @Test
    public void test791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test791");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator12.setUnknownObjectBehavior(2);
        boolean b15 = fixedOrderComparator12.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b15 == false);
    }

    @Test
    public void test792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test792");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        boolean b11 = fixedOrderComparator8.isLocked();
        boolean b12 = fixedOrderComparator8.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertTrue(b12 == false);
    }

    @Test
    public void test793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test793");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        int i10 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        fixedOrderComparator19.setUnknownObjectBehavior((int) (short) 0);
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        boolean b23 = fixedOrderComparator7.add((java.lang.Object) i22);
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        fixedOrderComparator31.setUnknownObjectBehavior(0);
        boolean b35 = fixedOrderComparator31.add((java.lang.Object) 1.0f);
        boolean b37 = fixedOrderComparator31.add((java.lang.Object) 1.0f);
        fixedOrderComparator31.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array46 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array46);
        boolean b55 = fixedOrderComparator31.add((java.lang.Object) obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array46);
        boolean b57 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator56);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator();
        int i59 = fixedOrderComparator58.getUnknownObjectBehavior();
        java.lang.Object[] obj_array66 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array66);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array66);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array66);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array66);
        boolean b71 = fixedOrderComparator58.add((java.lang.Object) fixedOrderComparator70);
        fixedOrderComparator58.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array80 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array80);
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array80);
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator(obj_array80);
        collections.comparators.FixedOrderComparator fixedOrderComparator84 = new collections.comparators.FixedOrderComparator(obj_array80);
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array80);
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array80);
        java.lang.Object[] obj_array87 = new java.lang.Object[] { fixedOrderComparator58, obj_array80 };
        collections.comparators.FixedOrderComparator fixedOrderComparator88 = new collections.comparators.FixedOrderComparator(obj_array80);
        collections.comparators.FixedOrderComparator fixedOrderComparator89 = new collections.comparators.FixedOrderComparator(obj_array80);
        collections.comparators.FixedOrderComparator fixedOrderComparator90 = new collections.comparators.FixedOrderComparator(obj_array80);
        collections.comparators.FixedOrderComparator fixedOrderComparator91 = new collections.comparators.FixedOrderComparator(obj_array80);
        collections.comparators.FixedOrderComparator fixedOrderComparator92 = new collections.comparators.FixedOrderComparator(obj_array80);
        collections.comparators.FixedOrderComparator fixedOrderComparator93 = new collections.comparators.FixedOrderComparator(obj_array80);
        collections.comparators.FixedOrderComparator fixedOrderComparator94 = new collections.comparators.FixedOrderComparator(obj_array80);
        boolean b95 = fixedOrderComparator7.add((java.lang.Object) obj_array80);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i10 == 2);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertTrue(b55 == true);
        org.junit.Assert.assertTrue(b57 == true);
        org.junit.Assert.assertTrue(i59 == 2);
        org.junit.Assert.assertNotNull(obj_array66);
        org.junit.Assert.assertTrue(b71 == true);
        org.junit.Assert.assertNotNull(obj_array80);
        org.junit.Assert.assertNotNull(obj_array87);
        org.junit.Assert.assertTrue(b95 == true);
    }

    @Test
    public void test794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test794");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        boolean b10 = fixedOrderComparator7.isLocked();
        boolean b11 = fixedOrderComparator7.isLocked();
        int i12 = fixedOrderComparator7.getUnknownObjectBehavior();
        fixedOrderComparator7.setUnknownObjectBehavior((int) (byte) 1);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(b10 == false);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertTrue(i12 == 2);
    }

    @Test
    public void test795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test795");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator();
        boolean b18 = fixedOrderComparator17.isLocked();
        boolean b20 = fixedOrderComparator17.add((java.lang.Object) 10.0d);
        boolean b21 = fixedOrderComparator17.isLocked();
        int i22 = fixedOrderComparator17.getUnknownObjectBehavior();
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        fixedOrderComparator31.setUnknownObjectBehavior((int) (short) 0);
        int i34 = fixedOrderComparator31.getUnknownObjectBehavior();
        java.lang.Object obj36 = null;
        boolean b37 = fixedOrderComparator31.addAsEqual((java.lang.Object) 10.0f, obj36);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator();
        int i39 = fixedOrderComparator38.getUnknownObjectBehavior();
        java.lang.Object[] obj_array46 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array46);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array46);
        boolean b51 = fixedOrderComparator38.add((java.lang.Object) fixedOrderComparator50);
        fixedOrderComparator38.setUnknownObjectBehavior(0);
        boolean b54 = fixedOrderComparator38.isLocked();
        int i56 = fixedOrderComparator31.compare((java.lang.Object) fixedOrderComparator38, (java.lang.Object) 2);
        java.lang.Object[] obj_array63 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array63);
        boolean b66 = fixedOrderComparator64.add((java.lang.Object) (-1.0f));
        int i67 = fixedOrderComparator64.getUnknownObjectBehavior();
        java.lang.Object[] obj_array74 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array74);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array74);
        fixedOrderComparator76.setUnknownObjectBehavior((int) (short) 0);
        int i79 = fixedOrderComparator76.getUnknownObjectBehavior();
        boolean b80 = fixedOrderComparator64.add((java.lang.Object) i79);
        boolean b81 = fixedOrderComparator38.add((java.lang.Object) b80);
        fixedOrderComparator38.setUnknownObjectBehavior((int) (short) 0);
        int i84 = fixedOrderComparator38.getUnknownObjectBehavior();
        int i85 = fixedOrderComparator10.compare((java.lang.Object) i22, (java.lang.Object) fixedOrderComparator38);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(i22 == 2);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i34 == 0);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertTrue(i39 == 2);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertTrue(b51 == true);
        org.junit.Assert.assertTrue(b54 == false);
        org.junit.Assert.assertTrue(i56 == 0);
        org.junit.Assert.assertNotNull(obj_array63);
        org.junit.Assert.assertTrue(b66 == true);
        org.junit.Assert.assertTrue(i67 == 2);
        org.junit.Assert.assertNotNull(obj_array74);
        org.junit.Assert.assertTrue(i79 == 0);
        org.junit.Assert.assertTrue(b80 == false);
        org.junit.Assert.assertTrue(b81 == true);
        org.junit.Assert.assertTrue(i84 == 0);
        org.junit.Assert.assertTrue(i85 == 0);
    }

    @Test
    public void test796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test796");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        boolean b46 = fixedOrderComparator41.isLocked();
        boolean b47 = fixedOrderComparator41.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue(b47 == false);
    }

    @Test
    public void test797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test797");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b6 = fixedOrderComparator0.add((java.lang.Object) 10L);
        boolean b7 = fixedOrderComparator0.isLocked();
        boolean b8 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array15 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array15);
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array15);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array15);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array15);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array15);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array15);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array15);
        boolean b23 = fixedOrderComparator0.add((java.lang.Object) obj_array15);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array15);
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(obj_array15);
        org.junit.Assert.assertTrue(b23 == true);
    }

    @Test
    public void test798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test798");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        int i12 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b13 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array14 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        java.lang.Object[] obj_array16 = new java.lang.Object[] { fixedOrderComparator15 };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array16);
        java.lang.Object[] obj_array25 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array25);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array25);
        int i28 = fixedOrderComparator7.compare((java.lang.Object) fixedOrderComparator18, (java.lang.Object) obj_array25);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array25);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array25);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array25);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator();
        int i33 = fixedOrderComparator32.getUnknownObjectBehavior();
        boolean b34 = fixedOrderComparator32.isLocked();
        fixedOrderComparator32.setUnknownObjectBehavior(0);
        boolean b38 = fixedOrderComparator32.add((java.lang.Object) 10L);
        boolean b39 = fixedOrderComparator32.isLocked();
        boolean b40 = fixedOrderComparator32.isLocked();
        java.lang.Object[] obj_array47 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array47);
        boolean b55 = fixedOrderComparator32.add((java.lang.Object) obj_array47);
        java.lang.Object[] obj_array62 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array62);
        int i67 = fixedOrderComparator66.getUnknownObjectBehavior();
        int i68 = fixedOrderComparator66.getUnknownObjectBehavior();
        boolean b69 = fixedOrderComparator66.isLocked();
        int i70 = fixedOrderComparator66.getUnknownObjectBehavior();
        java.lang.Object[] obj_array77 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator(obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array77);
        boolean b83 = fixedOrderComparator66.add((java.lang.Object) obj_array77);
        try {
            int i84 = fixedOrderComparator31.compare((java.lang.Object) obj_array47, (java.lang.Object) fixedOrderComparator66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertNotNull(obj_array25);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertTrue(i33 == 2);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertNotNull(obj_array47);
        org.junit.Assert.assertTrue(b55 == true);
        org.junit.Assert.assertNotNull(obj_array62);
        org.junit.Assert.assertTrue(i67 == 2);
        org.junit.Assert.assertTrue(i68 == 2);
        org.junit.Assert.assertTrue(b69 == false);
        org.junit.Assert.assertTrue(i70 == 2);
        org.junit.Assert.assertNotNull(obj_array77);
        org.junit.Assert.assertTrue(b83 == true);
    }

    @Test
    public void test799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test799");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { fixedOrderComparator0, obj_array22 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b38 = fixedOrderComparator36.add((java.lang.Object) (-1.0f));
        int i39 = fixedOrderComparator36.getUnknownObjectBehavior();
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(i39 == 2);
    }

    @Test
    public void test800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test800");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        fixedOrderComparator11.setUnknownObjectBehavior(0);
        boolean b15 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        boolean b17 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator();
        boolean b19 = fixedOrderComparator18.isLocked();
        boolean b21 = fixedOrderComparator18.add((java.lang.Object) 10.0d);
        int i22 = fixedOrderComparator0.compare((java.lang.Object) b17, (java.lang.Object) fixedOrderComparator18);
        boolean b23 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator();
        int i34 = fixedOrderComparator33.getUnknownObjectBehavior();
        java.lang.Object[] obj_array41 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array41);
        boolean b46 = fixedOrderComparator33.add((java.lang.Object) fixedOrderComparator45);
        fixedOrderComparator33.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array55 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array55);
        int i60 = fixedOrderComparator59.getUnknownObjectBehavior();
        int i61 = fixedOrderComparator59.getUnknownObjectBehavior();
        boolean b62 = fixedOrderComparator59.isLocked();
        int i63 = fixedOrderComparator59.getUnknownObjectBehavior();
        int i65 = fixedOrderComparator33.compare((java.lang.Object) fixedOrderComparator59, (java.lang.Object) 1L);
        int i66 = fixedOrderComparator0.compare((java.lang.Object) obj_array30, (java.lang.Object) i65);
        java.lang.Object obj67 = null;
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator68.setUnknownObjectBehavior(0);
        int i71 = fixedOrderComparator68.getUnknownObjectBehavior();
        int i72 = fixedOrderComparator68.getUnknownObjectBehavior();
        try {
            boolean b73 = fixedOrderComparator0.addAsEqual(obj67, (java.lang.Object) fixedOrderComparator68);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(i34 == 2);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(i60 == 2);
        org.junit.Assert.assertTrue(i61 == 2);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertTrue(i63 == 2);
        org.junit.Assert.assertTrue(i65 == 0);
        org.junit.Assert.assertTrue(i66 == 0);
        org.junit.Assert.assertTrue(i71 == 0);
        org.junit.Assert.assertTrue(i72 == 0);
    }

    @Test
    public void test801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test801");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array15 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array15);
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array15);
        fixedOrderComparator17.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array26);
        int i30 = fixedOrderComparator17.compare((java.lang.Object) fixedOrderComparator28, (java.lang.Object) (-1.0d));
        boolean b31 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator17);
        try {
            fixedOrderComparator8.setUnknownObjectBehavior((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array15);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertTrue(b31 == true);
    }

    @Test
    public void test802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test802");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator3 = new collections.comparators.FixedOrderComparator();
        int i4 = fixedOrderComparator3.getUnknownObjectBehavior();
        boolean b5 = fixedOrderComparator3.isLocked();
        boolean b6 = fixedOrderComparator0.add((java.lang.Object) b5);
        boolean b7 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        boolean b17 = fixedOrderComparator15.add((java.lang.Object) (-1.0f));
        int i18 = fixedOrderComparator15.getUnknownObjectBehavior();
        boolean b19 = fixedOrderComparator0.add((java.lang.Object) i18);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        boolean b29 = fixedOrderComparator27.add((java.lang.Object) (-1.0f));
        fixedOrderComparator27.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array39 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array39);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array39);
        fixedOrderComparator41.setUnknownObjectBehavior((int) (short) 0);
        int i44 = fixedOrderComparator27.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator41);
        fixedOrderComparator41.setUnknownObjectBehavior((int) (byte) 0);
        boolean b47 = fixedOrderComparator41.isLocked();
        boolean b48 = fixedOrderComparator0.add((java.lang.Object) b47);
        java.lang.Object[] obj_array55 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator58.setUnknownObjectBehavior(0);
        int i61 = fixedOrderComparator58.getUnknownObjectBehavior();
        boolean b63 = fixedOrderComparator57.addAsEqual((java.lang.Object) i61, (java.lang.Object) (short) 1);
        int i64 = fixedOrderComparator57.getUnknownObjectBehavior();
        java.lang.Object[] obj_array71 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array71);
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator(obj_array71);
        fixedOrderComparator73.setUnknownObjectBehavior((int) (short) 0);
        int i76 = fixedOrderComparator73.getUnknownObjectBehavior();
        int i77 = fixedOrderComparator73.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator78.setUnknownObjectBehavior(0);
        int i81 = fixedOrderComparator78.getUnknownObjectBehavior();
        fixedOrderComparator78.setUnknownObjectBehavior((int) (byte) 0);
        int i84 = fixedOrderComparator78.getUnknownObjectBehavior();
        boolean b85 = fixedOrderComparator73.add((java.lang.Object) i84);
        boolean b86 = fixedOrderComparator57.add((java.lang.Object) fixedOrderComparator73);
        boolean b87 = fixedOrderComparator57.isLocked();
        boolean b88 = fixedOrderComparator0.add((java.lang.Object) b87);
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(i4 == 2);
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(i18 == 2);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertNotNull(obj_array39);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b47 == false);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(i61 == 0);
        org.junit.Assert.assertTrue(b63 == true);
        org.junit.Assert.assertTrue(i64 == 2);
        org.junit.Assert.assertNotNull(obj_array71);
        org.junit.Assert.assertTrue(i76 == 0);
        org.junit.Assert.assertTrue(i77 == 0);
        org.junit.Assert.assertTrue(i81 == 0);
        org.junit.Assert.assertTrue(i84 == 0);
        org.junit.Assert.assertTrue(b85 == false);
        org.junit.Assert.assertTrue(b86 == true);
        org.junit.Assert.assertTrue(b87 == false);
        org.junit.Assert.assertTrue(b88 == false);
    }

    @Test
    public void test803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test803");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array9 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b12 = fixedOrderComparator10.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator13.setUnknownObjectBehavior(0);
        int i16 = fixedOrderComparator13.getUnknownObjectBehavior();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (byte) 0);
        boolean b19 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator13);
        java.lang.Object obj21 = null;
        int i22 = fixedOrderComparator13.compare((java.lang.Object) 1.0d, obj21);
        boolean b23 = fixedOrderComparator13.isLocked();
        boolean b24 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator13);
        boolean b25 = fixedOrderComparator13.isLocked();
        boolean b26 = fixedOrderComparator13.isLocked();
        int i27 = fixedOrderComparator13.getUnknownObjectBehavior();
        java.lang.Object[] obj_array34 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array34);
        fixedOrderComparator36.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator36.setUnknownObjectBehavior(2);
        int i41 = fixedOrderComparator36.getUnknownObjectBehavior();
        java.lang.Object obj42 = null;
        try {
            boolean b43 = fixedOrderComparator13.addAsEqual((java.lang.Object) fixedOrderComparator36, obj42);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b12 == true);
        org.junit.Assert.assertTrue(i16 == 0);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertNotNull(obj_array34);
        org.junit.Assert.assertTrue(i41 == 2);
    }

    @Test
    public void test804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test804");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        boolean b12 = fixedOrderComparator7.isLocked();
        fixedOrderComparator7.setUnknownObjectBehavior(2);
        try {
            fixedOrderComparator7.setUnknownObjectBehavior(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(b12 == false);
    }

    @Test
    public void test805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test805");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        java.lang.Object[] obj_array46 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array54);
        int i58 = fixedOrderComparator57.getUnknownObjectBehavior();
        boolean b59 = fixedOrderComparator57.isLocked();
        int i60 = fixedOrderComparator41.compare((java.lang.Object) fixedOrderComparator47, (java.lang.Object) fixedOrderComparator57);
        java.lang.Object obj61 = null;
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator();
        int i63 = fixedOrderComparator62.getUnknownObjectBehavior();
        boolean b64 = fixedOrderComparator62.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator();
        int i66 = fixedOrderComparator65.getUnknownObjectBehavior();
        boolean b67 = fixedOrderComparator65.isLocked();
        boolean b68 = fixedOrderComparator62.add((java.lang.Object) b67);
        boolean b69 = fixedOrderComparator62.isLocked();
        int i70 = fixedOrderComparator62.getUnknownObjectBehavior();
        int i71 = fixedOrderComparator62.getUnknownObjectBehavior();
        java.lang.Object[] obj_array78 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator84 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator87 = new collections.comparators.FixedOrderComparator(obj_array78);
        boolean b88 = fixedOrderComparator62.add((java.lang.Object) obj_array78);
        try {
            boolean b89 = fixedOrderComparator47.addAsEqual(obj61, (java.lang.Object) obj_array78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertTrue(i58 == 2);
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertTrue(i60 == 0);
        org.junit.Assert.assertTrue(i63 == 2);
        org.junit.Assert.assertTrue(b64 == false);
        org.junit.Assert.assertTrue(i66 == 2);
        org.junit.Assert.assertTrue(b67 == false);
        org.junit.Assert.assertTrue(b68 == true);
        org.junit.Assert.assertTrue(b69 == false);
        org.junit.Assert.assertTrue(i70 == 2);
        org.junit.Assert.assertTrue(i71 == 2);
        org.junit.Assert.assertNotNull(obj_array78);
        org.junit.Assert.assertTrue(b88 == true);
    }

    @Test
    public void test806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test806");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        int i21 = fixedOrderComparator8.compare((java.lang.Object) fixedOrderComparator19, (java.lang.Object) (-1.0d));
        boolean b22 = fixedOrderComparator19.isLocked();
        int i23 = fixedOrderComparator19.getUnknownObjectBehavior();
        fixedOrderComparator19.setUnknownObjectBehavior(1);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(i23 == 2);
    }

    @Test
    public void test807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test807");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array10);
        java.lang.Object[] obj_array20 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array20);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        fixedOrderComparator31.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array40);
        int i44 = fixedOrderComparator31.compare((java.lang.Object) fixedOrderComparator42, (java.lang.Object) (-1.0d));
        boolean b45 = fixedOrderComparator22.add((java.lang.Object) fixedOrderComparator31);
        boolean b46 = fixedOrderComparator31.isLocked();
        int i47 = fixedOrderComparator31.getUnknownObjectBehavior();
        int i48 = fixedOrderComparator0.compare((java.lang.Object) obj_array10, (java.lang.Object) fixedOrderComparator31);
        int i49 = fixedOrderComparator31.getUnknownObjectBehavior();
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(i48 == 0);
        org.junit.Assert.assertTrue(i49 == 0);
    }

    @Test
    public void test808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test808");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator8.isLocked();
        boolean b10 = fixedOrderComparator8.isLocked();
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        boolean b20 = fixedOrderComparator18.add((java.lang.Object) (-1.0f));
        fixedOrderComparator18.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array29);
        int i33 = fixedOrderComparator32.getUnknownObjectBehavior();
        boolean b34 = fixedOrderComparator32.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        boolean b45 = fixedOrderComparator43.add((java.lang.Object) (-1.0f));
        int i46 = fixedOrderComparator43.getUnknownObjectBehavior();
        java.lang.Object[] obj_array53 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array53);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array53);
        fixedOrderComparator55.setUnknownObjectBehavior((int) (short) 0);
        int i58 = fixedOrderComparator55.getUnknownObjectBehavior();
        boolean b59 = fixedOrderComparator43.add((java.lang.Object) i58);
        boolean b60 = fixedOrderComparator35.add((java.lang.Object) fixedOrderComparator43);
        int i61 = fixedOrderComparator18.compare((java.lang.Object) b34, (java.lang.Object) fixedOrderComparator35);
        java.lang.Object[] obj_array69 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator(obj_array69);
        java.lang.Object[] obj_array74 = new java.lang.Object[] { fixedOrderComparator35, (byte) 10, obj_array69 };
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array69);
        boolean b78 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator77);
        int i79 = fixedOrderComparator8.getUnknownObjectBehavior();
        try {
            fixedOrderComparator8.setUnknownObjectBehavior(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertTrue(b10 == false);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i33 == 2);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(i46 == 2);
        org.junit.Assert.assertNotNull(obj_array53);
        org.junit.Assert.assertTrue(i58 == 0);
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertTrue(i61 == 0);
        org.junit.Assert.assertNotNull(obj_array69);
        org.junit.Assert.assertNotNull(obj_array74);
        org.junit.Assert.assertTrue(b78 == true);
        org.junit.Assert.assertTrue(i79 == 2);
    }

    @Test
    public void test809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test809");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b7 = fixedOrderComparator0.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array14);
        java.lang.Object[] obj_array17 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        boolean b19 = fixedOrderComparator16.add((java.lang.Object) obj_array17);
        boolean b20 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator16);
        java.lang.Object[] obj_array21 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b23 = fixedOrderComparator16.add((java.lang.Object) obj_array21);
        int i24 = fixedOrderComparator16.getUnknownObjectBehavior();
        boolean b25 = fixedOrderComparator16.isLocked();
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(i24 == 2);
        org.junit.Assert.assertTrue(b25 == false);
    }

    @Test
    public void test810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test810");
        java.lang.Object[] obj_array0 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator1 = new collections.comparators.FixedOrderComparator(obj_array0);
        try {
            fixedOrderComparator1.setUnknownObjectBehavior((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array0);
    }

    @Test
    public void test811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test811");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        int i12 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator7.add((java.lang.Object) (byte) 100);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        fixedOrderComparator30.setUnknownObjectBehavior(0);
        boolean b33 = fixedOrderComparator22.add((java.lang.Object) 0);
        boolean b34 = fixedOrderComparator22.isLocked();
        boolean b35 = fixedOrderComparator22.isLocked();
        boolean b36 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator22);
        java.lang.Object[] obj_array43 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array43);
        fixedOrderComparator44.setUnknownObjectBehavior(0);
        boolean b48 = fixedOrderComparator44.add((java.lang.Object) 1.0f);
        int i49 = fixedOrderComparator44.getUnknownObjectBehavior();
        boolean b51 = fixedOrderComparator44.add((java.lang.Object) (byte) 100);
        boolean b52 = fixedOrderComparator7.add((java.lang.Object) b51);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertTrue(b35 == false);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertNotNull(obj_array43);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertTrue(b51 == true);
        org.junit.Assert.assertTrue(b52 == true);
    }

    @Test
    public void test812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test812");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array10);
        java.lang.Object[] obj_array20 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array20);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        fixedOrderComparator31.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array40);
        int i44 = fixedOrderComparator31.compare((java.lang.Object) fixedOrderComparator42, (java.lang.Object) (-1.0d));
        boolean b45 = fixedOrderComparator22.add((java.lang.Object) fixedOrderComparator31);
        boolean b46 = fixedOrderComparator31.isLocked();
        int i47 = fixedOrderComparator31.getUnknownObjectBehavior();
        int i48 = fixedOrderComparator0.compare((java.lang.Object) obj_array10, (java.lang.Object) fixedOrderComparator31);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array10);
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(i48 == 0);
    }

    @Test
    public void test813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test813");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        boolean b3 = fixedOrderComparator0.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator4 = new collections.comparators.FixedOrderComparator();
        int i5 = fixedOrderComparator4.getUnknownObjectBehavior();
        boolean b6 = fixedOrderComparator4.isLocked();
        fixedOrderComparator4.setUnknownObjectBehavior(0);
        boolean b9 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator4);
        java.lang.Object[] obj_array16 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        boolean b19 = fixedOrderComparator17.add((java.lang.Object) (short) 10);
        boolean b20 = fixedOrderComparator17.isLocked();
        fixedOrderComparator17.setUnknownObjectBehavior((int) (short) 0);
        boolean b23 = fixedOrderComparator4.add((java.lang.Object) fixedOrderComparator17);
        boolean b24 = fixedOrderComparator4.isLocked();
        fixedOrderComparator4.setUnknownObjectBehavior((int) (byte) 0);
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(i5 == 2);
        org.junit.Assert.assertTrue(b6 == false);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b24 == false);
    }

    @Test
    public void test814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test814");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        java.lang.Object[] obj_array27 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array27);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array27);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array27);
        int i31 = fixedOrderComparator30.getUnknownObjectBehavior();
        boolean b32 = fixedOrderComparator30.isLocked();
        int i33 = fixedOrderComparator30.getUnknownObjectBehavior();
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array40);
        boolean b45 = fixedOrderComparator30.add((java.lang.Object) fixedOrderComparator44);
        boolean b46 = fixedOrderComparator30.isLocked();
        java.lang.Object[] obj_array53 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array53);
        java.lang.Object[] obj_array61 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array61);
        fixedOrderComparator62.setUnknownObjectBehavior(0);
        boolean b65 = fixedOrderComparator54.add((java.lang.Object) 0);
        boolean b66 = fixedOrderComparator54.isLocked();
        int i67 = fixedOrderComparator12.compare((java.lang.Object) fixedOrderComparator30, (java.lang.Object) b66);
        java.lang.Object[] obj_array74 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array74);
        fixedOrderComparator75.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array84 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array84);
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array84);
        collections.comparators.FixedOrderComparator fixedOrderComparator87 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator87.setUnknownObjectBehavior(0);
        int i90 = fixedOrderComparator87.getUnknownObjectBehavior();
        boolean b92 = fixedOrderComparator86.addAsEqual((java.lang.Object) i90, (java.lang.Object) (short) 1);
        int i94 = fixedOrderComparator75.compare((java.lang.Object) fixedOrderComparator86, (java.lang.Object) '#');
        int i95 = fixedOrderComparator86.getUnknownObjectBehavior();
        boolean b96 = fixedOrderComparator30.add((java.lang.Object) fixedOrderComparator86);
        boolean b97 = fixedOrderComparator30.isLocked();
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertNotNull(obj_array27);
        org.junit.Assert.assertTrue(i31 == 2);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertTrue(i33 == 2);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertNotNull(obj_array53);
        org.junit.Assert.assertNotNull(obj_array61);
        org.junit.Assert.assertTrue(b65 == false);
        org.junit.Assert.assertTrue(b66 == false);
        org.junit.Assert.assertTrue(i67 == 0);
        org.junit.Assert.assertNotNull(obj_array74);
        org.junit.Assert.assertNotNull(obj_array84);
        org.junit.Assert.assertTrue(i90 == 0);
        org.junit.Assert.assertTrue(b92 == true);
        org.junit.Assert.assertTrue(i94 == 0);
        org.junit.Assert.assertTrue(i95 == 2);
        org.junit.Assert.assertTrue(b96 == true);
        org.junit.Assert.assertTrue(b97 == false);
    }

    @Test
    public void test815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test815");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i10 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b11 = fixedOrderComparator9.isLocked();
        int i12 = fixedOrderComparator9.getUnknownObjectBehavior();
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array19);
        boolean b24 = fixedOrderComparator9.add((java.lang.Object) fixedOrderComparator23);
        try {
            fixedOrderComparator23.setUnknownObjectBehavior((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i10 == 2);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertTrue(i12 == 2);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
    }

    @Test
    public void test816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test816");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        boolean b10 = fixedOrderComparator7.isLocked();
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array19 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array19);
        int i24 = fixedOrderComparator23.getUnknownObjectBehavior();
        int i25 = fixedOrderComparator23.getUnknownObjectBehavior();
        boolean b26 = fixedOrderComparator23.isLocked();
        int i27 = fixedOrderComparator23.getUnknownObjectBehavior();
        java.lang.Object[] obj_array34 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array34);
        boolean b40 = fixedOrderComparator23.add((java.lang.Object) obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array34);
        boolean b42 = fixedOrderComparator7.add((java.lang.Object) obj_array34);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(b10 == false);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(i24 == 2);
        org.junit.Assert.assertTrue(i25 == 2);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertTrue(i27 == 2);
        org.junit.Assert.assertNotNull(obj_array34);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertTrue(b42 == true);
    }

    @Test
    public void test817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test817");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator9.setUnknownObjectBehavior((int) (byte) 0);
        org.junit.Assert.assertNotNull(obj_array6);
    }

    @Test
    public void test818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test818");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b7 = fixedOrderComparator0.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array14);
        java.lang.Object[] obj_array17 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        boolean b19 = fixedOrderComparator16.add((java.lang.Object) obj_array17);
        boolean b20 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator16);
        java.lang.Object[] obj_array21 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b23 = fixedOrderComparator16.add((java.lang.Object) obj_array21);
        int i24 = fixedOrderComparator16.getUnknownObjectBehavior();
        try {
            fixedOrderComparator16.setUnknownObjectBehavior(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(i24 == 2);
    }

    @Test
    public void test819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test819");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array16 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator19.setUnknownObjectBehavior(0);
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        boolean b24 = fixedOrderComparator18.addAsEqual((java.lang.Object) i22, (java.lang.Object) (short) 1);
        int i26 = fixedOrderComparator7.compare((java.lang.Object) fixedOrderComparator18, (java.lang.Object) '#');
        boolean b27 = fixedOrderComparator7.isLocked();
        boolean b28 = fixedOrderComparator7.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i26 == 0);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertTrue(b28 == true);
    }

    @Test
    public void test820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test820");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        fixedOrderComparator11.setUnknownObjectBehavior(0);
        boolean b15 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        boolean b17 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator();
        boolean b19 = fixedOrderComparator18.isLocked();
        boolean b21 = fixedOrderComparator18.add((java.lang.Object) 10.0d);
        int i22 = fixedOrderComparator0.compare((java.lang.Object) b17, (java.lang.Object) fixedOrderComparator18);
        int i23 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b24 = fixedOrderComparator0.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator25.setUnknownObjectBehavior(0);
        boolean b28 = fixedOrderComparator25.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator36.setUnknownObjectBehavior(0);
        boolean b40 = fixedOrderComparator36.add((java.lang.Object) 1.0f);
        boolean b42 = fixedOrderComparator36.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator();
        boolean b44 = fixedOrderComparator43.isLocked();
        boolean b46 = fixedOrderComparator43.add((java.lang.Object) 10.0d);
        int i47 = fixedOrderComparator25.compare((java.lang.Object) b42, (java.lang.Object) fixedOrderComparator43);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array54);
        fixedOrderComparator56.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array65 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array65);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array65);
        int i69 = fixedOrderComparator56.compare((java.lang.Object) fixedOrderComparator67, (java.lang.Object) (-1.0d));
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator70.setUnknownObjectBehavior(0);
        boolean b73 = fixedOrderComparator70.isLocked();
        boolean b74 = fixedOrderComparator67.add((java.lang.Object) fixedOrderComparator70);
        boolean b75 = fixedOrderComparator43.add((java.lang.Object) fixedOrderComparator67);
        java.lang.Object[] obj_array82 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator(obj_array82);
        collections.comparators.FixedOrderComparator fixedOrderComparator84 = new collections.comparators.FixedOrderComparator(obj_array82);
        fixedOrderComparator84.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator84.setUnknownObjectBehavior(2);
        try {
            boolean b89 = fixedOrderComparator0.addAsEqual((java.lang.Object) fixedOrderComparator67, (java.lang.Object) 2);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(i23 == 0);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertNotNull(obj_array65);
        org.junit.Assert.assertTrue(i69 == 0);
        org.junit.Assert.assertTrue(b73 == false);
        org.junit.Assert.assertTrue(b74 == true);
        org.junit.Assert.assertTrue(b75 == true);
        org.junit.Assert.assertNotNull(obj_array82);
    }

    @Test
    public void test821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test821");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        int i21 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i22 = fixedOrderComparator0.getUnknownObjectBehavior();
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertTrue(i22 == 0);
    }

    @Test
    public void test822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test822");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        int i46 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Object obj48 = null;
        int i49 = fixedOrderComparator7.compare(obj47, obj48);
        java.lang.Object[] obj_array56 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array56);
        java.lang.Object[] obj_array64 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array64);
        int i68 = fixedOrderComparator7.compare((java.lang.Object) obj_array56, (java.lang.Object) fixedOrderComparator67);
        boolean b69 = fixedOrderComparator7.isLocked();
        int i70 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array77 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator(obj_array77);
        java.lang.Object[] obj_array85 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array85);
        fixedOrderComparator86.setUnknownObjectBehavior(0);
        boolean b89 = fixedOrderComparator78.add((java.lang.Object) 0);
        fixedOrderComparator78.setUnknownObjectBehavior((int) (short) 0);
        boolean b92 = fixedOrderComparator78.isLocked();
        boolean b93 = fixedOrderComparator78.isLocked();
        boolean b94 = fixedOrderComparator78.isLocked();
        try {
            boolean b95 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator78);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertNotNull(obj_array56);
        org.junit.Assert.assertNotNull(obj_array64);
        org.junit.Assert.assertTrue(i68 == 0);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertTrue(i70 == 0);
        org.junit.Assert.assertNotNull(obj_array77);
        org.junit.Assert.assertNotNull(obj_array85);
        org.junit.Assert.assertTrue(b89 == false);
        org.junit.Assert.assertTrue(b92 == false);
        org.junit.Assert.assertTrue(b93 == false);
        org.junit.Assert.assertTrue(b94 == false);
    }

    @Test
    public void test823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test823");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object[] obj_array23 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array23);
        fixedOrderComparator24.setUnknownObjectBehavior(0);
        boolean b28 = fixedOrderComparator24.add((java.lang.Object) 1.0f);
        int i29 = fixedOrderComparator24.getUnknownObjectBehavior();
        boolean b30 = fixedOrderComparator24.isLocked();
        java.lang.Object[] obj_array31 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        java.lang.Object[] obj_array33 = new java.lang.Object[] { fixedOrderComparator32 };
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array33);
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        int i45 = fixedOrderComparator24.compare((java.lang.Object) fixedOrderComparator35, (java.lang.Object) obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array42);
        boolean b48 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator47);
        int i49 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array56 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array56);
        int i61 = fixedOrderComparator60.getUnknownObjectBehavior();
        int i62 = fixedOrderComparator60.getUnknownObjectBehavior();
        int i63 = fixedOrderComparator60.getUnknownObjectBehavior();
        java.lang.Object[] obj_array64 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array64);
        java.lang.Object[] obj_array66 = new java.lang.Object[] { fixedOrderComparator65 };
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array66);
        try {
            int i68 = fixedOrderComparator7.compare((java.lang.Object) fixedOrderComparator60, (java.lang.Object) obj_array66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertNotNull(obj_array23);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(i29 == 0);
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(i45 == 0);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertTrue(i49 == 2);
        org.junit.Assert.assertNotNull(obj_array56);
        org.junit.Assert.assertTrue(i61 == 2);
        org.junit.Assert.assertTrue(i62 == 2);
        org.junit.Assert.assertTrue(i63 == 2);
        org.junit.Assert.assertNotNull(obj_array64);
        org.junit.Assert.assertNotNull(obj_array66);
    }

    @Test
    public void test824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test824");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        int i21 = fixedOrderComparator8.compare((java.lang.Object) fixedOrderComparator19, (java.lang.Object) (-1.0d));
        boolean b22 = fixedOrderComparator19.isLocked();
        java.lang.Object[] obj_array29 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        java.lang.Object[] obj_array38 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array38);
        fixedOrderComparator40.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array49 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array49);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array49);
        int i53 = fixedOrderComparator40.compare((java.lang.Object) fixedOrderComparator51, (java.lang.Object) (-1.0d));
        boolean b54 = fixedOrderComparator31.add((java.lang.Object) fixedOrderComparator40);
        boolean b55 = fixedOrderComparator40.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator();
        boolean b57 = fixedOrderComparator56.isLocked();
        java.lang.Object obj58 = null;
        boolean b59 = fixedOrderComparator56.add(obj58);
        fixedOrderComparator56.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array68 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array68);
        int i73 = fixedOrderComparator72.getUnknownObjectBehavior();
        int i74 = fixedOrderComparator72.getUnknownObjectBehavior();
        boolean b75 = fixedOrderComparator72.isLocked();
        int i76 = fixedOrderComparator72.getUnknownObjectBehavior();
        java.lang.Object[] obj_array83 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator84 = new collections.comparators.FixedOrderComparator(obj_array83);
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array83);
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array83);
        collections.comparators.FixedOrderComparator fixedOrderComparator87 = new collections.comparators.FixedOrderComparator(obj_array83);
        collections.comparators.FixedOrderComparator fixedOrderComparator88 = new collections.comparators.FixedOrderComparator(obj_array83);
        boolean b89 = fixedOrderComparator72.add((java.lang.Object) obj_array83);
        int i90 = fixedOrderComparator40.compare((java.lang.Object) fixedOrderComparator56, (java.lang.Object) obj_array83);
        collections.comparators.FixedOrderComparator fixedOrderComparator91 = new collections.comparators.FixedOrderComparator(obj_array83);
        boolean b92 = fixedOrderComparator19.add((java.lang.Object) fixedOrderComparator91);
        try {
            fixedOrderComparator19.setUnknownObjectBehavior((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertNotNull(obj_array38);
        org.junit.Assert.assertNotNull(obj_array49);
        org.junit.Assert.assertTrue(i53 == 0);
        org.junit.Assert.assertTrue(b54 == true);
        org.junit.Assert.assertTrue(b55 == true);
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertNotNull(obj_array68);
        org.junit.Assert.assertTrue(i73 == 2);
        org.junit.Assert.assertTrue(i74 == 2);
        org.junit.Assert.assertTrue(b75 == false);
        org.junit.Assert.assertTrue(i76 == 2);
        org.junit.Assert.assertNotNull(obj_array83);
        org.junit.Assert.assertTrue(b89 == true);
        org.junit.Assert.assertTrue(i90 == 0);
        org.junit.Assert.assertTrue(b92 == true);
    }

    @Test
    public void test825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test825");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        boolean b27 = fixedOrderComparator7.isLocked();
        int i28 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i29 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i30 = fixedOrderComparator7.getUnknownObjectBehavior();
        try {
            fixedOrderComparator7.setUnknownObjectBehavior(0);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertTrue(i29 == 0);
        org.junit.Assert.assertTrue(i30 == 0);
    }

    @Test
    public void test826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test826");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array19 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator21.setUnknownObjectBehavior((int) (short) 0);
        int i24 = fixedOrderComparator7.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator();
        int i26 = fixedOrderComparator25.getUnknownObjectBehavior();
        java.lang.Object[] obj_array33 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array33);
        boolean b38 = fixedOrderComparator25.add((java.lang.Object) fixedOrderComparator37);
        boolean b39 = fixedOrderComparator37.isLocked();
        boolean b40 = fixedOrderComparator37.isLocked();
        boolean b41 = fixedOrderComparator21.add((java.lang.Object) fixedOrderComparator37);
        java.lang.Object[] obj_array48 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array48);
        fixedOrderComparator49.setUnknownObjectBehavior(0);
        boolean b53 = fixedOrderComparator49.add((java.lang.Object) 1.0f);
        boolean b55 = fixedOrderComparator49.add((java.lang.Object) 1.0f);
        fixedOrderComparator49.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array64 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array64);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array64);
        boolean b73 = fixedOrderComparator49.add((java.lang.Object) obj_array64);
        boolean b74 = fixedOrderComparator49.isLocked();
        java.lang.Object obj75 = null;
        try {
            boolean b76 = fixedOrderComparator21.addAsEqual((java.lang.Object) fixedOrderComparator49, obj75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertTrue(i26 == 2);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertNotNull(obj_array48);
        org.junit.Assert.assertTrue(b53 == true);
        org.junit.Assert.assertTrue(b55 == false);
        org.junit.Assert.assertNotNull(obj_array64);
        org.junit.Assert.assertTrue(b73 == true);
        org.junit.Assert.assertTrue(b74 == false);
    }

    @Test
    public void test827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test827");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i12 = fixedOrderComparator11.getUnknownObjectBehavior();
        fixedOrderComparator11.setUnknownObjectBehavior((int) (byte) 1);
        int i15 = fixedOrderComparator11.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i12 == 2);
        org.junit.Assert.assertTrue(i15 == 1);
    }

    @Test
    public void test828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test828");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b6 = fixedOrderComparator0.add((java.lang.Object) 10L);
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        int i10 = fixedOrderComparator7.getUnknownObjectBehavior();
        fixedOrderComparator7.setUnknownObjectBehavior((int) (byte) 0);
        boolean b14 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        java.lang.Object[] obj_array24 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array24);
        boolean b26 = fixedOrderComparator23.add((java.lang.Object) obj_array24);
        boolean b27 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator23);
        boolean b28 = fixedOrderComparator0.add((java.lang.Object) b27);
        int i29 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array36 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array36);
        fixedOrderComparator38.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator38.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array49 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array49);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array49);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator52.setUnknownObjectBehavior(0);
        int i55 = fixedOrderComparator52.getUnknownObjectBehavior();
        boolean b57 = fixedOrderComparator51.addAsEqual((java.lang.Object) i55, (java.lang.Object) (short) 1);
        int i58 = fixedOrderComparator51.getUnknownObjectBehavior();
        java.lang.Object[] obj_array65 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array65);
        boolean b67 = fixedOrderComparator66.isLocked();
        boolean b68 = fixedOrderComparator51.add((java.lang.Object) fixedOrderComparator66);
        boolean b69 = fixedOrderComparator38.add((java.lang.Object) fixedOrderComparator51);
        boolean b70 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator51);
        boolean b71 = fixedOrderComparator51.isLocked();
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertTrue(i10 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertNotNull(obj_array24);
        org.junit.Assert.assertTrue(b26 == true);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(i29 == 0);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertNotNull(obj_array49);
        org.junit.Assert.assertTrue(i55 == 0);
        org.junit.Assert.assertTrue(b57 == true);
        org.junit.Assert.assertTrue(i58 == 2);
        org.junit.Assert.assertNotNull(obj_array65);
        org.junit.Assert.assertTrue(b67 == false);
        org.junit.Assert.assertTrue(b68 == true);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertTrue(b71 == false);
    }

    @Test
    public void test829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test829");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        boolean b1 = fixedOrderComparator0.isLocked();
        boolean b3 = fixedOrderComparator0.add((java.lang.Object) 10.0d);
        boolean b4 = fixedOrderComparator0.isLocked();
        int i5 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i6 = fixedOrderComparator0.getUnknownObjectBehavior();
        org.junit.Assert.assertTrue(b1 == false);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertTrue(i5 == 2);
        org.junit.Assert.assertTrue(i6 == 2);
    }

    @Test
    public void test830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test830");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator3 = new collections.comparators.FixedOrderComparator();
        int i4 = fixedOrderComparator3.getUnknownObjectBehavior();
        boolean b5 = fixedOrderComparator3.isLocked();
        boolean b6 = fixedOrderComparator0.add((java.lang.Object) b5);
        boolean b7 = fixedOrderComparator0.isLocked();
        int i8 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i9 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b10 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array17);
        java.lang.Object[] obj_array28 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        boolean b33 = fixedOrderComparator29.add((java.lang.Object) 1.0f);
        boolean b35 = fixedOrderComparator29.add((java.lang.Object) 1.0f);
        boolean b36 = fixedOrderComparator29.isLocked();
        boolean b37 = fixedOrderComparator21.add((java.lang.Object) fixedOrderComparator29);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator38.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array47 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array47);
        boolean b50 = fixedOrderComparator48.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator51.setUnknownObjectBehavior(0);
        int i54 = fixedOrderComparator51.getUnknownObjectBehavior();
        fixedOrderComparator51.setUnknownObjectBehavior((int) (byte) 0);
        boolean b57 = fixedOrderComparator48.add((java.lang.Object) fixedOrderComparator51);
        java.lang.Object obj59 = null;
        int i60 = fixedOrderComparator51.compare((java.lang.Object) 1.0d, obj59);
        boolean b61 = fixedOrderComparator51.isLocked();
        boolean b62 = fixedOrderComparator38.add((java.lang.Object) fixedOrderComparator51);
        boolean b63 = fixedOrderComparator51.isLocked();
        boolean b64 = fixedOrderComparator51.isLocked();
        boolean b65 = fixedOrderComparator21.add((java.lang.Object) b64);
        boolean b66 = fixedOrderComparator21.isLocked();
        boolean b67 = fixedOrderComparator21.isLocked();
        try {
            int i69 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator21, (java.lang.Object) 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(i4 == 2);
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertTrue(i8 == 2);
        org.junit.Assert.assertTrue(i9 == 2);
        org.junit.Assert.assertTrue(b10 == false);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(b33 == true);
        org.junit.Assert.assertTrue(b35 == false);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertNotNull(obj_array47);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertTrue(i54 == 0);
        org.junit.Assert.assertTrue(b57 == true);
        org.junit.Assert.assertTrue(i60 == 0);
        org.junit.Assert.assertTrue(b61 == true);
        org.junit.Assert.assertTrue(b62 == true);
        org.junit.Assert.assertTrue(b63 == true);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue(b65 == true);
        org.junit.Assert.assertTrue(b66 == false);
        org.junit.Assert.assertTrue(b67 == false);
    }

    @Test
    public void test831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test831");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array10);
        java.lang.Object[] obj_array20 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array20);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        fixedOrderComparator31.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array40);
        int i44 = fixedOrderComparator31.compare((java.lang.Object) fixedOrderComparator42, (java.lang.Object) (-1.0d));
        boolean b45 = fixedOrderComparator22.add((java.lang.Object) fixedOrderComparator31);
        boolean b46 = fixedOrderComparator31.isLocked();
        int i47 = fixedOrderComparator31.getUnknownObjectBehavior();
        int i48 = fixedOrderComparator0.compare((java.lang.Object) obj_array10, (java.lang.Object) fixedOrderComparator31);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array10);
        fixedOrderComparator56.setUnknownObjectBehavior((int) (byte) 0);
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(i48 == 0);
    }

    @Test
    public void test832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test832");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i10 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b11 = fixedOrderComparator9.isLocked();
        int i12 = fixedOrderComparator9.getUnknownObjectBehavior();
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array19);
        boolean b24 = fixedOrderComparator9.add((java.lang.Object) fixedOrderComparator23);
        boolean b25 = fixedOrderComparator9.isLocked();
        int i26 = fixedOrderComparator9.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator27.setUnknownObjectBehavior(0);
        int i30 = fixedOrderComparator27.getUnknownObjectBehavior();
        java.lang.Object[] obj_array37 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array37);
        java.lang.Object[] obj_array47 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array47);
        java.lang.Object[] obj_array56 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array56);
        fixedOrderComparator58.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array67 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array67);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array67);
        int i71 = fixedOrderComparator58.compare((java.lang.Object) fixedOrderComparator69, (java.lang.Object) (-1.0d));
        boolean b72 = fixedOrderComparator49.add((java.lang.Object) fixedOrderComparator58);
        boolean b73 = fixedOrderComparator58.isLocked();
        int i74 = fixedOrderComparator58.getUnknownObjectBehavior();
        int i75 = fixedOrderComparator27.compare((java.lang.Object) obj_array37, (java.lang.Object) fixedOrderComparator58);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array37);
        boolean b82 = fixedOrderComparator9.add((java.lang.Object) fixedOrderComparator81);
        boolean b83 = fixedOrderComparator9.isLocked();
        boolean b84 = fixedOrderComparator9.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i10 == 2);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertTrue(i12 == 2);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertTrue(i26 == 2);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertNotNull(obj_array37);
        org.junit.Assert.assertNotNull(obj_array47);
        org.junit.Assert.assertNotNull(obj_array56);
        org.junit.Assert.assertNotNull(obj_array67);
        org.junit.Assert.assertTrue(i71 == 0);
        org.junit.Assert.assertTrue(b72 == true);
        org.junit.Assert.assertTrue(b73 == true);
        org.junit.Assert.assertTrue(i74 == 0);
        org.junit.Assert.assertTrue(i75 == 0);
        org.junit.Assert.assertTrue(b82 == true);
        org.junit.Assert.assertTrue(b83 == false);
        org.junit.Assert.assertTrue(b84 == false);
    }

    @Test
    public void test833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test833");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array19 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator21.setUnknownObjectBehavior((int) (short) 0);
        int i24 = fixedOrderComparator7.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator21);
        int i25 = fixedOrderComparator21.getUnknownObjectBehavior();
        fixedOrderComparator21.setUnknownObjectBehavior(1);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator28.setUnknownObjectBehavior(0);
        boolean b31 = fixedOrderComparator28.isLocked();
        boolean b32 = fixedOrderComparator28.isLocked();
        java.lang.Object[] obj_array39 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array39);
        fixedOrderComparator40.setUnknownObjectBehavior(0);
        boolean b44 = fixedOrderComparator40.add((java.lang.Object) 1.0f);
        boolean b46 = fixedOrderComparator40.add((java.lang.Object) 1.0f);
        int i48 = fixedOrderComparator28.compare((java.lang.Object) fixedOrderComparator40, (java.lang.Object) 1.0d);
        fixedOrderComparator40.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array57 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator();
        int i63 = fixedOrderComparator62.getUnknownObjectBehavior();
        boolean b64 = fixedOrderComparator62.isLocked();
        fixedOrderComparator62.setUnknownObjectBehavior(0);
        int i67 = fixedOrderComparator40.compare((java.lang.Object) obj_array57, (java.lang.Object) fixedOrderComparator62);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array57);
        boolean b69 = fixedOrderComparator68.isLocked();
        java.lang.Object[] obj_array76 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array76);
        java.lang.Object[] obj_array84 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array84);
        fixedOrderComparator85.setUnknownObjectBehavior(0);
        boolean b88 = fixedOrderComparator77.add((java.lang.Object) 0);
        boolean b89 = fixedOrderComparator77.isLocked();
        boolean b90 = fixedOrderComparator77.isLocked();
        int i91 = fixedOrderComparator21.compare((java.lang.Object) fixedOrderComparator68, (java.lang.Object) b90);
        boolean b92 = fixedOrderComparator68.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNotNull(obj_array39);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue(i48 == 0);
        org.junit.Assert.assertNotNull(obj_array57);
        org.junit.Assert.assertTrue(i63 == 2);
        org.junit.Assert.assertTrue(b64 == false);
        org.junit.Assert.assertTrue(i67 == 0);
        org.junit.Assert.assertTrue(b69 == false);
        org.junit.Assert.assertNotNull(obj_array76);
        org.junit.Assert.assertNotNull(obj_array84);
        org.junit.Assert.assertTrue(b88 == false);
        org.junit.Assert.assertTrue(b89 == false);
        org.junit.Assert.assertTrue(b90 == false);
        org.junit.Assert.assertTrue(i91 == 0);
        org.junit.Assert.assertTrue(b92 == false);
    }

    @Test
    public void test834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test834");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        boolean b1 = fixedOrderComparator0.isLocked();
        boolean b3 = fixedOrderComparator0.add((java.lang.Object) 10.0d);
        java.lang.Object obj4 = null;
        boolean b5 = fixedOrderComparator0.add(obj4);
        boolean b6 = fixedOrderComparator0.isLocked();
        try {
            fixedOrderComparator0.setUnknownObjectBehavior((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b1 == false);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue(b5 == true);
        org.junit.Assert.assertTrue(b6 == false);
    }

    @Test
    public void test835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test835");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array19 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator21.setUnknownObjectBehavior((int) (short) 0);
        int i24 = fixedOrderComparator7.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator21);
        int i25 = fixedOrderComparator21.getUnknownObjectBehavior();
        fixedOrderComparator21.setUnknownObjectBehavior(1);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator28.setUnknownObjectBehavior(0);
        boolean b31 = fixedOrderComparator28.isLocked();
        boolean b32 = fixedOrderComparator28.isLocked();
        java.lang.Object[] obj_array39 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array39);
        fixedOrderComparator40.setUnknownObjectBehavior(0);
        boolean b44 = fixedOrderComparator40.add((java.lang.Object) 1.0f);
        boolean b46 = fixedOrderComparator40.add((java.lang.Object) 1.0f);
        int i48 = fixedOrderComparator28.compare((java.lang.Object) fixedOrderComparator40, (java.lang.Object) 1.0d);
        fixedOrderComparator40.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array57 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator();
        int i63 = fixedOrderComparator62.getUnknownObjectBehavior();
        boolean b64 = fixedOrderComparator62.isLocked();
        fixedOrderComparator62.setUnknownObjectBehavior(0);
        int i67 = fixedOrderComparator40.compare((java.lang.Object) obj_array57, (java.lang.Object) fixedOrderComparator62);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array57);
        boolean b69 = fixedOrderComparator68.isLocked();
        java.lang.Object[] obj_array76 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array76);
        java.lang.Object[] obj_array84 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array84);
        fixedOrderComparator85.setUnknownObjectBehavior(0);
        boolean b88 = fixedOrderComparator77.add((java.lang.Object) 0);
        boolean b89 = fixedOrderComparator77.isLocked();
        boolean b90 = fixedOrderComparator77.isLocked();
        int i91 = fixedOrderComparator21.compare((java.lang.Object) fixedOrderComparator68, (java.lang.Object) b90);
        int i92 = fixedOrderComparator68.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNotNull(obj_array39);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue(i48 == 0);
        org.junit.Assert.assertNotNull(obj_array57);
        org.junit.Assert.assertTrue(i63 == 2);
        org.junit.Assert.assertTrue(b64 == false);
        org.junit.Assert.assertTrue(i67 == 0);
        org.junit.Assert.assertTrue(b69 == false);
        org.junit.Assert.assertNotNull(obj_array76);
        org.junit.Assert.assertNotNull(obj_array84);
        org.junit.Assert.assertTrue(b88 == false);
        org.junit.Assert.assertTrue(b89 == false);
        org.junit.Assert.assertTrue(b90 == false);
        org.junit.Assert.assertTrue(i91 == 0);
        org.junit.Assert.assertTrue(i92 == 2);
    }

    @Test
    public void test836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test836");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        int i12 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator7.add((java.lang.Object) (byte) 100);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        fixedOrderComparator30.setUnknownObjectBehavior(0);
        boolean b33 = fixedOrderComparator22.add((java.lang.Object) 0);
        boolean b34 = fixedOrderComparator22.isLocked();
        boolean b35 = fixedOrderComparator22.isLocked();
        boolean b36 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator22);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator37.setUnknownObjectBehavior(0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        int i41 = fixedOrderComparator37.getUnknownObjectBehavior();
        boolean b42 = fixedOrderComparator7.add((java.lang.Object) i41);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertTrue(b35 == false);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i41 == 0);
        org.junit.Assert.assertTrue(b42 == false);
    }

    @Test
    public void test837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test837");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b7 = fixedOrderComparator0.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array14);
        java.lang.Object[] obj_array17 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        boolean b19 = fixedOrderComparator16.add((java.lang.Object) obj_array17);
        boolean b20 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator16);
        java.lang.Object[] obj_array21 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b23 = fixedOrderComparator16.add((java.lang.Object) obj_array21);
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        fixedOrderComparator31.setUnknownObjectBehavior(0);
        boolean b35 = fixedOrderComparator31.add((java.lang.Object) 1.0f);
        int i36 = fixedOrderComparator31.getUnknownObjectBehavior();
        java.lang.Object[] obj_array43 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array43);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array54);
        int i60 = fixedOrderComparator31.compare((java.lang.Object) fixedOrderComparator47, (java.lang.Object) fixedOrderComparator59);
        boolean b61 = fixedOrderComparator16.add((java.lang.Object) fixedOrderComparator31);
        boolean b62 = fixedOrderComparator16.isLocked();
        int i63 = fixedOrderComparator16.getUnknownObjectBehavior();
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertTrue(i36 == 0);
        org.junit.Assert.assertNotNull(obj_array43);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertTrue(i60 == 0);
        org.junit.Assert.assertTrue(b61 == true);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertTrue(i63 == 2);
    }

    @Test
    public void test838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test838");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator9.setUnknownObjectBehavior(0);
        int i12 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) i12, (java.lang.Object) (short) 1);
        int i15 = fixedOrderComparator8.getUnknownObjectBehavior();
        fixedOrderComparator8.setUnknownObjectBehavior((int) (byte) 0);
        java.lang.Object[] obj_array18 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        java.lang.Object[] obj_array20 = new java.lang.Object[] { fixedOrderComparator19 };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array20);
        java.lang.Object[] obj_array33 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        boolean b38 = fixedOrderComparator34.add((java.lang.Object) 1.0f);
        java.lang.Object obj39 = null;
        java.lang.Object[] obj_array46 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        fixedOrderComparator47.setUnknownObjectBehavior(0);
        boolean b51 = fixedOrderComparator47.add((java.lang.Object) 1.0f);
        int i52 = fixedOrderComparator47.getUnknownObjectBehavior();
        int i53 = fixedOrderComparator34.compare(obj39, (java.lang.Object) i52);
        int i54 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b55 = fixedOrderComparator34.isLocked();
        java.lang.Object[] obj_array62 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array62);
        fixedOrderComparator64.setUnknownObjectBehavior((int) (short) 0);
        int i67 = fixedOrderComparator64.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator68.setUnknownObjectBehavior(0);
        int i71 = fixedOrderComparator68.getUnknownObjectBehavior();
        int i72 = fixedOrderComparator34.compare((java.lang.Object) i67, (java.lang.Object) fixedOrderComparator68);
        boolean b73 = fixedOrderComparator68.isLocked();
        int i74 = fixedOrderComparator68.getUnknownObjectBehavior();
        try {
            boolean b75 = fixedOrderComparator8.addAsEqual((java.lang.Object) fixedOrderComparator26, (java.lang.Object) fixedOrderComparator68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i15 == 2);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertTrue(b51 == true);
        org.junit.Assert.assertTrue(i52 == 0);
        org.junit.Assert.assertTrue(i53 == (-1));
        org.junit.Assert.assertTrue(i54 == 0);
        org.junit.Assert.assertTrue(b55 == true);
        org.junit.Assert.assertNotNull(obj_array62);
        org.junit.Assert.assertTrue(i67 == 0);
        org.junit.Assert.assertTrue(i71 == 0);
        org.junit.Assert.assertTrue(i72 == 1);
        org.junit.Assert.assertTrue(b73 == false);
        org.junit.Assert.assertTrue(i74 == 0);
    }

    @Test
    public void test839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test839");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { fixedOrderComparator0, obj_array22 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array22);
        int i34 = fixedOrderComparator33.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator();
        boolean b36 = fixedOrderComparator33.add((java.lang.Object) fixedOrderComparator35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator37.setUnknownObjectBehavior(0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        java.lang.Object[] obj_array47 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array47);
        java.lang.Object[] obj_array57 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array57);
        java.lang.Object[] obj_array66 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array66);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array66);
        fixedOrderComparator68.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array77 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator(obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array77);
        int i81 = fixedOrderComparator68.compare((java.lang.Object) fixedOrderComparator79, (java.lang.Object) (-1.0d));
        boolean b82 = fixedOrderComparator59.add((java.lang.Object) fixedOrderComparator68);
        boolean b83 = fixedOrderComparator68.isLocked();
        int i84 = fixedOrderComparator68.getUnknownObjectBehavior();
        int i85 = fixedOrderComparator37.compare((java.lang.Object) obj_array47, (java.lang.Object) fixedOrderComparator68);
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator87 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator88 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator89 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator90 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator91 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator92 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator93 = new collections.comparators.FixedOrderComparator(obj_array47);
        boolean b94 = fixedOrderComparator33.add((java.lang.Object) obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator95 = new collections.comparators.FixedOrderComparator(obj_array47);
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i34 == 2);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertNotNull(obj_array47);
        org.junit.Assert.assertNotNull(obj_array57);
        org.junit.Assert.assertNotNull(obj_array66);
        org.junit.Assert.assertNotNull(obj_array77);
        org.junit.Assert.assertTrue(i81 == 0);
        org.junit.Assert.assertTrue(b82 == true);
        org.junit.Assert.assertTrue(b83 == true);
        org.junit.Assert.assertTrue(i84 == 0);
        org.junit.Assert.assertTrue(i85 == 0);
        org.junit.Assert.assertTrue(b94 == true);
    }

    @Test
    public void test840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test840");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator3 = new collections.comparators.FixedOrderComparator();
        int i4 = fixedOrderComparator3.getUnknownObjectBehavior();
        boolean b5 = fixedOrderComparator3.isLocked();
        boolean b6 = fixedOrderComparator0.add((java.lang.Object) b5);
        boolean b7 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        boolean b17 = fixedOrderComparator15.add((java.lang.Object) (-1.0f));
        int i18 = fixedOrderComparator15.getUnknownObjectBehavior();
        boolean b19 = fixedOrderComparator0.add((java.lang.Object) i18);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        boolean b29 = fixedOrderComparator27.add((java.lang.Object) (-1.0f));
        fixedOrderComparator27.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array39 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array39);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array39);
        fixedOrderComparator41.setUnknownObjectBehavior((int) (short) 0);
        int i44 = fixedOrderComparator27.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator41);
        fixedOrderComparator41.setUnknownObjectBehavior((int) (byte) 0);
        boolean b47 = fixedOrderComparator41.isLocked();
        boolean b48 = fixedOrderComparator0.add((java.lang.Object) b47);
        fixedOrderComparator0.setUnknownObjectBehavior((int) (short) 0);
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(i4 == 2);
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(i18 == 2);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertNotNull(obj_array39);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b47 == false);
        org.junit.Assert.assertTrue(b48 == false);
    }

    @Test
    public void test841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test841");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b28 = fixedOrderComparator14.add((java.lang.Object) obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array21);
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        boolean b45 = fixedOrderComparator41.add((java.lang.Object) 1.0f);
        java.lang.Object obj46 = null;
        java.lang.Object[] obj_array53 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array53);
        fixedOrderComparator54.setUnknownObjectBehavior(0);
        boolean b58 = fixedOrderComparator54.add((java.lang.Object) 1.0f);
        int i59 = fixedOrderComparator54.getUnknownObjectBehavior();
        int i60 = fixedOrderComparator41.compare(obj46, (java.lang.Object) i59);
        boolean b61 = fixedOrderComparator41.isLocked();
        int i62 = fixedOrderComparator41.getUnknownObjectBehavior();
        boolean b63 = fixedOrderComparator41.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator64.setUnknownObjectBehavior(0);
        int i67 = fixedOrderComparator64.getUnknownObjectBehavior();
        fixedOrderComparator64.setUnknownObjectBehavior((int) (byte) 0);
        boolean b71 = fixedOrderComparator64.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array78 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array78);
        java.lang.Object[] obj_array81 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array81);
        boolean b83 = fixedOrderComparator80.add((java.lang.Object) obj_array81);
        boolean b84 = fixedOrderComparator64.add((java.lang.Object) fixedOrderComparator80);
        int i85 = fixedOrderComparator64.getUnknownObjectBehavior();
        try {
            int i86 = fixedOrderComparator33.compare((java.lang.Object) b63, (java.lang.Object) i85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertNotNull(obj_array53);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertTrue(i59 == 0);
        org.junit.Assert.assertTrue(i60 == (-1));
        org.junit.Assert.assertTrue(b61 == true);
        org.junit.Assert.assertTrue(i62 == 0);
        org.junit.Assert.assertTrue(b63 == true);
        org.junit.Assert.assertTrue(i67 == 0);
        org.junit.Assert.assertTrue(b71 == true);
        org.junit.Assert.assertNotNull(obj_array78);
        org.junit.Assert.assertNotNull(obj_array81);
        org.junit.Assert.assertTrue(b83 == true);
        org.junit.Assert.assertTrue(b84 == true);
        org.junit.Assert.assertTrue(i85 == 0);
    }

    @Test
    public void test842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test842");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        boolean b1 = fixedOrderComparator0.isLocked();
        boolean b2 = fixedOrderComparator0.isLocked();
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        fixedOrderComparator11.setUnknownObjectBehavior(0);
        boolean b15 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        boolean b17 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        fixedOrderComparator11.setUnknownObjectBehavior(1);
        boolean b20 = fixedOrderComparator11.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator21.setUnknownObjectBehavior(0);
        int i24 = fixedOrderComparator21.getUnknownObjectBehavior();
        fixedOrderComparator21.setUnknownObjectBehavior((int) (byte) 0);
        boolean b27 = fixedOrderComparator21.isLocked();
        int i28 = fixedOrderComparator21.getUnknownObjectBehavior();
        int i29 = fixedOrderComparator21.getUnknownObjectBehavior();
        int i30 = fixedOrderComparator21.getUnknownObjectBehavior();
        fixedOrderComparator21.setUnknownObjectBehavior((int) (byte) 1);
        java.lang.Object[] obj_array39 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array39);
        java.lang.Object[] obj_array47 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array47);
        fixedOrderComparator48.setUnknownObjectBehavior(0);
        boolean b51 = fixedOrderComparator40.add((java.lang.Object) 0);
        boolean b52 = fixedOrderComparator40.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator();
        int i54 = fixedOrderComparator53.getUnknownObjectBehavior();
        boolean b55 = fixedOrderComparator40.add((java.lang.Object) i54);
        boolean b56 = fixedOrderComparator21.add((java.lang.Object) i54);
        int i57 = fixedOrderComparator21.getUnknownObjectBehavior();
        try {
            boolean b58 = fixedOrderComparator0.addAsEqual((java.lang.Object) b20, (java.lang.Object) fixedOrderComparator21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b1 == false);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(i3 == 2);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertTrue(i29 == 0);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertNotNull(obj_array39);
        org.junit.Assert.assertNotNull(obj_array47);
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertTrue(i54 == 2);
        org.junit.Assert.assertTrue(b55 == true);
        org.junit.Assert.assertTrue(b56 == true);
        org.junit.Assert.assertTrue(i57 == 1);
    }

    @Test
    public void test843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test843");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        collections.comparators.FixedOrderComparator fixedOrderComparator5 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator5.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        boolean b17 = fixedOrderComparator15.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator18.setUnknownObjectBehavior(0);
        int i21 = fixedOrderComparator18.getUnknownObjectBehavior();
        fixedOrderComparator18.setUnknownObjectBehavior((int) (byte) 0);
        boolean b24 = fixedOrderComparator15.add((java.lang.Object) fixedOrderComparator18);
        java.lang.Object obj26 = null;
        int i27 = fixedOrderComparator18.compare((java.lang.Object) 1.0d, obj26);
        boolean b28 = fixedOrderComparator18.isLocked();
        boolean b29 = fixedOrderComparator5.add((java.lang.Object) fixedOrderComparator18);
        java.lang.Object[] obj_array36 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        fixedOrderComparator37.setUnknownObjectBehavior(0);
        boolean b41 = fixedOrderComparator37.add((java.lang.Object) 1.0f);
        java.lang.Object obj42 = null;
        java.lang.Object[] obj_array49 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array49);
        fixedOrderComparator50.setUnknownObjectBehavior(0);
        boolean b54 = fixedOrderComparator50.add((java.lang.Object) 1.0f);
        int i55 = fixedOrderComparator50.getUnknownObjectBehavior();
        int i56 = fixedOrderComparator37.compare(obj42, (java.lang.Object) i55);
        int i57 = fixedOrderComparator37.getUnknownObjectBehavior();
        boolean b58 = fixedOrderComparator37.isLocked();
        java.lang.Object[] obj_array65 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array65);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array65);
        fixedOrderComparator67.setUnknownObjectBehavior((int) (short) 0);
        int i70 = fixedOrderComparator67.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator71.setUnknownObjectBehavior(0);
        int i74 = fixedOrderComparator71.getUnknownObjectBehavior();
        int i75 = fixedOrderComparator37.compare((java.lang.Object) i70, (java.lang.Object) fixedOrderComparator71);
        boolean b76 = fixedOrderComparator37.isLocked();
        int i77 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator5, (java.lang.Object) b76);
        boolean b78 = fixedOrderComparator0.isLocked();
        int i79 = fixedOrderComparator0.getUnknownObjectBehavior();
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b17 == true);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertNotNull(obj_array49);
        org.junit.Assert.assertTrue(b54 == true);
        org.junit.Assert.assertTrue(i55 == 0);
        org.junit.Assert.assertTrue(i56 == (-1));
        org.junit.Assert.assertTrue(i57 == 0);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertNotNull(obj_array65);
        org.junit.Assert.assertTrue(i70 == 0);
        org.junit.Assert.assertTrue(i74 == 0);
        org.junit.Assert.assertTrue(i75 == 1);
        org.junit.Assert.assertTrue(b76 == true);
        org.junit.Assert.assertTrue(i77 == 0);
        org.junit.Assert.assertTrue(b78 == true);
        org.junit.Assert.assertTrue(i79 == 0);
    }

    @Test
    public void test844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test844");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        java.lang.Object[] obj_array46 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array54);
        int i58 = fixedOrderComparator57.getUnknownObjectBehavior();
        boolean b59 = fixedOrderComparator57.isLocked();
        int i60 = fixedOrderComparator41.compare((java.lang.Object) fixedOrderComparator47, (java.lang.Object) fixedOrderComparator57);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator();
        int i62 = fixedOrderComparator61.getUnknownObjectBehavior();
        java.lang.Object[] obj_array69 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator(obj_array69);
        boolean b74 = fixedOrderComparator61.add((java.lang.Object) fixedOrderComparator73);
        fixedOrderComparator61.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array83 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator84 = new collections.comparators.FixedOrderComparator(obj_array83);
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array83);
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array83);
        collections.comparators.FixedOrderComparator fixedOrderComparator87 = new collections.comparators.FixedOrderComparator(obj_array83);
        collections.comparators.FixedOrderComparator fixedOrderComparator88 = new collections.comparators.FixedOrderComparator(obj_array83);
        collections.comparators.FixedOrderComparator fixedOrderComparator89 = new collections.comparators.FixedOrderComparator(obj_array83);
        java.lang.Object[] obj_array90 = new java.lang.Object[] { fixedOrderComparator61, obj_array83 };
        collections.comparators.FixedOrderComparator fixedOrderComparator91 = new collections.comparators.FixedOrderComparator(obj_array83);
        collections.comparators.FixedOrderComparator fixedOrderComparator92 = new collections.comparators.FixedOrderComparator(obj_array83);
        collections.comparators.FixedOrderComparator fixedOrderComparator93 = new collections.comparators.FixedOrderComparator(obj_array83);
        boolean b94 = fixedOrderComparator57.add((java.lang.Object) fixedOrderComparator93);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertTrue(i58 == 2);
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertTrue(i60 == 0);
        org.junit.Assert.assertTrue(i62 == 2);
        org.junit.Assert.assertNotNull(obj_array69);
        org.junit.Assert.assertTrue(b74 == true);
        org.junit.Assert.assertNotNull(obj_array83);
        org.junit.Assert.assertNotNull(obj_array90);
        org.junit.Assert.assertTrue(b94 == true);
    }

    @Test
    public void test845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test845");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        int i12 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array19);
        java.lang.Object[] obj_array30 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array30);
        int i36 = fixedOrderComparator7.compare((java.lang.Object) fixedOrderComparator23, (java.lang.Object) fixedOrderComparator35);
        java.lang.Object[] obj_array43 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array43);
        boolean b53 = fixedOrderComparator23.add((java.lang.Object) obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array43);
        fixedOrderComparator54.setUnknownObjectBehavior((int) (short) 1);
        boolean b57 = fixedOrderComparator54.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(i36 == 0);
        org.junit.Assert.assertNotNull(obj_array43);
        org.junit.Assert.assertTrue(b53 == true);
        org.junit.Assert.assertTrue(b57 == false);
    }

    @Test
    public void test846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test846");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator();
        int i17 = fixedOrderComparator16.getUnknownObjectBehavior();
        java.lang.Object[] obj_array24 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array24);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array24);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array24);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array24);
        boolean b29 = fixedOrderComparator16.add((java.lang.Object) fixedOrderComparator28);
        fixedOrderComparator16.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array38 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array38);
        java.lang.Object[] obj_array45 = new java.lang.Object[] { fixedOrderComparator16, obj_array38 };
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array38);
        boolean b49 = fixedOrderComparator15.add((java.lang.Object) obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array38);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i17 == 2);
        org.junit.Assert.assertNotNull(obj_array24);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertNotNull(obj_array38);
        org.junit.Assert.assertNotNull(obj_array45);
        org.junit.Assert.assertTrue(b49 == true);
    }

    @Test
    public void test847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test847");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        fixedOrderComparator11.setUnknownObjectBehavior(0);
        boolean b15 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        boolean b17 = fixedOrderComparator11.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator();
        boolean b19 = fixedOrderComparator18.isLocked();
        boolean b21 = fixedOrderComparator18.add((java.lang.Object) 10.0d);
        int i22 = fixedOrderComparator0.compare((java.lang.Object) b17, (java.lang.Object) fixedOrderComparator18);
        boolean b23 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator();
        int i34 = fixedOrderComparator33.getUnknownObjectBehavior();
        java.lang.Object[] obj_array41 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array41);
        boolean b46 = fixedOrderComparator33.add((java.lang.Object) fixedOrderComparator45);
        fixedOrderComparator33.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array55 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array55);
        int i60 = fixedOrderComparator59.getUnknownObjectBehavior();
        int i61 = fixedOrderComparator59.getUnknownObjectBehavior();
        boolean b62 = fixedOrderComparator59.isLocked();
        int i63 = fixedOrderComparator59.getUnknownObjectBehavior();
        int i65 = fixedOrderComparator33.compare((java.lang.Object) fixedOrderComparator59, (java.lang.Object) 1L);
        int i66 = fixedOrderComparator0.compare((java.lang.Object) obj_array30, (java.lang.Object) i65);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array30);
        boolean b68 = fixedOrderComparator67.isLocked();
        java.lang.Object[] obj_array75 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array75);
        fixedOrderComparator76.setUnknownObjectBehavior(0);
        boolean b80 = fixedOrderComparator76.add((java.lang.Object) 1.0f);
        boolean b82 = fixedOrderComparator76.add((java.lang.Object) 1.0f);
        boolean b83 = fixedOrderComparator76.isLocked();
        boolean b84 = fixedOrderComparator76.isLocked();
        int i85 = fixedOrderComparator76.getUnknownObjectBehavior();
        int i86 = fixedOrderComparator76.getUnknownObjectBehavior();
        boolean b87 = fixedOrderComparator67.add((java.lang.Object) fixedOrderComparator76);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertTrue(b17 == false);
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(i34 == 2);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(i60 == 2);
        org.junit.Assert.assertTrue(i61 == 2);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertTrue(i63 == 2);
        org.junit.Assert.assertTrue(i65 == 0);
        org.junit.Assert.assertTrue(i66 == 0);
        org.junit.Assert.assertTrue(b68 == false);
        org.junit.Assert.assertNotNull(obj_array75);
        org.junit.Assert.assertTrue(b80 == true);
        org.junit.Assert.assertTrue(b82 == false);
        org.junit.Assert.assertTrue(b83 == false);
        org.junit.Assert.assertTrue(b84 == false);
        org.junit.Assert.assertTrue(i85 == 0);
        org.junit.Assert.assertTrue(i86 == 0);
        org.junit.Assert.assertTrue(b87 == true);
    }

    @Test
    public void test848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test848");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array19 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator21.setUnknownObjectBehavior((int) (short) 0);
        int i24 = fixedOrderComparator7.compare((java.lang.Object) 1, (java.lang.Object) fixedOrderComparator21);
        int i25 = fixedOrderComparator21.getUnknownObjectBehavior();
        fixedOrderComparator21.setUnknownObjectBehavior(1);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator28.setUnknownObjectBehavior(0);
        boolean b31 = fixedOrderComparator28.isLocked();
        boolean b32 = fixedOrderComparator28.isLocked();
        java.lang.Object[] obj_array39 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array39);
        fixedOrderComparator40.setUnknownObjectBehavior(0);
        boolean b44 = fixedOrderComparator40.add((java.lang.Object) 1.0f);
        boolean b46 = fixedOrderComparator40.add((java.lang.Object) 1.0f);
        int i48 = fixedOrderComparator28.compare((java.lang.Object) fixedOrderComparator40, (java.lang.Object) 1.0d);
        fixedOrderComparator40.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array57 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator();
        int i63 = fixedOrderComparator62.getUnknownObjectBehavior();
        boolean b64 = fixedOrderComparator62.isLocked();
        fixedOrderComparator62.setUnknownObjectBehavior(0);
        int i67 = fixedOrderComparator40.compare((java.lang.Object) obj_array57, (java.lang.Object) fixedOrderComparator62);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array57);
        boolean b69 = fixedOrderComparator68.isLocked();
        java.lang.Object[] obj_array76 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array76);
        java.lang.Object[] obj_array84 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array84);
        fixedOrderComparator85.setUnknownObjectBehavior(0);
        boolean b88 = fixedOrderComparator77.add((java.lang.Object) 0);
        boolean b89 = fixedOrderComparator77.isLocked();
        boolean b90 = fixedOrderComparator77.isLocked();
        int i91 = fixedOrderComparator21.compare((java.lang.Object) fixedOrderComparator68, (java.lang.Object) b90);
        int i92 = fixedOrderComparator21.getUnknownObjectBehavior();
        boolean b93 = fixedOrderComparator21.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNotNull(obj_array39);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue(i48 == 0);
        org.junit.Assert.assertNotNull(obj_array57);
        org.junit.Assert.assertTrue(i63 == 2);
        org.junit.Assert.assertTrue(b64 == false);
        org.junit.Assert.assertTrue(i67 == 0);
        org.junit.Assert.assertTrue(b69 == false);
        org.junit.Assert.assertNotNull(obj_array76);
        org.junit.Assert.assertNotNull(obj_array84);
        org.junit.Assert.assertTrue(b88 == false);
        org.junit.Assert.assertTrue(b89 == false);
        org.junit.Assert.assertTrue(b90 == false);
        org.junit.Assert.assertTrue(i91 == 0);
        org.junit.Assert.assertTrue(i92 == 1);
        org.junit.Assert.assertTrue(b93 == true);
    }

    @Test
    public void test849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test849");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator9.setUnknownObjectBehavior(0);
        int i12 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) i12, (java.lang.Object) (short) 1);
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b28 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator27);
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array35);
        int i39 = fixedOrderComparator38.getUnknownObjectBehavior();
        boolean b40 = fixedOrderComparator38.isLocked();
        int i41 = fixedOrderComparator38.getUnknownObjectBehavior();
        java.lang.Object[] obj_array48 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array48);
        boolean b53 = fixedOrderComparator38.add((java.lang.Object) fixedOrderComparator52);
        boolean b54 = fixedOrderComparator38.isLocked();
        boolean b55 = fixedOrderComparator27.add((java.lang.Object) b54);
        java.lang.Object[] obj_array62 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array62);
        int i67 = fixedOrderComparator66.getUnknownObjectBehavior();
        fixedOrderComparator66.setUnknownObjectBehavior((int) (short) 0);
        int i70 = fixedOrderComparator66.getUnknownObjectBehavior();
        boolean b71 = fixedOrderComparator27.add((java.lang.Object) i70);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i39 == 2);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertTrue(i41 == 2);
        org.junit.Assert.assertNotNull(obj_array48);
        org.junit.Assert.assertTrue(b53 == true);
        org.junit.Assert.assertTrue(b54 == false);
        org.junit.Assert.assertTrue(b55 == true);
        org.junit.Assert.assertNotNull(obj_array62);
        org.junit.Assert.assertTrue(i67 == 2);
        org.junit.Assert.assertTrue(i70 == 0);
        org.junit.Assert.assertTrue(b71 == false);
    }

    @Test
    public void test850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test850");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        java.lang.Object[] obj_array46 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array46);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array54);
        int i58 = fixedOrderComparator57.getUnknownObjectBehavior();
        boolean b59 = fixedOrderComparator57.isLocked();
        int i60 = fixedOrderComparator41.compare((java.lang.Object) fixedOrderComparator47, (java.lang.Object) fixedOrderComparator57);
        java.lang.Object[] obj_array67 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array67);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array67);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator70.setUnknownObjectBehavior(0);
        int i73 = fixedOrderComparator70.getUnknownObjectBehavior();
        boolean b75 = fixedOrderComparator69.addAsEqual((java.lang.Object) i73, (java.lang.Object) (short) 1);
        int i76 = fixedOrderComparator69.getUnknownObjectBehavior();
        java.lang.Object[] obj_array83 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator84 = new collections.comparators.FixedOrderComparator(obj_array83);
        boolean b85 = fixedOrderComparator84.isLocked();
        boolean b86 = fixedOrderComparator69.add((java.lang.Object) fixedOrderComparator84);
        int i87 = fixedOrderComparator69.getUnknownObjectBehavior();
        boolean b88 = fixedOrderComparator69.isLocked();
        boolean b89 = fixedOrderComparator47.add((java.lang.Object) b88);
        int i90 = fixedOrderComparator47.getUnknownObjectBehavior();
        java.lang.Object obj91 = null;
        boolean b92 = fixedOrderComparator47.add(obj91);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertNotNull(obj_array46);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertTrue(i58 == 2);
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertTrue(i60 == 0);
        org.junit.Assert.assertNotNull(obj_array67);
        org.junit.Assert.assertTrue(i73 == 0);
        org.junit.Assert.assertTrue(b75 == true);
        org.junit.Assert.assertTrue(i76 == 2);
        org.junit.Assert.assertNotNull(obj_array83);
        org.junit.Assert.assertTrue(b85 == false);
        org.junit.Assert.assertTrue(b86 == true);
        org.junit.Assert.assertTrue(i87 == 2);
        org.junit.Assert.assertTrue(b88 == false);
        org.junit.Assert.assertTrue(b89 == true);
        org.junit.Assert.assertTrue(i90 == 2);
        org.junit.Assert.assertTrue(b92 == true);
    }

    @Test
    public void test851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test851");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        boolean b10 = fixedOrderComparator7.isLocked();
        boolean b11 = fixedOrderComparator7.isLocked();
        int i12 = fixedOrderComparator7.getUnknownObjectBehavior();
        try {
            fixedOrderComparator7.setUnknownObjectBehavior((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(b10 == false);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertTrue(i12 == 2);
    }

    @Test
    public void test852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test852");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array18 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array18);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array18);
        int i22 = fixedOrderComparator21.getUnknownObjectBehavior();
        boolean b23 = fixedOrderComparator21.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array31 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        boolean b34 = fixedOrderComparator32.add((java.lang.Object) (-1.0f));
        int i35 = fixedOrderComparator32.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        fixedOrderComparator44.setUnknownObjectBehavior((int) (short) 0);
        int i47 = fixedOrderComparator44.getUnknownObjectBehavior();
        boolean b48 = fixedOrderComparator32.add((java.lang.Object) i47);
        boolean b49 = fixedOrderComparator24.add((java.lang.Object) fixedOrderComparator32);
        int i50 = fixedOrderComparator7.compare((java.lang.Object) b23, (java.lang.Object) fixedOrderComparator24);
        java.lang.Object[] obj_array58 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array58);
        java.lang.Object[] obj_array63 = new java.lang.Object[] { fixedOrderComparator24, (byte) 10, obj_array58 };
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array58);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array58);
        int i67 = fixedOrderComparator66.getUnknownObjectBehavior();
        try {
            fixedOrderComparator66.setUnknownObjectBehavior((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertTrue(i22 == 2);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(i50 == 0);
        org.junit.Assert.assertNotNull(obj_array58);
        org.junit.Assert.assertNotNull(obj_array63);
        org.junit.Assert.assertTrue(i67 == 2);
    }

    @Test
    public void test853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test853");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        int i29 = fixedOrderComparator7.getUnknownObjectBehavior();
        try {
            fixedOrderComparator7.setUnknownObjectBehavior((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(i29 == 0);
    }

    @Test
    public void test854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test854");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array10);
        java.lang.Object[] obj_array20 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array20);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        fixedOrderComparator31.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array40);
        int i44 = fixedOrderComparator31.compare((java.lang.Object) fixedOrderComparator42, (java.lang.Object) (-1.0d));
        boolean b45 = fixedOrderComparator22.add((java.lang.Object) fixedOrderComparator31);
        boolean b46 = fixedOrderComparator31.isLocked();
        int i47 = fixedOrderComparator31.getUnknownObjectBehavior();
        int i48 = fixedOrderComparator0.compare((java.lang.Object) obj_array10, (java.lang.Object) fixedOrderComparator31);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array10);
        int i54 = fixedOrderComparator53.getUnknownObjectBehavior();
        int i55 = fixedOrderComparator53.getUnknownObjectBehavior();
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(i48 == 0);
        org.junit.Assert.assertTrue(i54 == 2);
        org.junit.Assert.assertTrue(i55 == 2);
    }

    @Test
    public void test855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test855");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator8.setUnknownObjectBehavior(0);
        boolean b13 = fixedOrderComparator8.isLocked();
        boolean b14 = fixedOrderComparator8.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        int i18 = fixedOrderComparator15.getUnknownObjectBehavior();
        fixedOrderComparator15.setUnknownObjectBehavior((int) (byte) 0);
        boolean b22 = fixedOrderComparator15.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        boolean b32 = fixedOrderComparator30.add((java.lang.Object) (-1.0f));
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator();
        int i34 = fixedOrderComparator33.getUnknownObjectBehavior();
        boolean b35 = fixedOrderComparator33.isLocked();
        fixedOrderComparator33.setUnknownObjectBehavior(0);
        int i38 = fixedOrderComparator15.compare((java.lang.Object) fixedOrderComparator30, (java.lang.Object) 0);
        int i39 = fixedOrderComparator15.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator40.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array49 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array49);
        boolean b52 = fixedOrderComparator50.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator53.setUnknownObjectBehavior(0);
        int i56 = fixedOrderComparator53.getUnknownObjectBehavior();
        fixedOrderComparator53.setUnknownObjectBehavior((int) (byte) 0);
        boolean b59 = fixedOrderComparator50.add((java.lang.Object) fixedOrderComparator53);
        java.lang.Object obj61 = null;
        int i62 = fixedOrderComparator53.compare((java.lang.Object) 1.0d, obj61);
        boolean b63 = fixedOrderComparator53.isLocked();
        boolean b64 = fixedOrderComparator40.add((java.lang.Object) fixedOrderComparator53);
        boolean b65 = fixedOrderComparator53.isLocked();
        boolean b66 = fixedOrderComparator53.isLocked();
        int i67 = fixedOrderComparator53.getUnknownObjectBehavior();
        int i70 = fixedOrderComparator53.compare((java.lang.Object) ' ', (java.lang.Object) 10L);
        int i71 = fixedOrderComparator53.getUnknownObjectBehavior();
        int i72 = fixedOrderComparator8.compare((java.lang.Object) i39, (java.lang.Object) i71);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertTrue(i18 == 0);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertTrue(i34 == 2);
        org.junit.Assert.assertTrue(b35 == false);
        org.junit.Assert.assertTrue(i38 == 0);
        org.junit.Assert.assertTrue(i39 == 0);
        org.junit.Assert.assertNotNull(obj_array49);
        org.junit.Assert.assertTrue(b52 == true);
        org.junit.Assert.assertTrue(i56 == 0);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertTrue(i62 == 0);
        org.junit.Assert.assertTrue(b63 == true);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue(b65 == true);
        org.junit.Assert.assertTrue(b66 == true);
        org.junit.Assert.assertTrue(i67 == 0);
        org.junit.Assert.assertTrue(i70 == 0);
        org.junit.Assert.assertTrue(i71 == 0);
        org.junit.Assert.assertTrue(i72 == 0);
    }

    @Test
    public void test856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test856");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b7 = fixedOrderComparator0.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array14);
        java.lang.Object[] obj_array17 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        boolean b19 = fixedOrderComparator16.add((java.lang.Object) obj_array17);
        boolean b20 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator16);
        java.lang.Object[] obj_array21 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        boolean b23 = fixedOrderComparator16.add((java.lang.Object) obj_array21);
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        fixedOrderComparator31.setUnknownObjectBehavior(0);
        boolean b35 = fixedOrderComparator31.add((java.lang.Object) 1.0f);
        int i36 = fixedOrderComparator31.getUnknownObjectBehavior();
        java.lang.Object[] obj_array43 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array43);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array54);
        int i60 = fixedOrderComparator31.compare((java.lang.Object) fixedOrderComparator47, (java.lang.Object) fixedOrderComparator59);
        boolean b61 = fixedOrderComparator16.add((java.lang.Object) fixedOrderComparator31);
        boolean b62 = fixedOrderComparator31.isLocked();
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertTrue(i36 == 0);
        org.junit.Assert.assertNotNull(obj_array43);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertTrue(i60 == 0);
        org.junit.Assert.assertTrue(b61 == true);
        org.junit.Assert.assertTrue(b62 == true);
    }

    @Test
    public void test857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test857");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b13 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        fixedOrderComparator7.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b31 = fixedOrderComparator7.add((java.lang.Object) obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b38 = fixedOrderComparator37.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(b38 == false);
    }

    @Test
    public void test858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test858");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b17 = fixedOrderComparator16.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b17 == false);
    }

    @Test
    public void test859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test859");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        int i11 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object obj13 = null;
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) 10.0f, obj13);
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator();
        int i16 = fixedOrderComparator15.getUnknownObjectBehavior();
        java.lang.Object[] obj_array23 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array23);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array23);
        boolean b28 = fixedOrderComparator15.add((java.lang.Object) fixedOrderComparator27);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b31 = fixedOrderComparator15.isLocked();
        int i33 = fixedOrderComparator8.compare((java.lang.Object) fixedOrderComparator15, (java.lang.Object) 2);
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        boolean b43 = fixedOrderComparator41.add((java.lang.Object) (-1.0f));
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        java.lang.Object[] obj_array51 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array51);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array51);
        fixedOrderComparator53.setUnknownObjectBehavior((int) (short) 0);
        int i56 = fixedOrderComparator53.getUnknownObjectBehavior();
        boolean b57 = fixedOrderComparator41.add((java.lang.Object) i56);
        boolean b58 = fixedOrderComparator15.add((java.lang.Object) b57);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator();
        int i60 = fixedOrderComparator59.getUnknownObjectBehavior();
        java.lang.Object[] obj_array67 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array67);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array67);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array67);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array67);
        boolean b72 = fixedOrderComparator59.add((java.lang.Object) fixedOrderComparator71);
        fixedOrderComparator59.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array81 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array81);
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator(obj_array81);
        collections.comparators.FixedOrderComparator fixedOrderComparator84 = new collections.comparators.FixedOrderComparator(obj_array81);
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array81);
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array81);
        collections.comparators.FixedOrderComparator fixedOrderComparator87 = new collections.comparators.FixedOrderComparator(obj_array81);
        java.lang.Object[] obj_array88 = new java.lang.Object[] { fixedOrderComparator59, obj_array81 };
        collections.comparators.FixedOrderComparator fixedOrderComparator89 = new collections.comparators.FixedOrderComparator(obj_array81);
        boolean b90 = fixedOrderComparator89.isLocked();
        boolean b91 = fixedOrderComparator15.add((java.lang.Object) fixedOrderComparator89);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i16 == 2);
        org.junit.Assert.assertNotNull(obj_array23);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertTrue(i33 == 0);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertTrue(i44 == 2);
        org.junit.Assert.assertNotNull(obj_array51);
        org.junit.Assert.assertTrue(i56 == 0);
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertTrue(i60 == 2);
        org.junit.Assert.assertNotNull(obj_array67);
        org.junit.Assert.assertTrue(b72 == true);
        org.junit.Assert.assertNotNull(obj_array81);
        org.junit.Assert.assertNotNull(obj_array88);
        org.junit.Assert.assertTrue(b90 == false);
        org.junit.Assert.assertTrue(b91 == true);
    }

    @Test
    public void test860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test860");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i10 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b11 = fixedOrderComparator9.isLocked();
        int i12 = fixedOrderComparator9.getUnknownObjectBehavior();
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array19);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array19);
        boolean b24 = fixedOrderComparator9.add((java.lang.Object) fixedOrderComparator23);
        boolean b25 = fixedOrderComparator9.isLocked();
        int i26 = fixedOrderComparator9.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator27.setUnknownObjectBehavior(0);
        int i30 = fixedOrderComparator27.getUnknownObjectBehavior();
        java.lang.Object[] obj_array37 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array37);
        java.lang.Object[] obj_array47 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array47);
        java.lang.Object[] obj_array56 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array56);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array56);
        fixedOrderComparator58.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array67 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array67);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array67);
        int i71 = fixedOrderComparator58.compare((java.lang.Object) fixedOrderComparator69, (java.lang.Object) (-1.0d));
        boolean b72 = fixedOrderComparator49.add((java.lang.Object) fixedOrderComparator58);
        boolean b73 = fixedOrderComparator58.isLocked();
        int i74 = fixedOrderComparator58.getUnknownObjectBehavior();
        int i75 = fixedOrderComparator27.compare((java.lang.Object) obj_array37, (java.lang.Object) fixedOrderComparator58);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array37);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array37);
        boolean b82 = fixedOrderComparator9.add((java.lang.Object) fixedOrderComparator81);
        int i83 = fixedOrderComparator9.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i10 == 2);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertTrue(i12 == 2);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertTrue(i26 == 2);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertNotNull(obj_array37);
        org.junit.Assert.assertNotNull(obj_array47);
        org.junit.Assert.assertNotNull(obj_array56);
        org.junit.Assert.assertNotNull(obj_array67);
        org.junit.Assert.assertTrue(i71 == 0);
        org.junit.Assert.assertTrue(b72 == true);
        org.junit.Assert.assertTrue(b73 == true);
        org.junit.Assert.assertTrue(i74 == 0);
        org.junit.Assert.assertTrue(i75 == 0);
        org.junit.Assert.assertTrue(b82 == true);
        org.junit.Assert.assertTrue(i83 == 2);
    }

    @Test
    public void test861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test861");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b12 = fixedOrderComparator11.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b12 == false);
    }

    @Test
    public void test862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test862");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        try {
            fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
    }

    @Test
    public void test863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test863");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        java.lang.Object obj12 = null;
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        int i26 = fixedOrderComparator7.compare(obj12, (java.lang.Object) i25);
        int i27 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b28 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array35 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array35);
        fixedOrderComparator37.setUnknownObjectBehavior((int) (short) 0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i44 = fixedOrderComparator41.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator7.compare((java.lang.Object) i40, (java.lang.Object) fixedOrderComparator41);
        java.lang.Object[] obj_array53 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array53);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array53);
        fixedOrderComparator55.setUnknownObjectBehavior((int) (short) 0);
        int i58 = fixedOrderComparator55.getUnknownObjectBehavior();
        int i59 = fixedOrderComparator41.compare((java.lang.Object) (byte) 100, (java.lang.Object) fixedOrderComparator55);
        java.lang.Object[] obj_array66 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array66);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array66);
        fixedOrderComparator68.setUnknownObjectBehavior((int) (short) 0);
        int i71 = fixedOrderComparator68.getUnknownObjectBehavior();
        java.lang.Object obj73 = null;
        boolean b74 = fixedOrderComparator68.addAsEqual((java.lang.Object) 10.0f, obj73);
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator();
        int i76 = fixedOrderComparator75.getUnknownObjectBehavior();
        java.lang.Object[] obj_array83 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator84 = new collections.comparators.FixedOrderComparator(obj_array83);
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array83);
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array83);
        collections.comparators.FixedOrderComparator fixedOrderComparator87 = new collections.comparators.FixedOrderComparator(obj_array83);
        boolean b88 = fixedOrderComparator75.add((java.lang.Object) fixedOrderComparator87);
        fixedOrderComparator75.setUnknownObjectBehavior(0);
        boolean b91 = fixedOrderComparator75.isLocked();
        int i93 = fixedOrderComparator68.compare((java.lang.Object) fixedOrderComparator75, (java.lang.Object) 2);
        collections.comparators.FixedOrderComparator fixedOrderComparator94 = new collections.comparators.FixedOrderComparator();
        int i95 = fixedOrderComparator94.getUnknownObjectBehavior();
        boolean b96 = fixedOrderComparator75.add((java.lang.Object) i95);
        boolean b97 = fixedOrderComparator55.add((java.lang.Object) b96);
        boolean b98 = fixedOrderComparator55.isLocked();
        boolean b99 = fixedOrderComparator55.isLocked();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(i26 == (-1));
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array35);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 1);
        org.junit.Assert.assertNotNull(obj_array53);
        org.junit.Assert.assertTrue(i58 == 0);
        org.junit.Assert.assertTrue(i59 == 0);
        org.junit.Assert.assertNotNull(obj_array66);
        org.junit.Assert.assertTrue(i71 == 0);
        org.junit.Assert.assertTrue(b74 == true);
        org.junit.Assert.assertTrue(i76 == 2);
        org.junit.Assert.assertNotNull(obj_array83);
        org.junit.Assert.assertTrue(b88 == true);
        org.junit.Assert.assertTrue(b91 == false);
        org.junit.Assert.assertTrue(i93 == 0);
        org.junit.Assert.assertTrue(i95 == 2);
        org.junit.Assert.assertTrue(b96 == true);
        org.junit.Assert.assertTrue(b97 == true);
        org.junit.Assert.assertTrue(b98 == false);
        org.junit.Assert.assertTrue(b99 == false);
    }

    @Test
    public void test864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test864");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b14 = fixedOrderComparator13.isLocked();
        fixedOrderComparator13.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array23 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array23);
        fixedOrderComparator24.setUnknownObjectBehavior(0);
        boolean b28 = fixedOrderComparator24.add((java.lang.Object) 1.0f);
        java.lang.Object obj29 = null;
        java.lang.Object[] obj_array36 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        fixedOrderComparator37.setUnknownObjectBehavior(0);
        boolean b41 = fixedOrderComparator37.add((java.lang.Object) 1.0f);
        int i42 = fixedOrderComparator37.getUnknownObjectBehavior();
        int i43 = fixedOrderComparator24.compare(obj29, (java.lang.Object) i42);
        int i44 = fixedOrderComparator24.getUnknownObjectBehavior();
        boolean b45 = fixedOrderComparator24.isLocked();
        java.lang.Object[] obj_array52 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array52);
        fixedOrderComparator54.setUnknownObjectBehavior((int) (short) 0);
        int i57 = fixedOrderComparator54.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator58.setUnknownObjectBehavior(0);
        int i61 = fixedOrderComparator58.getUnknownObjectBehavior();
        int i62 = fixedOrderComparator24.compare((java.lang.Object) i57, (java.lang.Object) fixedOrderComparator58);
        int i63 = fixedOrderComparator24.getUnknownObjectBehavior();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Object obj65 = null;
        int i66 = fixedOrderComparator24.compare(obj64, obj65);
        java.lang.Object[] obj_array73 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator74 = new collections.comparators.FixedOrderComparator(obj_array73);
        java.lang.Object[] obj_array81 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array81);
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator(obj_array81);
        collections.comparators.FixedOrderComparator fixedOrderComparator84 = new collections.comparators.FixedOrderComparator(obj_array81);
        int i85 = fixedOrderComparator24.compare((java.lang.Object) obj_array73, (java.lang.Object) fixedOrderComparator84);
        boolean b86 = fixedOrderComparator24.isLocked();
        int i87 = fixedOrderComparator24.getUnknownObjectBehavior();
        java.lang.Object obj88 = null;
        try {
            boolean b89 = fixedOrderComparator13.addAsEqual((java.lang.Object) fixedOrderComparator24, obj88);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertNotNull(obj_array23);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertTrue(i42 == 0);
        org.junit.Assert.assertTrue(i43 == (-1));
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertNotNull(obj_array52);
        org.junit.Assert.assertTrue(i57 == 0);
        org.junit.Assert.assertTrue(i61 == 0);
        org.junit.Assert.assertTrue(i62 == 1);
        org.junit.Assert.assertTrue(i63 == 0);
        org.junit.Assert.assertTrue(i66 == 0);
        org.junit.Assert.assertNotNull(obj_array73);
        org.junit.Assert.assertNotNull(obj_array81);
        org.junit.Assert.assertTrue(i85 == 0);
        org.junit.Assert.assertTrue(b86 == true);
        org.junit.Assert.assertTrue(i87 == 0);
    }

    @Test
    public void test865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test865");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator9.setUnknownObjectBehavior(0);
        int i12 = fixedOrderComparator9.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) i12, (java.lang.Object) (short) 1);
        int i15 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        fixedOrderComparator24.setUnknownObjectBehavior((int) (short) 0);
        int i27 = fixedOrderComparator24.getUnknownObjectBehavior();
        int i28 = fixedOrderComparator24.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        int i32 = fixedOrderComparator29.getUnknownObjectBehavior();
        fixedOrderComparator29.setUnknownObjectBehavior((int) (byte) 0);
        int i35 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator24.add((java.lang.Object) i35);
        boolean b37 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator24);
        java.lang.Object[] obj_array44 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array44);
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array44);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array44);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array44);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array44);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array44);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array44);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array44);
        java.lang.Object[] obj_array59 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array59);
        boolean b66 = fixedOrderComparator52.add((java.lang.Object) obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array59);
        java.lang.Object[] obj_array74 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array74);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array74);
        boolean b77 = fixedOrderComparator67.add((java.lang.Object) obj_array74);
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator(obj_array74);
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array74);
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array74);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array74);
        boolean b82 = fixedOrderComparator24.add((java.lang.Object) fixedOrderComparator81);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i15 == 2);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(i35 == 0);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertNotNull(obj_array44);
        org.junit.Assert.assertNotNull(obj_array59);
        org.junit.Assert.assertTrue(b66 == true);
        org.junit.Assert.assertNotNull(obj_array74);
        org.junit.Assert.assertTrue(b77 == true);
        org.junit.Assert.assertTrue(b82 == true);
    }

    @Test
    public void test866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test866");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array9 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array9);
        boolean b11 = fixedOrderComparator8.add((java.lang.Object) obj_array9);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array9);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array9);
        java.lang.Object obj14 = null;
        boolean b15 = fixedOrderComparator13.add(obj14);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        fixedOrderComparator24.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator24.setUnknownObjectBehavior(2);
        int i29 = fixedOrderComparator24.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator30.setUnknownObjectBehavior(0);
        int i33 = fixedOrderComparator30.getUnknownObjectBehavior();
        fixedOrderComparator30.setUnknownObjectBehavior((int) (byte) 0);
        boolean b36 = fixedOrderComparator24.add((java.lang.Object) fixedOrderComparator30);
        int i37 = fixedOrderComparator24.getUnknownObjectBehavior();
        boolean b38 = fixedOrderComparator13.add((java.lang.Object) fixedOrderComparator24);
        java.lang.Object[] obj_array45 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array45);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array45);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator48.setUnknownObjectBehavior(0);
        int i51 = fixedOrderComparator48.getUnknownObjectBehavior();
        boolean b53 = fixedOrderComparator47.addAsEqual((java.lang.Object) i51, (java.lang.Object) (short) 1);
        int i54 = fixedOrderComparator47.getUnknownObjectBehavior();
        java.lang.Object[] obj_array61 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array61);
        boolean b63 = fixedOrderComparator62.isLocked();
        boolean b64 = fixedOrderComparator47.add((java.lang.Object) fixedOrderComparator62);
        int i65 = fixedOrderComparator47.getUnknownObjectBehavior();
        boolean b66 = fixedOrderComparator47.isLocked();
        int i67 = fixedOrderComparator47.getUnknownObjectBehavior();
        int i68 = fixedOrderComparator47.getUnknownObjectBehavior();
        boolean b69 = fixedOrderComparator13.add((java.lang.Object) i68);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array9);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b15 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(i29 == 2);
        org.junit.Assert.assertTrue(i33 == 0);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(i37 == 2);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertNotNull(obj_array45);
        org.junit.Assert.assertTrue(i51 == 0);
        org.junit.Assert.assertTrue(b53 == true);
        org.junit.Assert.assertTrue(i54 == 2);
        org.junit.Assert.assertNotNull(obj_array61);
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue(i65 == 2);
        org.junit.Assert.assertTrue(b66 == false);
        org.junit.Assert.assertTrue(i67 == 2);
        org.junit.Assert.assertTrue(i68 == 2);
        org.junit.Assert.assertTrue(b69 == true);
    }

    @Test
    public void test867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test867");
        java.lang.Object[] obj_array0 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator1 = new collections.comparators.FixedOrderComparator(obj_array0);
        java.lang.Object[] obj_array2 = new java.lang.Object[] { fixedOrderComparator1 };
        collections.comparators.FixedOrderComparator fixedOrderComparator3 = new collections.comparators.FixedOrderComparator(obj_array2);
        collections.comparators.FixedOrderComparator fixedOrderComparator4 = new collections.comparators.FixedOrderComparator(obj_array2);
        boolean b5 = fixedOrderComparator4.isLocked();
        int i6 = fixedOrderComparator4.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b10 = fixedOrderComparator7.isLocked();
        boolean b11 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array18 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        fixedOrderComparator19.setUnknownObjectBehavior(0);
        boolean b23 = fixedOrderComparator19.add((java.lang.Object) 1.0f);
        boolean b25 = fixedOrderComparator19.add((java.lang.Object) 1.0f);
        int i27 = fixedOrderComparator7.compare((java.lang.Object) fixedOrderComparator19, (java.lang.Object) 1.0d);
        fixedOrderComparator19.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array36 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator();
        int i42 = fixedOrderComparator41.getUnknownObjectBehavior();
        boolean b43 = fixedOrderComparator41.isLocked();
        fixedOrderComparator41.setUnknownObjectBehavior(0);
        int i46 = fixedOrderComparator19.compare((java.lang.Object) obj_array36, (java.lang.Object) fixedOrderComparator41);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array36);
        boolean b48 = fixedOrderComparator47.isLocked();
        java.lang.Object[] obj_array55 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array55);
        boolean b61 = fixedOrderComparator47.add((java.lang.Object) fixedOrderComparator60);
        boolean b62 = fixedOrderComparator4.add((java.lang.Object) fixedOrderComparator47);
        org.junit.Assert.assertNotNull(obj_array0);
        org.junit.Assert.assertNotNull(obj_array2);
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue(i6 == 2);
        org.junit.Assert.assertTrue(b10 == false);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertTrue(i27 == 0);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertTrue(i42 == 2);
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertTrue(b48 == false);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(b61 == true);
        org.junit.Assert.assertTrue(b62 == true);
    }

    @Test
    public void test868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test868");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator8.setUnknownObjectBehavior(2);
        boolean b13 = fixedOrderComparator8.isLocked();
        boolean b14 = fixedOrderComparator8.isLocked();
        fixedOrderComparator8.setUnknownObjectBehavior(1);
        int i17 = fixedOrderComparator8.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertTrue(i17 == 1);
    }

    @Test
    public void test869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test869");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        try {
            fixedOrderComparator7.setUnknownObjectBehavior((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
    }

    @Test
    public void test870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test870");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        boolean b14 = fixedOrderComparator12.isLocked();
        boolean b15 = fixedOrderComparator12.isLocked();
        java.lang.Object[] obj_array22 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        fixedOrderComparator31.setUnknownObjectBehavior(0);
        boolean b34 = fixedOrderComparator23.add((java.lang.Object) 0);
        fixedOrderComparator23.setUnknownObjectBehavior((int) (short) 0);
        boolean b37 = fixedOrderComparator23.isLocked();
        boolean b38 = fixedOrderComparator23.isLocked();
        boolean b39 = fixedOrderComparator23.isLocked();
        int i40 = fixedOrderComparator23.getUnknownObjectBehavior();
        int i41 = fixedOrderComparator23.getUnknownObjectBehavior();
        java.lang.Object[] obj_array48 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array48);
        fixedOrderComparator49.setUnknownObjectBehavior(0);
        boolean b53 = fixedOrderComparator49.add((java.lang.Object) 1.0f);
        java.lang.Object obj54 = null;
        java.lang.Object[] obj_array61 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array61);
        fixedOrderComparator62.setUnknownObjectBehavior(0);
        boolean b66 = fixedOrderComparator62.add((java.lang.Object) 1.0f);
        int i67 = fixedOrderComparator62.getUnknownObjectBehavior();
        int i68 = fixedOrderComparator49.compare(obj54, (java.lang.Object) i67);
        java.lang.Object[] obj_array75 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array75);
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array75);
        java.lang.Object[] obj_array78 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array78);
        boolean b80 = fixedOrderComparator77.add((java.lang.Object) obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator(obj_array78);
        boolean b84 = fixedOrderComparator23.addAsEqual((java.lang.Object) i67, (java.lang.Object) obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array78);
        boolean b87 = fixedOrderComparator12.add((java.lang.Object) obj_array78);
        boolean b89 = fixedOrderComparator12.add((java.lang.Object) "hi!");
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertTrue(b15 == false);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertTrue(i41 == 0);
        org.junit.Assert.assertNotNull(obj_array48);
        org.junit.Assert.assertTrue(b53 == true);
        org.junit.Assert.assertNotNull(obj_array61);
        org.junit.Assert.assertTrue(b66 == true);
        org.junit.Assert.assertTrue(i67 == 0);
        org.junit.Assert.assertTrue(i68 == (-1));
        org.junit.Assert.assertNotNull(obj_array75);
        org.junit.Assert.assertNotNull(obj_array78);
        org.junit.Assert.assertTrue(b80 == true);
        org.junit.Assert.assertTrue(b84 == true);
        org.junit.Assert.assertTrue(b87 == true);
        org.junit.Assert.assertTrue(b89 == true);
    }

    @Test
    public void test871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test871");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        int i12 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i13 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i14 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array21 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array21);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array21);
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array30);
        fixedOrderComparator32.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array41 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array41);
        int i45 = fixedOrderComparator32.compare((java.lang.Object) fixedOrderComparator43, (java.lang.Object) (-1.0d));
        boolean b46 = fixedOrderComparator23.add((java.lang.Object) fixedOrderComparator32);
        java.lang.Object[] obj_array53 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array53);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array53);
        boolean b56 = fixedOrderComparator55.isLocked();
        boolean b57 = fixedOrderComparator55.isLocked();
        int i58 = fixedOrderComparator55.getUnknownObjectBehavior();
        boolean b59 = fixedOrderComparator23.add((java.lang.Object) fixedOrderComparator55);
        boolean b60 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator23);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(i14 == 0);
        org.junit.Assert.assertNotNull(obj_array21);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertTrue(i45 == 0);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertNotNull(obj_array53);
        org.junit.Assert.assertTrue(b56 == false);
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertTrue(i58 == 2);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertTrue(b60 == true);
    }

    @Test
    public void test872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test872");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        int i10 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        fixedOrderComparator19.setUnknownObjectBehavior((int) (short) 0);
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        boolean b23 = fixedOrderComparator7.add((java.lang.Object) i22);
        int i24 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i25 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b26 = fixedOrderComparator7.isLocked();
        try {
            fixedOrderComparator7.setUnknownObjectBehavior((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i10 == 2);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue(i24 == 2);
        org.junit.Assert.assertTrue(i25 == 2);
        org.junit.Assert.assertTrue(b26 == false);
    }

    @Test
    public void test873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test873");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj18 = null;
        int i19 = fixedOrderComparator10.compare((java.lang.Object) 1.0d, obj18);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        int i32 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b34 = fixedOrderComparator28.addAsEqual((java.lang.Object) i32, (java.lang.Object) (short) 1);
        int i35 = fixedOrderComparator28.getUnknownObjectBehavior();
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        boolean b44 = fixedOrderComparator43.isLocked();
        boolean b45 = fixedOrderComparator28.add((java.lang.Object) fixedOrderComparator43);
        int i47 = fixedOrderComparator10.compare((java.lang.Object) fixedOrderComparator28, (java.lang.Object) 1L);
        boolean b48 = fixedOrderComparator28.isLocked();
        try {
            fixedOrderComparator28.setUnknownObjectBehavior((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(b44 == false);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b48 == false);
    }

    @Test
    public void test874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test874");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        int i21 = fixedOrderComparator8.compare((java.lang.Object) fixedOrderComparator19, (java.lang.Object) (-1.0d));
        boolean b22 = fixedOrderComparator19.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator();
        int i24 = fixedOrderComparator23.getUnknownObjectBehavior();
        boolean b25 = fixedOrderComparator23.isLocked();
        fixedOrderComparator23.setUnknownObjectBehavior(0);
        boolean b29 = fixedOrderComparator23.add((java.lang.Object) 10L);
        boolean b30 = fixedOrderComparator23.isLocked();
        boolean b31 = fixedOrderComparator23.isLocked();
        java.lang.Object[] obj_array38 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array38);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array38);
        boolean b46 = fixedOrderComparator23.add((java.lang.Object) obj_array38);
        boolean b47 = fixedOrderComparator19.add((java.lang.Object) fixedOrderComparator23);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(i24 == 2);
        org.junit.Assert.assertTrue(b25 == false);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertTrue(b30 == false);
        org.junit.Assert.assertTrue(b31 == false);
        org.junit.Assert.assertNotNull(obj_array38);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(b47 == true);
    }

    @Test
    public void test875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test875");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator3 = new collections.comparators.FixedOrderComparator();
        int i4 = fixedOrderComparator3.getUnknownObjectBehavior();
        boolean b5 = fixedOrderComparator3.isLocked();
        boolean b6 = fixedOrderComparator0.add((java.lang.Object) b5);
        boolean b7 = fixedOrderComparator0.isLocked();
        int i8 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b9 = fixedOrderComparator0.isLocked();
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(i4 == 2);
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertTrue(i8 == 2);
        org.junit.Assert.assertTrue(b9 == false);
    }

    @Test
    public void test876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test876");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator8.setUnknownObjectBehavior(2);
        int i13 = fixedOrderComparator8.getUnknownObjectBehavior();
        int i14 = fixedOrderComparator8.getUnknownObjectBehavior();
        boolean b15 = fixedOrderComparator8.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator16.setUnknownObjectBehavior(0);
        int i19 = fixedOrderComparator16.getUnknownObjectBehavior();
        fixedOrderComparator16.setUnknownObjectBehavior((int) (byte) 0);
        boolean b22 = fixedOrderComparator16.isLocked();
        int i23 = fixedOrderComparator16.getUnknownObjectBehavior();
        int i24 = fixedOrderComparator16.getUnknownObjectBehavior();
        int i25 = fixedOrderComparator16.getUnknownObjectBehavior();
        fixedOrderComparator16.setUnknownObjectBehavior((int) (byte) 1);
        boolean b28 = fixedOrderComparator8.add((java.lang.Object) (byte) 1);
        int i29 = fixedOrderComparator8.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i13 == 2);
        org.junit.Assert.assertTrue(i14 == 2);
        org.junit.Assert.assertTrue(b15 == false);
        org.junit.Assert.assertTrue(i19 == 0);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(i23 == 0);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(i29 == 2);
    }

    @Test
    public void test877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test877");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        boolean b22 = fixedOrderComparator20.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator23.setUnknownObjectBehavior(0);
        int i26 = fixedOrderComparator23.getUnknownObjectBehavior();
        fixedOrderComparator23.setUnknownObjectBehavior((int) (byte) 0);
        boolean b29 = fixedOrderComparator20.add((java.lang.Object) fixedOrderComparator23);
        java.lang.Object obj31 = null;
        int i32 = fixedOrderComparator23.compare((java.lang.Object) 1.0d, obj31);
        boolean b33 = fixedOrderComparator23.isLocked();
        boolean b34 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator23);
        java.lang.Object[] obj_array41 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array41);
        fixedOrderComparator43.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array52 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array52);
        int i56 = fixedOrderComparator43.compare((java.lang.Object) fixedOrderComparator54, (java.lang.Object) (-1.0d));
        boolean b57 = fixedOrderComparator54.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator58.setUnknownObjectBehavior(0);
        boolean b61 = fixedOrderComparator58.isLocked();
        java.lang.Object[] obj_array68 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array68);
        fixedOrderComparator69.setUnknownObjectBehavior(0);
        boolean b73 = fixedOrderComparator69.add((java.lang.Object) 1.0f);
        boolean b75 = fixedOrderComparator69.add((java.lang.Object) 1.0f);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator();
        boolean b77 = fixedOrderComparator76.isLocked();
        boolean b79 = fixedOrderComparator76.add((java.lang.Object) 10.0d);
        int i80 = fixedOrderComparator58.compare((java.lang.Object) b75, (java.lang.Object) fixedOrderComparator76);
        boolean b81 = fixedOrderComparator58.isLocked();
        int i82 = fixedOrderComparator10.compare((java.lang.Object) b57, (java.lang.Object) fixedOrderComparator58);
        int i83 = fixedOrderComparator10.getUnknownObjectBehavior();
        boolean b84 = fixedOrderComparator9.add((java.lang.Object) fixedOrderComparator10);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue(i26 == 0);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b33 == true);
        org.junit.Assert.assertTrue(b34 == true);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertNotNull(obj_array52);
        org.junit.Assert.assertTrue(i56 == 0);
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertNotNull(obj_array68);
        org.junit.Assert.assertTrue(b73 == true);
        org.junit.Assert.assertTrue(b75 == false);
        org.junit.Assert.assertTrue(b77 == false);
        org.junit.Assert.assertTrue(b79 == true);
        org.junit.Assert.assertTrue(i80 == 0);
        org.junit.Assert.assertTrue(b81 == true);
        org.junit.Assert.assertTrue(i82 == 0);
        org.junit.Assert.assertTrue(i83 == 0);
        org.junit.Assert.assertTrue(b84 == true);
    }

    @Test
    public void test878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test878");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator3 = new collections.comparators.FixedOrderComparator();
        int i4 = fixedOrderComparator3.getUnknownObjectBehavior();
        boolean b5 = fixedOrderComparator3.isLocked();
        boolean b6 = fixedOrderComparator0.add((java.lang.Object) b5);
        int i7 = fixedOrderComparator0.getUnknownObjectBehavior();
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(i4 == 2);
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertTrue(i7 == 2);
    }

    @Test
    public void test879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test879");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        java.lang.Object[] obj_array27 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array27);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array27);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array27);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array27);
        int i32 = fixedOrderComparator31.getUnknownObjectBehavior();
        boolean b33 = fixedOrderComparator31.isLocked();
        fixedOrderComparator31.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array42 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array42);
        java.lang.Object[] obj_array57 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array57);
        boolean b64 = fixedOrderComparator50.add((java.lang.Object) obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array57);
        java.lang.Object obj66 = null;
        boolean b67 = fixedOrderComparator65.add(obj66);
        int i68 = fixedOrderComparator12.compare((java.lang.Object) (short) 0, (java.lang.Object) fixedOrderComparator65);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertNotNull(obj_array27);
        org.junit.Assert.assertTrue(i32 == 2);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertNotNull(obj_array57);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue(b67 == true);
        org.junit.Assert.assertTrue(i68 == 1);
    }

    @Test
    public void test880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test880");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator0.isLocked();
        java.lang.Object obj17 = null;
        boolean b18 = fixedOrderComparator0.add(obj17);
        java.lang.Object[] obj_array25 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array25);
        boolean b28 = fixedOrderComparator26.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator29.setUnknownObjectBehavior(0);
        int i32 = fixedOrderComparator29.getUnknownObjectBehavior();
        fixedOrderComparator29.setUnknownObjectBehavior((int) (byte) 0);
        boolean b35 = fixedOrderComparator26.add((java.lang.Object) fixedOrderComparator29);
        java.lang.Object obj36 = null;
        boolean b37 = fixedOrderComparator26.add(obj36);
        java.lang.Object[] obj_array44 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array44);
        fixedOrderComparator45.setUnknownObjectBehavior(0);
        boolean b49 = fixedOrderComparator45.add((java.lang.Object) 1.0f);
        boolean b51 = fixedOrderComparator45.add((java.lang.Object) 1.0f);
        boolean b52 = fixedOrderComparator45.isLocked();
        boolean b53 = fixedOrderComparator45.isLocked();
        boolean b54 = fixedOrderComparator26.add((java.lang.Object) fixedOrderComparator45);
        java.lang.Object[] obj_array61 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array61);
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array61);
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array61);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array61);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array61);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array61);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array61);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array61);
        java.lang.Object[] obj_array76 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array76);
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator(obj_array76);
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array76);
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array76);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array76);
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array76);
        boolean b83 = fixedOrderComparator69.add((java.lang.Object) obj_array76);
        boolean b84 = fixedOrderComparator69.isLocked();
        try {
            boolean b85 = fixedOrderComparator0.addAsEqual((java.lang.Object) b54, (java.lang.Object) fixedOrderComparator69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertNotNull(obj_array25);
        org.junit.Assert.assertTrue(b28 == true);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertNotNull(obj_array44);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(b51 == false);
        org.junit.Assert.assertTrue(b52 == false);
        org.junit.Assert.assertTrue(b53 == false);
        org.junit.Assert.assertTrue(b54 == true);
        org.junit.Assert.assertNotNull(obj_array61);
        org.junit.Assert.assertNotNull(obj_array76);
        org.junit.Assert.assertTrue(b83 == true);
        org.junit.Assert.assertTrue(b84 == false);
    }

    @Test
    public void test881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test881");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        int i21 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b22 = fixedOrderComparator0.isLocked();
        int i23 = fixedOrderComparator0.getUnknownObjectBehavior();
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue(i23 == 0);
    }

    @Test
    public void test882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test882");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator(obj_array6);
        try {
            fixedOrderComparator14.setUnknownObjectBehavior((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
    }

    @Test
    public void test883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test883");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        boolean b21 = fixedOrderComparator7.isLocked();
        boolean b22 = fixedOrderComparator7.isLocked();
        boolean b23 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array30 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array30);
        int i35 = fixedOrderComparator34.getUnknownObjectBehavior();
        int i36 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b37 = fixedOrderComparator34.isLocked();
        int i38 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b39 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator34);
        boolean b40 = fixedOrderComparator34.isLocked();
        fixedOrderComparator34.setUnknownObjectBehavior((int) (byte) 0);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator43.setUnknownObjectBehavior(0);
        int i46 = fixedOrderComparator43.getUnknownObjectBehavior();
        fixedOrderComparator43.setUnknownObjectBehavior((int) (byte) 0);
        boolean b49 = fixedOrderComparator43.isLocked();
        int i50 = fixedOrderComparator43.getUnknownObjectBehavior();
        int i51 = fixedOrderComparator43.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator();
        int i53 = fixedOrderComparator52.getUnknownObjectBehavior();
        boolean b54 = fixedOrderComparator52.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator();
        int i56 = fixedOrderComparator55.getUnknownObjectBehavior();
        boolean b57 = fixedOrderComparator55.isLocked();
        boolean b58 = fixedOrderComparator52.add((java.lang.Object) b57);
        boolean b59 = fixedOrderComparator52.isLocked();
        int i60 = fixedOrderComparator52.getUnknownObjectBehavior();
        int i61 = fixedOrderComparator52.getUnknownObjectBehavior();
        boolean b62 = fixedOrderComparator34.addAsEqual((java.lang.Object) i51, (java.lang.Object) fixedOrderComparator52);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(i36 == 2);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(i38 == 2);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertTrue(b49 == false);
        org.junit.Assert.assertTrue(i50 == 0);
        org.junit.Assert.assertTrue(i51 == 0);
        org.junit.Assert.assertTrue(i53 == 2);
        org.junit.Assert.assertTrue(b54 == false);
        org.junit.Assert.assertTrue(i56 == 2);
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertTrue(b59 == false);
        org.junit.Assert.assertTrue(i60 == 2);
        org.junit.Assert.assertTrue(i61 == 2);
        org.junit.Assert.assertTrue(b62 == true);
    }

    @Test
    public void test884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test884");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        boolean b21 = fixedOrderComparator7.isLocked();
        boolean b22 = fixedOrderComparator7.isLocked();
        boolean b23 = fixedOrderComparator7.isLocked();
        boolean b24 = fixedOrderComparator7.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator();
        int i26 = fixedOrderComparator25.getUnknownObjectBehavior();
        java.lang.Object[] obj_array33 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array33);
        boolean b38 = fixedOrderComparator25.add((java.lang.Object) fixedOrderComparator37);
        fixedOrderComparator25.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array47 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array47);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { fixedOrderComparator25, obj_array47 };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array47);
        int i59 = fixedOrderComparator58.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator();
        boolean b61 = fixedOrderComparator58.add((java.lang.Object) fixedOrderComparator60);
        boolean b62 = fixedOrderComparator60.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator();
        int i64 = fixedOrderComparator63.getUnknownObjectBehavior();
        boolean b65 = fixedOrderComparator63.isLocked();
        fixedOrderComparator63.setUnknownObjectBehavior(0);
        boolean b69 = fixedOrderComparator63.add((java.lang.Object) 10L);
        boolean b70 = fixedOrderComparator63.isLocked();
        boolean b71 = fixedOrderComparator63.isLocked();
        java.lang.Object[] obj_array78 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator80 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator84 = new collections.comparators.FixedOrderComparator(obj_array78);
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array78);
        boolean b86 = fixedOrderComparator63.add((java.lang.Object) obj_array78);
        int i87 = fixedOrderComparator7.compare((java.lang.Object) b62, (java.lang.Object) fixedOrderComparator63);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(i26 == 2);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertNotNull(obj_array47);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertTrue(i59 == 2);
        org.junit.Assert.assertTrue(b61 == true);
        org.junit.Assert.assertTrue(b62 == false);
        org.junit.Assert.assertTrue(i64 == 2);
        org.junit.Assert.assertTrue(b65 == false);
        org.junit.Assert.assertTrue(b69 == true);
        org.junit.Assert.assertTrue(b70 == false);
        org.junit.Assert.assertTrue(b71 == false);
        org.junit.Assert.assertNotNull(obj_array78);
        org.junit.Assert.assertTrue(b86 == true);
        org.junit.Assert.assertTrue(i87 == 0);
    }

    @Test
    public void test885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test885");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        boolean b21 = fixedOrderComparator7.isLocked();
        boolean b22 = fixedOrderComparator7.isLocked();
        boolean b23 = fixedOrderComparator7.isLocked();
        int i24 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i25 = fixedOrderComparator7.getUnknownObjectBehavior();
        fixedOrderComparator7.setUnknownObjectBehavior(2);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertTrue(i25 == 0);
    }

    @Test
    public void test886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test886");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array15 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array15);
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array15);
        fixedOrderComparator17.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array26);
        int i30 = fixedOrderComparator17.compare((java.lang.Object) fixedOrderComparator28, (java.lang.Object) (-1.0d));
        boolean b31 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator17);
        boolean b32 = fixedOrderComparator8.isLocked();
        boolean b33 = fixedOrderComparator8.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        int i37 = fixedOrderComparator34.getUnknownObjectBehavior();
        java.lang.Object[] obj_array44 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array44);
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array44);
        collections.comparators.FixedOrderComparator fixedOrderComparator47 = new collections.comparators.FixedOrderComparator(obj_array44);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array54);
        java.lang.Object[] obj_array63 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array63);
        fixedOrderComparator65.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array74 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array74);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array74);
        int i78 = fixedOrderComparator65.compare((java.lang.Object) fixedOrderComparator76, (java.lang.Object) (-1.0d));
        boolean b79 = fixedOrderComparator56.add((java.lang.Object) fixedOrderComparator65);
        boolean b80 = fixedOrderComparator65.isLocked();
        int i81 = fixedOrderComparator65.getUnknownObjectBehavior();
        int i82 = fixedOrderComparator34.compare((java.lang.Object) obj_array44, (java.lang.Object) fixedOrderComparator65);
        collections.comparators.FixedOrderComparator fixedOrderComparator83 = new collections.comparators.FixedOrderComparator(obj_array44);
        boolean b84 = fixedOrderComparator8.add((java.lang.Object) fixedOrderComparator83);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array15);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertTrue(i37 == 0);
        org.junit.Assert.assertNotNull(obj_array44);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertNotNull(obj_array63);
        org.junit.Assert.assertNotNull(obj_array74);
        org.junit.Assert.assertTrue(i78 == 0);
        org.junit.Assert.assertTrue(b79 == true);
        org.junit.Assert.assertTrue(b80 == true);
        org.junit.Assert.assertTrue(i81 == 0);
        org.junit.Assert.assertTrue(i82 == 0);
        org.junit.Assert.assertTrue(b84 == true);
    }

    @Test
    public void test887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test887");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        int i27 = fixedOrderComparator26.getUnknownObjectBehavior();
        int i28 = fixedOrderComparator26.getUnknownObjectBehavior();
        boolean b29 = fixedOrderComparator26.isLocked();
        int i30 = fixedOrderComparator26.getUnknownObjectBehavior();
        int i32 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator26, (java.lang.Object) 1L);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        int i37 = fixedOrderComparator34.getUnknownObjectBehavior();
        fixedOrderComparator34.setUnknownObjectBehavior((int) (byte) 0);
        boolean b41 = fixedOrderComparator34.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array48 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array48);
        boolean b51 = fixedOrderComparator49.add((java.lang.Object) (-1.0f));
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator();
        int i53 = fixedOrderComparator52.getUnknownObjectBehavior();
        boolean b54 = fixedOrderComparator52.isLocked();
        fixedOrderComparator52.setUnknownObjectBehavior(0);
        int i57 = fixedOrderComparator34.compare((java.lang.Object) fixedOrderComparator49, (java.lang.Object) 0);
        int i58 = fixedOrderComparator0.compare((java.lang.Object) 0.0f, (java.lang.Object) fixedOrderComparator49);
        try {
            fixedOrderComparator49.setUnknownObjectBehavior((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(i27 == 2);
        org.junit.Assert.assertTrue(i28 == 2);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertTrue(i30 == 2);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(i37 == 0);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertNotNull(obj_array48);
        org.junit.Assert.assertTrue(b51 == true);
        org.junit.Assert.assertTrue(i53 == 2);
        org.junit.Assert.assertTrue(b54 == false);
        org.junit.Assert.assertTrue(i57 == 0);
        org.junit.Assert.assertTrue(i58 == 0);
    }

    @Test
    public void test888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test888");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array10);
        java.lang.Object[] obj_array20 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array20);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        fixedOrderComparator31.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array40);
        int i44 = fixedOrderComparator31.compare((java.lang.Object) fixedOrderComparator42, (java.lang.Object) (-1.0d));
        boolean b45 = fixedOrderComparator22.add((java.lang.Object) fixedOrderComparator31);
        boolean b46 = fixedOrderComparator31.isLocked();
        int i47 = fixedOrderComparator31.getUnknownObjectBehavior();
        int i48 = fixedOrderComparator0.compare((java.lang.Object) obj_array10, (java.lang.Object) fixedOrderComparator31);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array10);
        boolean b50 = fixedOrderComparator49.isLocked();
        int i51 = fixedOrderComparator49.getUnknownObjectBehavior();
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(i48 == 0);
        org.junit.Assert.assertTrue(b50 == false);
        org.junit.Assert.assertTrue(i51 == 2);
    }

    @Test
    public void test889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test889");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        fixedOrderComparator19.setUnknownObjectBehavior((int) (short) 0);
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        java.lang.Object obj24 = null;
        boolean b25 = fixedOrderComparator19.addAsEqual((java.lang.Object) 10.0f, obj24);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator();
        int i27 = fixedOrderComparator26.getUnknownObjectBehavior();
        java.lang.Object[] obj_array34 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array34);
        boolean b39 = fixedOrderComparator26.add((java.lang.Object) fixedOrderComparator38);
        fixedOrderComparator26.setUnknownObjectBehavior(0);
        boolean b42 = fixedOrderComparator26.isLocked();
        int i44 = fixedOrderComparator19.compare((java.lang.Object) fixedOrderComparator26, (java.lang.Object) 2);
        boolean b45 = fixedOrderComparator10.add((java.lang.Object) fixedOrderComparator26);
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator46.setUnknownObjectBehavior(0);
        int i49 = fixedOrderComparator46.getUnknownObjectBehavior();
        fixedOrderComparator46.setUnknownObjectBehavior((int) (byte) 0);
        fixedOrderComparator46.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array60 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array60);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array60);
        boolean b63 = fixedOrderComparator62.isLocked();
        boolean b64 = fixedOrderComparator62.isLocked();
        int i65 = fixedOrderComparator26.compare((java.lang.Object) 1, (java.lang.Object) b64);
        java.lang.Object[] obj_array72 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator(obj_array72);
        collections.comparators.FixedOrderComparator fixedOrderComparator74 = new collections.comparators.FixedOrderComparator(obj_array72);
        fixedOrderComparator74.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array83 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator84 = new collections.comparators.FixedOrderComparator(obj_array83);
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array83);
        int i87 = fixedOrderComparator74.compare((java.lang.Object) fixedOrderComparator85, (java.lang.Object) (-1.0d));
        collections.comparators.FixedOrderComparator fixedOrderComparator88 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator88.setUnknownObjectBehavior(0);
        boolean b91 = fixedOrderComparator88.isLocked();
        boolean b92 = fixedOrderComparator85.add((java.lang.Object) fixedOrderComparator88);
        boolean b93 = fixedOrderComparator88.isLocked();
        try {
            boolean b94 = fixedOrderComparator26.add((java.lang.Object) b93);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(i27 == 2);
        org.junit.Assert.assertNotNull(obj_array34);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(i49 == 0);
        org.junit.Assert.assertNotNull(obj_array60);
        org.junit.Assert.assertTrue(b63 == false);
        org.junit.Assert.assertTrue(b64 == false);
        org.junit.Assert.assertTrue(i65 == 0);
        org.junit.Assert.assertNotNull(obj_array72);
        org.junit.Assert.assertNotNull(obj_array83);
        org.junit.Assert.assertTrue(i87 == 0);
        org.junit.Assert.assertTrue(b91 == false);
        org.junit.Assert.assertTrue(b92 == true);
        org.junit.Assert.assertTrue(b93 == false);
    }

    @Test
    public void test890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test890");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        boolean b3 = fixedOrderComparator0.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator4 = new collections.comparators.FixedOrderComparator();
        int i5 = fixedOrderComparator4.getUnknownObjectBehavior();
        boolean b6 = fixedOrderComparator4.isLocked();
        fixedOrderComparator4.setUnknownObjectBehavior(0);
        boolean b9 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator4);
        java.lang.Object[] obj_array16 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array16);
        java.lang.Object[] obj_array31 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array31);
        boolean b38 = fixedOrderComparator24.add((java.lang.Object) obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array31);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array31);
        boolean b41 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator40);
        java.lang.Object[] obj_array48 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array48);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array48);
        java.lang.Object[] obj_array63 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator64 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array63);
        boolean b70 = fixedOrderComparator56.add((java.lang.Object) obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array63);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array63);
        boolean b73 = fixedOrderComparator40.add((java.lang.Object) fixedOrderComparator72);
        boolean b74 = fixedOrderComparator72.isLocked();
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(i5 == 2);
        org.junit.Assert.assertTrue(b6 == false);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertNotNull(obj_array31);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertNotNull(obj_array48);
        org.junit.Assert.assertNotNull(obj_array63);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertTrue(b73 == true);
        org.junit.Assert.assertTrue(b74 == false);
    }

    @Test
    public void test891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test891");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        int i12 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i13 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b14 = fixedOrderComparator7.isLocked();
        int i15 = fixedOrderComparator7.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertTrue(i15 == 0);
    }

    @Test
    public void test892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test892");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        java.lang.Object obj17 = null;
        java.lang.Object[] obj_array24 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array24);
        fixedOrderComparator25.setUnknownObjectBehavior(0);
        boolean b29 = fixedOrderComparator25.add((java.lang.Object) 1.0f);
        int i30 = fixedOrderComparator25.getUnknownObjectBehavior();
        int i31 = fixedOrderComparator12.compare(obj17, (java.lang.Object) i30);
        int i32 = fixedOrderComparator12.getUnknownObjectBehavior();
        int i33 = fixedOrderComparator12.getUnknownObjectBehavior();
        int i35 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 10.0d);
        java.lang.Object[] obj_array42 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array42);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array42);
        fixedOrderComparator44.setUnknownObjectBehavior((int) (short) 0);
        boolean b48 = fixedOrderComparator44.add((java.lang.Object) ' ');
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator();
        int i50 = fixedOrderComparator49.getUnknownObjectBehavior();
        java.lang.Object[] obj_array57 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array57);
        boolean b62 = fixedOrderComparator49.add((java.lang.Object) fixedOrderComparator61);
        int i63 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator44, (java.lang.Object) fixedOrderComparator49);
        java.lang.Object[] obj_array70 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array70);
        fixedOrderComparator71.setUnknownObjectBehavior(0);
        boolean b75 = fixedOrderComparator71.add((java.lang.Object) 1.0f);
        int i76 = fixedOrderComparator71.getUnknownObjectBehavior();
        boolean b77 = fixedOrderComparator71.isLocked();
        java.lang.Object[] obj_array78 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array78);
        java.lang.Object[] obj_array80 = new java.lang.Object[] { fixedOrderComparator79 };
        collections.comparators.FixedOrderComparator fixedOrderComparator81 = new collections.comparators.FixedOrderComparator(obj_array80);
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator(obj_array80);
        java.lang.Object[] obj_array89 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator90 = new collections.comparators.FixedOrderComparator(obj_array89);
        collections.comparators.FixedOrderComparator fixedOrderComparator91 = new collections.comparators.FixedOrderComparator(obj_array89);
        int i92 = fixedOrderComparator71.compare((java.lang.Object) fixedOrderComparator82, (java.lang.Object) obj_array89);
        boolean b93 = fixedOrderComparator44.add((java.lang.Object) obj_array89);
        collections.comparators.FixedOrderComparator fixedOrderComparator94 = new collections.comparators.FixedOrderComparator(obj_array89);
        collections.comparators.FixedOrderComparator fixedOrderComparator95 = new collections.comparators.FixedOrderComparator(obj_array89);
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertNotNull(obj_array24);
        org.junit.Assert.assertTrue(b29 == true);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertTrue(i31 == (-1));
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(i33 == 0);
        org.junit.Assert.assertTrue(i35 == 0);
        org.junit.Assert.assertNotNull(obj_array42);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertTrue(i50 == 2);
        org.junit.Assert.assertNotNull(obj_array57);
        org.junit.Assert.assertTrue(b62 == true);
        org.junit.Assert.assertTrue(i63 == 0);
        org.junit.Assert.assertNotNull(obj_array70);
        org.junit.Assert.assertTrue(b75 == true);
        org.junit.Assert.assertTrue(i76 == 0);
        org.junit.Assert.assertTrue(b77 == false);
        org.junit.Assert.assertNotNull(obj_array78);
        org.junit.Assert.assertNotNull(obj_array80);
        org.junit.Assert.assertNotNull(obj_array89);
        org.junit.Assert.assertTrue(i92 == 0);
        org.junit.Assert.assertTrue(b93 == true);
    }

    @Test
    public void test893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test893");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        int i12 = fixedOrderComparator7.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator();
        int i14 = fixedOrderComparator13.getUnknownObjectBehavior();
        boolean b15 = fixedOrderComparator13.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator();
        int i17 = fixedOrderComparator16.getUnknownObjectBehavior();
        boolean b18 = fixedOrderComparator16.isLocked();
        boolean b19 = fixedOrderComparator13.add((java.lang.Object) b18);
        java.lang.Object[] obj_array26 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array26);
        fixedOrderComparator27.setUnknownObjectBehavior(0);
        boolean b31 = fixedOrderComparator27.add((java.lang.Object) 1.0f);
        java.lang.Object obj32 = null;
        java.lang.Object[] obj_array39 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array39);
        fixedOrderComparator40.setUnknownObjectBehavior(0);
        boolean b44 = fixedOrderComparator40.add((java.lang.Object) 1.0f);
        int i45 = fixedOrderComparator40.getUnknownObjectBehavior();
        int i46 = fixedOrderComparator27.compare(obj32, (java.lang.Object) i45);
        int i47 = fixedOrderComparator27.getUnknownObjectBehavior();
        boolean b48 = fixedOrderComparator27.isLocked();
        java.lang.Object[] obj_array55 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array55);
        fixedOrderComparator57.setUnknownObjectBehavior((int) (short) 0);
        int i60 = fixedOrderComparator57.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator61.setUnknownObjectBehavior(0);
        int i64 = fixedOrderComparator61.getUnknownObjectBehavior();
        int i65 = fixedOrderComparator27.compare((java.lang.Object) i60, (java.lang.Object) fixedOrderComparator61);
        java.lang.Object[] obj_array66 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array66);
        java.lang.Object[] obj_array74 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array74);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array74);
        collections.comparators.FixedOrderComparator fixedOrderComparator77 = new collections.comparators.FixedOrderComparator(obj_array74);
        int i78 = fixedOrderComparator77.getUnknownObjectBehavior();
        boolean b79 = fixedOrderComparator77.isLocked();
        int i80 = fixedOrderComparator61.compare((java.lang.Object) fixedOrderComparator67, (java.lang.Object) fixedOrderComparator77);
        boolean b81 = fixedOrderComparator13.add((java.lang.Object) i80);
        collections.comparators.FixedOrderComparator fixedOrderComparator82 = new collections.comparators.FixedOrderComparator();
        int i83 = fixedOrderComparator82.getUnknownObjectBehavior();
        boolean b84 = fixedOrderComparator82.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator();
        int i86 = fixedOrderComparator85.getUnknownObjectBehavior();
        boolean b87 = fixedOrderComparator85.isLocked();
        boolean b88 = fixedOrderComparator82.add((java.lang.Object) b87);
        boolean b89 = fixedOrderComparator82.isLocked();
        fixedOrderComparator82.setUnknownObjectBehavior((int) (byte) 0);
        try {
            boolean b92 = fixedOrderComparator7.addAsEqual((java.lang.Object) fixedOrderComparator13, (java.lang.Object) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(i14 == 2);
        org.junit.Assert.assertTrue(b15 == false);
        org.junit.Assert.assertTrue(i17 == 2);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertNotNull(obj_array26);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertNotNull(obj_array39);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertTrue(i45 == 0);
        org.junit.Assert.assertTrue(i46 == (-1));
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(i60 == 0);
        org.junit.Assert.assertTrue(i64 == 0);
        org.junit.Assert.assertTrue(i65 == 1);
        org.junit.Assert.assertNotNull(obj_array66);
        org.junit.Assert.assertNotNull(obj_array74);
        org.junit.Assert.assertTrue(i78 == 2);
        org.junit.Assert.assertTrue(b79 == false);
        org.junit.Assert.assertTrue(i80 == 0);
        org.junit.Assert.assertTrue(b81 == true);
        org.junit.Assert.assertTrue(i83 == 2);
        org.junit.Assert.assertTrue(b84 == false);
        org.junit.Assert.assertTrue(i86 == 2);
        org.junit.Assert.assertTrue(b87 == false);
        org.junit.Assert.assertTrue(b88 == true);
        org.junit.Assert.assertTrue(b89 == false);
    }

    @Test
    public void test894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test894");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        int i11 = fixedOrderComparator8.getUnknownObjectBehavior();
        java.lang.Object obj13 = null;
        boolean b14 = fixedOrderComparator8.addAsEqual((java.lang.Object) 10.0f, obj13);
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        int i18 = fixedOrderComparator15.getUnknownObjectBehavior();
        fixedOrderComparator15.setUnknownObjectBehavior((int) (byte) 0);
        boolean b21 = fixedOrderComparator15.isLocked();
        int i22 = fixedOrderComparator15.getUnknownObjectBehavior();
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array29);
        int i33 = fixedOrderComparator32.getUnknownObjectBehavior();
        int i34 = fixedOrderComparator8.compare((java.lang.Object) fixedOrderComparator15, (java.lang.Object) i33);
        boolean b36 = fixedOrderComparator15.add((java.lang.Object) (short) 0);
        int i37 = fixedOrderComparator15.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 0);
        org.junit.Assert.assertTrue(b14 == true);
        org.junit.Assert.assertTrue(i18 == 0);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i33 == 2);
        org.junit.Assert.assertTrue(i34 == 0);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(i37 == 0);
    }

    @Test
    public void test895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test895");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i11 = fixedOrderComparator10.getUnknownObjectBehavior();
        int i12 = fixedOrderComparator10.getUnknownObjectBehavior();
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator14 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator14.setUnknownObjectBehavior(0);
        int i17 = fixedOrderComparator14.getUnknownObjectBehavior();
        fixedOrderComparator14.setUnknownObjectBehavior((int) (byte) 0);
        boolean b21 = fixedOrderComparator14.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array28 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        boolean b31 = fixedOrderComparator29.add((java.lang.Object) (-1.0f));
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator();
        int i33 = fixedOrderComparator32.getUnknownObjectBehavior();
        boolean b34 = fixedOrderComparator32.isLocked();
        fixedOrderComparator32.setUnknownObjectBehavior(0);
        int i37 = fixedOrderComparator14.compare((java.lang.Object) fixedOrderComparator29, (java.lang.Object) 0);
        java.lang.Object[] obj_array44 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array44);
        fixedOrderComparator45.setUnknownObjectBehavior(0);
        boolean b48 = fixedOrderComparator29.add((java.lang.Object) fixedOrderComparator45);
        boolean b49 = fixedOrderComparator10.add((java.lang.Object) b48);
        int i50 = fixedOrderComparator10.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 2);
        org.junit.Assert.assertTrue(i12 == 2);
        org.junit.Assert.assertTrue(i13 == 2);
        org.junit.Assert.assertTrue(i17 == 0);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(i33 == 2);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertTrue(i37 == 0);
        org.junit.Assert.assertNotNull(obj_array44);
        org.junit.Assert.assertTrue(b48 == true);
        org.junit.Assert.assertTrue(b49 == true);
        org.junit.Assert.assertTrue(i50 == 2);
    }

    @Test
    public void test896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test896");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i12 = fixedOrderComparator11.getUnknownObjectBehavior();
        fixedOrderComparator11.setUnknownObjectBehavior(2);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i12 == 2);
    }

    @Test
    public void test897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test897");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b2 = fixedOrderComparator0.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator3 = new collections.comparators.FixedOrderComparator();
        int i4 = fixedOrderComparator3.getUnknownObjectBehavior();
        boolean b5 = fixedOrderComparator3.isLocked();
        boolean b6 = fixedOrderComparator0.add((java.lang.Object) b5);
        boolean b7 = fixedOrderComparator0.isLocked();
        int i8 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i11 = fixedOrderComparator0.getUnknownObjectBehavior();
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(i4 == 2);
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue(b6 == true);
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertTrue(i8 == 2);
        org.junit.Assert.assertTrue(i11 == 0);
    }

    @Test
    public void test898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test898");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator4 = new collections.comparators.FixedOrderComparator();
        int i5 = fixedOrderComparator4.getUnknownObjectBehavior();
        boolean b6 = fixedOrderComparator4.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator();
        int i8 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b9 = fixedOrderComparator7.isLocked();
        boolean b10 = fixedOrderComparator4.add((java.lang.Object) b9);
        boolean b11 = fixedOrderComparator4.isLocked();
        java.lang.Object[] obj_array18 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array18);
        boolean b21 = fixedOrderComparator19.add((java.lang.Object) (-1.0f));
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        boolean b23 = fixedOrderComparator4.add((java.lang.Object) i22);
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        boolean b33 = fixedOrderComparator31.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        int i37 = fixedOrderComparator34.getUnknownObjectBehavior();
        fixedOrderComparator34.setUnknownObjectBehavior((int) (byte) 0);
        boolean b40 = fixedOrderComparator31.add((java.lang.Object) fixedOrderComparator34);
        java.lang.Object obj41 = null;
        boolean b42 = fixedOrderComparator31.add(obj41);
        java.lang.Object[] obj_array49 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array49);
        fixedOrderComparator50.setUnknownObjectBehavior(0);
        boolean b54 = fixedOrderComparator50.add((java.lang.Object) 1.0f);
        boolean b56 = fixedOrderComparator50.add((java.lang.Object) 1.0f);
        boolean b57 = fixedOrderComparator50.isLocked();
        boolean b58 = fixedOrderComparator50.isLocked();
        boolean b59 = fixedOrderComparator31.add((java.lang.Object) fixedOrderComparator50);
        boolean b60 = fixedOrderComparator50.isLocked();
        boolean b61 = fixedOrderComparator4.add((java.lang.Object) b60);
        boolean b62 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator4);
        java.lang.Object[] obj_array69 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array69);
        java.lang.Object[] obj_array72 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator(obj_array72);
        boolean b74 = fixedOrderComparator71.add((java.lang.Object) obj_array72);
        boolean b75 = fixedOrderComparator4.add((java.lang.Object) b74);
        int i76 = fixedOrderComparator4.getUnknownObjectBehavior();
        int i77 = fixedOrderComparator4.getUnknownObjectBehavior();
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(i5 == 2);
        org.junit.Assert.assertTrue(b6 == false);
        org.junit.Assert.assertTrue(i8 == 2);
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertTrue(b10 == true);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertNotNull(obj_array18);
        org.junit.Assert.assertTrue(b21 == true);
        org.junit.Assert.assertTrue(i22 == 2);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(b33 == true);
        org.junit.Assert.assertTrue(i37 == 0);
        org.junit.Assert.assertTrue(b40 == true);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertNotNull(obj_array49);
        org.junit.Assert.assertTrue(b54 == true);
        org.junit.Assert.assertTrue(b56 == false);
        org.junit.Assert.assertTrue(b57 == false);
        org.junit.Assert.assertTrue(b58 == false);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertTrue(b60 == false);
        org.junit.Assert.assertTrue(b61 == false);
        org.junit.Assert.assertTrue(b62 == true);
        org.junit.Assert.assertNotNull(obj_array69);
        org.junit.Assert.assertNotNull(obj_array72);
        org.junit.Assert.assertTrue(b74 == true);
        org.junit.Assert.assertTrue(b75 == true);
        org.junit.Assert.assertTrue(i76 == 2);
        org.junit.Assert.assertTrue(i77 == 2);
    }

    @Test
    public void test899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test899");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { fixedOrderComparator0, obj_array22 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array22);
        int i34 = fixedOrderComparator33.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator();
        boolean b36 = fixedOrderComparator33.add((java.lang.Object) fixedOrderComparator35);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator37.setUnknownObjectBehavior(0);
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        java.lang.Object[] obj_array47 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array47);
        java.lang.Object[] obj_array57 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array57);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator(obj_array57);
        java.lang.Object[] obj_array66 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array66);
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator(obj_array66);
        fixedOrderComparator68.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array77 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator78 = new collections.comparators.FixedOrderComparator(obj_array77);
        collections.comparators.FixedOrderComparator fixedOrderComparator79 = new collections.comparators.FixedOrderComparator(obj_array77);
        int i81 = fixedOrderComparator68.compare((java.lang.Object) fixedOrderComparator79, (java.lang.Object) (-1.0d));
        boolean b82 = fixedOrderComparator59.add((java.lang.Object) fixedOrderComparator68);
        boolean b83 = fixedOrderComparator68.isLocked();
        int i84 = fixedOrderComparator68.getUnknownObjectBehavior();
        int i85 = fixedOrderComparator37.compare((java.lang.Object) obj_array47, (java.lang.Object) fixedOrderComparator68);
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator87 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator88 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator89 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator90 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator91 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator92 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator93 = new collections.comparators.FixedOrderComparator(obj_array47);
        boolean b94 = fixedOrderComparator33.add((java.lang.Object) obj_array47);
        fixedOrderComparator33.setUnknownObjectBehavior((int) (short) 0);
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertTrue(i34 == 2);
        org.junit.Assert.assertTrue(b36 == true);
        org.junit.Assert.assertTrue(i40 == 0);
        org.junit.Assert.assertNotNull(obj_array47);
        org.junit.Assert.assertNotNull(obj_array57);
        org.junit.Assert.assertNotNull(obj_array66);
        org.junit.Assert.assertNotNull(obj_array77);
        org.junit.Assert.assertTrue(i81 == 0);
        org.junit.Assert.assertTrue(b82 == true);
        org.junit.Assert.assertTrue(b83 == true);
        org.junit.Assert.assertTrue(i84 == 0);
        org.junit.Assert.assertTrue(i85 == 0);
        org.junit.Assert.assertTrue(b94 == true);
    }

    @Test
    public void test900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test900");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        boolean b10 = fixedOrderComparator7.isLocked();
        boolean b11 = fixedOrderComparator7.isLocked();
        boolean b12 = fixedOrderComparator7.isLocked();
        int i13 = fixedOrderComparator7.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(b10 == false);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(i13 == 2);
    }

    @Test
    public void test901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test901");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        boolean b3 = fixedOrderComparator0.isLocked();
        boolean b4 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array11 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array11);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        boolean b16 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        boolean b18 = fixedOrderComparator12.add((java.lang.Object) 1.0f);
        int i20 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator12, (java.lang.Object) 1.0d);
        int i21 = fixedOrderComparator0.getUnknownObjectBehavior();
        boolean b22 = fixedOrderComparator0.isLocked();
        boolean b23 = fixedOrderComparator0.isLocked();
        java.lang.Object[] obj_array30 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        boolean b33 = fixedOrderComparator31.add((java.lang.Object) (-1.0f));
        int i34 = fixedOrderComparator31.getUnknownObjectBehavior();
        java.lang.Object[] obj_array41 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array41);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array41);
        fixedOrderComparator43.setUnknownObjectBehavior((int) (short) 0);
        int i46 = fixedOrderComparator43.getUnknownObjectBehavior();
        boolean b47 = fixedOrderComparator31.add((java.lang.Object) i46);
        try {
            boolean b48 = fixedOrderComparator0.add((java.lang.Object) i46);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(obj_array11);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(i20 == 0);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertTrue(b22 == true);
        org.junit.Assert.assertTrue(b23 == true);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(b33 == true);
        org.junit.Assert.assertTrue(i34 == 2);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertTrue(i46 == 0);
        org.junit.Assert.assertTrue(b47 == false);
    }

    @Test
    public void test902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test902");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b6 = fixedOrderComparator0.isLocked();
        int i7 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i8 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i9 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array16 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        boolean b19 = fixedOrderComparator17.add((java.lang.Object) (-1.0f));
        int i20 = fixedOrderComparator17.getUnknownObjectBehavior();
        java.lang.Object[] obj_array27 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array27);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array27);
        fixedOrderComparator29.setUnknownObjectBehavior((int) (short) 0);
        int i32 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b33 = fixedOrderComparator17.add((java.lang.Object) i32);
        int i34 = fixedOrderComparator17.getUnknownObjectBehavior();
        int i35 = fixedOrderComparator17.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator17.isLocked();
        java.lang.Object[] obj_array43 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array43);
        boolean b46 = fixedOrderComparator45.isLocked();
        int i47 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator17, (java.lang.Object) fixedOrderComparator45);
        try {
            fixedOrderComparator0.setUnknownObjectBehavior(0);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b6 == false);
        org.junit.Assert.assertTrue(i7 == 0);
        org.junit.Assert.assertTrue(i8 == 0);
        org.junit.Assert.assertTrue(i9 == 0);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i20 == 2);
        org.junit.Assert.assertNotNull(obj_array27);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertTrue(i34 == 2);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertNotNull(obj_array43);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue(i47 == 0);
    }

    @Test
    public void test903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test903");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array16 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        boolean b19 = fixedOrderComparator17.add((java.lang.Object) (-1.0f));
        fixedOrderComparator17.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array28 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array28);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array28);
        int i32 = fixedOrderComparator31.getUnknownObjectBehavior();
        boolean b33 = fixedOrderComparator31.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator();
        java.lang.Object[] obj_array41 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array41);
        boolean b44 = fixedOrderComparator42.add((java.lang.Object) (-1.0f));
        int i45 = fixedOrderComparator42.getUnknownObjectBehavior();
        java.lang.Object[] obj_array52 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array52);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array52);
        fixedOrderComparator54.setUnknownObjectBehavior((int) (short) 0);
        int i57 = fixedOrderComparator54.getUnknownObjectBehavior();
        boolean b58 = fixedOrderComparator42.add((java.lang.Object) i57);
        boolean b59 = fixedOrderComparator34.add((java.lang.Object) fixedOrderComparator42);
        int i60 = fixedOrderComparator17.compare((java.lang.Object) b33, (java.lang.Object) fixedOrderComparator34);
        java.lang.Object[] obj_array68 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array68);
        java.lang.Object[] obj_array73 = new java.lang.Object[] { fixedOrderComparator34, (byte) 10, obj_array68 };
        collections.comparators.FixedOrderComparator fixedOrderComparator74 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array68);
        boolean b76 = fixedOrderComparator9.add((java.lang.Object) fixedOrderComparator75);
        boolean b77 = fixedOrderComparator9.isLocked();
        boolean b78 = fixedOrderComparator9.isLocked();
        try {
            fixedOrderComparator9.setUnknownObjectBehavior(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertNotNull(obj_array28);
        org.junit.Assert.assertTrue(i32 == 2);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertTrue(b44 == true);
        org.junit.Assert.assertTrue(i45 == 2);
        org.junit.Assert.assertNotNull(obj_array52);
        org.junit.Assert.assertTrue(i57 == 0);
        org.junit.Assert.assertTrue(b58 == false);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertTrue(i60 == 0);
        org.junit.Assert.assertNotNull(obj_array68);
        org.junit.Assert.assertNotNull(obj_array73);
        org.junit.Assert.assertTrue(b76 == true);
        org.junit.Assert.assertTrue(b77 == false);
        org.junit.Assert.assertTrue(b78 == false);
    }

    @Test
    public void test904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test904");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array10);
        java.lang.Object[] obj_array20 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array20);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        fixedOrderComparator31.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array40);
        int i44 = fixedOrderComparator31.compare((java.lang.Object) fixedOrderComparator42, (java.lang.Object) (-1.0d));
        boolean b45 = fixedOrderComparator22.add((java.lang.Object) fixedOrderComparator31);
        boolean b46 = fixedOrderComparator31.isLocked();
        int i47 = fixedOrderComparator31.getUnknownObjectBehavior();
        int i48 = fixedOrderComparator0.compare((java.lang.Object) obj_array10, (java.lang.Object) fixedOrderComparator31);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array10);
        java.lang.Object[] obj_array59 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator62 = new collections.comparators.FixedOrderComparator(obj_array59);
        int i63 = fixedOrderComparator62.getUnknownObjectBehavior();
        boolean b64 = fixedOrderComparator52.add((java.lang.Object) fixedOrderComparator62);
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(i48 == 0);
        org.junit.Assert.assertNotNull(obj_array59);
        org.junit.Assert.assertTrue(i63 == 2);
        org.junit.Assert.assertTrue(b64 == true);
    }

    @Test
    public void test905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test905");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        boolean b1 = fixedOrderComparator0.isLocked();
        boolean b3 = fixedOrderComparator0.add((java.lang.Object) 10.0d);
        java.lang.Object obj4 = null;
        boolean b5 = fixedOrderComparator0.add(obj4);
        java.lang.Object[] obj_array12 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array12);
        java.lang.Object[] obj_array20 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        fixedOrderComparator21.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator13.add((java.lang.Object) 0);
        fixedOrderComparator13.setUnknownObjectBehavior((int) (short) 0);
        boolean b27 = fixedOrderComparator13.isLocked();
        boolean b28 = fixedOrderComparator13.isLocked();
        boolean b29 = fixedOrderComparator13.isLocked();
        int i30 = fixedOrderComparator13.getUnknownObjectBehavior();
        int i31 = fixedOrderComparator13.getUnknownObjectBehavior();
        java.lang.Object[] obj_array38 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array38);
        fixedOrderComparator39.setUnknownObjectBehavior(0);
        boolean b43 = fixedOrderComparator39.add((java.lang.Object) 1.0f);
        java.lang.Object obj44 = null;
        java.lang.Object[] obj_array51 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array51);
        fixedOrderComparator52.setUnknownObjectBehavior(0);
        boolean b56 = fixedOrderComparator52.add((java.lang.Object) 1.0f);
        int i57 = fixedOrderComparator52.getUnknownObjectBehavior();
        int i58 = fixedOrderComparator39.compare(obj44, (java.lang.Object) i57);
        java.lang.Object[] obj_array65 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array65);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array65);
        java.lang.Object[] obj_array68 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array68);
        boolean b70 = fixedOrderComparator67.add((java.lang.Object) obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator(obj_array68);
        boolean b74 = fixedOrderComparator13.addAsEqual((java.lang.Object) i57, (java.lang.Object) obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator75 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator76 = new collections.comparators.FixedOrderComparator(obj_array68);
        boolean b77 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator76);
        try {
            fixedOrderComparator76.setUnknownObjectBehavior((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertTrue(b1 == false);
        org.junit.Assert.assertTrue(b3 == true);
        org.junit.Assert.assertTrue(b5 == true);
        org.junit.Assert.assertNotNull(obj_array12);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertTrue(b24 == false);
        org.junit.Assert.assertTrue(b27 == false);
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertTrue(i30 == 0);
        org.junit.Assert.assertTrue(i31 == 0);
        org.junit.Assert.assertNotNull(obj_array38);
        org.junit.Assert.assertTrue(b43 == true);
        org.junit.Assert.assertNotNull(obj_array51);
        org.junit.Assert.assertTrue(b56 == true);
        org.junit.Assert.assertTrue(i57 == 0);
        org.junit.Assert.assertTrue(i58 == (-1));
        org.junit.Assert.assertNotNull(obj_array65);
        org.junit.Assert.assertNotNull(obj_array68);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertTrue(b74 == true);
        org.junit.Assert.assertTrue(b77 == true);
    }

    @Test
    public void test906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test906");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i11 = fixedOrderComparator10.getUnknownObjectBehavior();
        boolean b12 = fixedOrderComparator10.isLocked();
        java.lang.Object[] obj_array20 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        fixedOrderComparator21.setUnknownObjectBehavior(0);
        boolean b25 = fixedOrderComparator21.add((java.lang.Object) 1.0f);
        java.lang.Object obj26 = null;
        java.lang.Object[] obj_array33 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        fixedOrderComparator34.setUnknownObjectBehavior(0);
        boolean b38 = fixedOrderComparator34.add((java.lang.Object) 1.0f);
        int i39 = fixedOrderComparator34.getUnknownObjectBehavior();
        int i40 = fixedOrderComparator21.compare(obj26, (java.lang.Object) i39);
        boolean b41 = fixedOrderComparator21.isLocked();
        int i42 = fixedOrderComparator21.getUnknownObjectBehavior();
        int i43 = fixedOrderComparator21.getUnknownObjectBehavior();
        int i44 = fixedOrderComparator21.getUnknownObjectBehavior();
        boolean b45 = fixedOrderComparator21.isLocked();
        try {
            int i46 = fixedOrderComparator10.compare((java.lang.Object) 10.0f, (java.lang.Object) b45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 2);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertTrue(b38 == true);
        org.junit.Assert.assertTrue(i39 == 0);
        org.junit.Assert.assertTrue(i40 == (-1));
        org.junit.Assert.assertTrue(b41 == true);
        org.junit.Assert.assertTrue(i42 == 0);
        org.junit.Assert.assertTrue(i43 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b45 == true);
    }

    @Test
    public void test907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test907");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b13 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        fixedOrderComparator7.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b31 = fixedOrderComparator7.add((java.lang.Object) obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator36.setUnknownObjectBehavior(0);
        int i39 = fixedOrderComparator36.getUnknownObjectBehavior();
        fixedOrderComparator36.setUnknownObjectBehavior((int) (byte) 0);
        boolean b42 = fixedOrderComparator36.isLocked();
        int i43 = fixedOrderComparator36.getUnknownObjectBehavior();
        int i44 = fixedOrderComparator36.getUnknownObjectBehavior();
        int i45 = fixedOrderComparator36.getUnknownObjectBehavior();
        fixedOrderComparator36.setUnknownObjectBehavior((int) (byte) 1);
        java.lang.Object[] obj_array54 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array54);
        java.lang.Object[] obj_array62 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array62);
        fixedOrderComparator63.setUnknownObjectBehavior(0);
        boolean b66 = fixedOrderComparator55.add((java.lang.Object) 0);
        boolean b67 = fixedOrderComparator55.isLocked();
        collections.comparators.FixedOrderComparator fixedOrderComparator68 = new collections.comparators.FixedOrderComparator();
        int i69 = fixedOrderComparator68.getUnknownObjectBehavior();
        boolean b70 = fixedOrderComparator55.add((java.lang.Object) i69);
        boolean b71 = fixedOrderComparator36.add((java.lang.Object) i69);
        int i72 = fixedOrderComparator36.getUnknownObjectBehavior();
        java.lang.Object obj73 = null;
        try {
            int i74 = fixedOrderComparator35.compare((java.lang.Object) fixedOrderComparator36, obj73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b31 == true);
        org.junit.Assert.assertTrue(i39 == 0);
        org.junit.Assert.assertTrue(b42 == false);
        org.junit.Assert.assertTrue(i43 == 0);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(i45 == 0);
        org.junit.Assert.assertNotNull(obj_array54);
        org.junit.Assert.assertNotNull(obj_array62);
        org.junit.Assert.assertTrue(b66 == false);
        org.junit.Assert.assertTrue(b67 == false);
        org.junit.Assert.assertTrue(i69 == 2);
        org.junit.Assert.assertTrue(b70 == true);
        org.junit.Assert.assertTrue(b71 == true);
        org.junit.Assert.assertTrue(i72 == 1);
    }

    @Test
    public void test908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test908");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        int i10 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        fixedOrderComparator19.setUnknownObjectBehavior((int) (short) 0);
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        boolean b23 = fixedOrderComparator7.add((java.lang.Object) i22);
        int i24 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i25 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array32 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array32);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array32);
        java.lang.Object[] obj_array47 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array47);
        boolean b54 = fixedOrderComparator40.add((java.lang.Object) obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator58 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator59 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator59.setUnknownObjectBehavior(0);
        int i62 = fixedOrderComparator59.getUnknownObjectBehavior();
        int i63 = fixedOrderComparator59.getUnknownObjectBehavior();
        fixedOrderComparator59.setUnknownObjectBehavior((int) (short) 0);
        try {
            boolean b66 = fixedOrderComparator7.addAsEqual((java.lang.Object) fixedOrderComparator58, (java.lang.Object) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i10 == 2);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue(i24 == 2);
        org.junit.Assert.assertTrue(i25 == 2);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertNotNull(obj_array47);
        org.junit.Assert.assertTrue(b54 == true);
        org.junit.Assert.assertTrue(i62 == 0);
        org.junit.Assert.assertTrue(i63 == 0);
    }

    @Test
    public void test909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test909");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator10.setUnknownObjectBehavior(0);
        int i13 = fixedOrderComparator10.getUnknownObjectBehavior();
        fixedOrderComparator10.setUnknownObjectBehavior((int) (byte) 0);
        boolean b16 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator10);
        java.lang.Object obj17 = null;
        boolean b18 = fixedOrderComparator7.add(obj17);
        java.lang.Object[] obj_array25 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array25);
        fixedOrderComparator26.setUnknownObjectBehavior(0);
        boolean b30 = fixedOrderComparator26.add((java.lang.Object) 1.0f);
        boolean b32 = fixedOrderComparator26.add((java.lang.Object) 1.0f);
        boolean b33 = fixedOrderComparator26.isLocked();
        boolean b34 = fixedOrderComparator26.isLocked();
        boolean b35 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator26);
        int i36 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b37 = fixedOrderComparator7.isLocked();
        boolean b38 = fixedOrderComparator7.isLocked();
        java.lang.Object obj39 = null;
        boolean b40 = fixedOrderComparator7.add(obj39);
        java.lang.Object[] obj_array48 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array48);
        boolean b51 = fixedOrderComparator49.add((java.lang.Object) (short) 10);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator52.setUnknownObjectBehavior(0);
        int i55 = fixedOrderComparator52.getUnknownObjectBehavior();
        fixedOrderComparator52.setUnknownObjectBehavior((int) (byte) 0);
        boolean b58 = fixedOrderComparator49.add((java.lang.Object) fixedOrderComparator52);
        java.lang.Object obj60 = null;
        int i61 = fixedOrderComparator52.compare((java.lang.Object) 1.0d, obj60);
        java.lang.Object[] obj_array68 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator69 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array68);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator71.setUnknownObjectBehavior(0);
        int i74 = fixedOrderComparator71.getUnknownObjectBehavior();
        boolean b76 = fixedOrderComparator70.addAsEqual((java.lang.Object) i74, (java.lang.Object) (short) 1);
        int i77 = fixedOrderComparator70.getUnknownObjectBehavior();
        java.lang.Object[] obj_array84 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator85 = new collections.comparators.FixedOrderComparator(obj_array84);
        boolean b86 = fixedOrderComparator85.isLocked();
        boolean b87 = fixedOrderComparator70.add((java.lang.Object) fixedOrderComparator85);
        int i89 = fixedOrderComparator52.compare((java.lang.Object) fixedOrderComparator70, (java.lang.Object) 1L);
        boolean b90 = fixedOrderComparator52.isLocked();
        int i91 = fixedOrderComparator52.getUnknownObjectBehavior();
        try {
            boolean b92 = fixedOrderComparator7.addAsEqual((java.lang.Object) 10L, (java.lang.Object) fixedOrderComparator52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i13 == 0);
        org.junit.Assert.assertTrue(b16 == true);
        org.junit.Assert.assertTrue(b18 == true);
        org.junit.Assert.assertNotNull(obj_array25);
        org.junit.Assert.assertTrue(b30 == true);
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertTrue(b35 == true);
        org.junit.Assert.assertTrue(i36 == 2);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertNotNull(obj_array48);
        org.junit.Assert.assertTrue(b51 == true);
        org.junit.Assert.assertTrue(i55 == 0);
        org.junit.Assert.assertTrue(b58 == true);
        org.junit.Assert.assertTrue(i61 == 0);
        org.junit.Assert.assertNotNull(obj_array68);
        org.junit.Assert.assertTrue(i74 == 0);
        org.junit.Assert.assertTrue(b76 == true);
        org.junit.Assert.assertTrue(i77 == 2);
        org.junit.Assert.assertNotNull(obj_array84);
        org.junit.Assert.assertTrue(b86 == false);
        org.junit.Assert.assertTrue(b87 == true);
        org.junit.Assert.assertTrue(i89 == 0);
        org.junit.Assert.assertTrue(b90 == true);
        org.junit.Assert.assertTrue(i91 == 0);
    }

    @Test
    public void test910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test910");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        boolean b21 = fixedOrderComparator7.isLocked();
        boolean b22 = fixedOrderComparator7.isLocked();
        boolean b23 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array30 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array30);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array30);
        int i35 = fixedOrderComparator34.getUnknownObjectBehavior();
        int i36 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b37 = fixedOrderComparator34.isLocked();
        int i38 = fixedOrderComparator34.getUnknownObjectBehavior();
        boolean b39 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator34);
        boolean b40 = fixedOrderComparator34.isLocked();
        fixedOrderComparator34.setUnknownObjectBehavior((int) (short) 0);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(obj_array30);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(i36 == 2);
        org.junit.Assert.assertTrue(b37 == false);
        org.junit.Assert.assertTrue(i38 == 2);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(b40 == false);
    }

    @Test
    public void test911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test911");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        int i12 = fixedOrderComparator7.getUnknownObjectBehavior();
        boolean b13 = fixedOrderComparator7.isLocked();
        java.lang.Object[] obj_array14 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        java.lang.Object[] obj_array16 = new java.lang.Object[] { fixedOrderComparator15 };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array16);
        java.lang.Object[] obj_array25 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array25);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array25);
        int i28 = fixedOrderComparator7.compare((java.lang.Object) fixedOrderComparator18, (java.lang.Object) obj_array25);
        int i29 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array36 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        boolean b39 = fixedOrderComparator37.add((java.lang.Object) (-1.0f));
        int i40 = fixedOrderComparator37.getUnknownObjectBehavior();
        java.lang.Object[] obj_array47 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array47);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array47);
        fixedOrderComparator49.setUnknownObjectBehavior((int) (short) 0);
        int i52 = fixedOrderComparator49.getUnknownObjectBehavior();
        boolean b53 = fixedOrderComparator37.add((java.lang.Object) i52);
        int i54 = fixedOrderComparator37.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator55.setUnknownObjectBehavior(0);
        int i58 = fixedOrderComparator55.getUnknownObjectBehavior();
        fixedOrderComparator55.setUnknownObjectBehavior((int) (byte) 0);
        boolean b62 = fixedOrderComparator55.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array69 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array69);
        boolean b72 = fixedOrderComparator70.add((java.lang.Object) (-1.0f));
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator();
        int i74 = fixedOrderComparator73.getUnknownObjectBehavior();
        boolean b75 = fixedOrderComparator73.isLocked();
        fixedOrderComparator73.setUnknownObjectBehavior(0);
        int i78 = fixedOrderComparator55.compare((java.lang.Object) fixedOrderComparator70, (java.lang.Object) 0);
        java.lang.Object[] obj_array85 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator86 = new collections.comparators.FixedOrderComparator(obj_array85);
        fixedOrderComparator86.setUnknownObjectBehavior(0);
        boolean b89 = fixedOrderComparator70.add((java.lang.Object) fixedOrderComparator86);
        boolean b90 = fixedOrderComparator37.add((java.lang.Object) fixedOrderComparator70);
        int i91 = fixedOrderComparator37.getUnknownObjectBehavior();
        try {
            boolean b92 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator37);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(i12 == 0);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertNotNull(obj_array25);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertTrue(i29 == 0);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertTrue(b39 == true);
        org.junit.Assert.assertTrue(i40 == 2);
        org.junit.Assert.assertNotNull(obj_array47);
        org.junit.Assert.assertTrue(i52 == 0);
        org.junit.Assert.assertTrue(b53 == false);
        org.junit.Assert.assertTrue(i54 == 2);
        org.junit.Assert.assertTrue(i58 == 0);
        org.junit.Assert.assertTrue(b62 == true);
        org.junit.Assert.assertNotNull(obj_array69);
        org.junit.Assert.assertTrue(b72 == true);
        org.junit.Assert.assertTrue(i74 == 2);
        org.junit.Assert.assertTrue(b75 == false);
        org.junit.Assert.assertTrue(i78 == 0);
        org.junit.Assert.assertNotNull(obj_array85);
        org.junit.Assert.assertTrue(b89 == true);
        org.junit.Assert.assertTrue(b90 == true);
        org.junit.Assert.assertTrue(i91 == 2);
    }

    @Test
    public void test912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test912");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array10);
        java.lang.Object[] obj_array20 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array20);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        fixedOrderComparator31.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array40);
        int i44 = fixedOrderComparator31.compare((java.lang.Object) fixedOrderComparator42, (java.lang.Object) (-1.0d));
        boolean b45 = fixedOrderComparator22.add((java.lang.Object) fixedOrderComparator31);
        boolean b46 = fixedOrderComparator31.isLocked();
        int i47 = fixedOrderComparator31.getUnknownObjectBehavior();
        int i48 = fixedOrderComparator0.compare((java.lang.Object) obj_array10, (java.lang.Object) fixedOrderComparator31);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator55 = new collections.comparators.FixedOrderComparator(obj_array10);
        fixedOrderComparator55.setUnknownObjectBehavior(1);
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(i48 == 0);
    }

    @Test
    public void test913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test913");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b6 = fixedOrderComparator0.isLocked();
        int i7 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i8 = fixedOrderComparator0.getUnknownObjectBehavior();
        int i9 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array16 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator17 = new collections.comparators.FixedOrderComparator(obj_array16);
        boolean b19 = fixedOrderComparator17.add((java.lang.Object) (-1.0f));
        int i20 = fixedOrderComparator17.getUnknownObjectBehavior();
        java.lang.Object[] obj_array27 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array27);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array27);
        fixedOrderComparator29.setUnknownObjectBehavior((int) (short) 0);
        int i32 = fixedOrderComparator29.getUnknownObjectBehavior();
        boolean b33 = fixedOrderComparator17.add((java.lang.Object) i32);
        int i34 = fixedOrderComparator17.getUnknownObjectBehavior();
        int i35 = fixedOrderComparator17.getUnknownObjectBehavior();
        boolean b36 = fixedOrderComparator17.isLocked();
        java.lang.Object[] obj_array43 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array43);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array43);
        boolean b46 = fixedOrderComparator45.isLocked();
        int i47 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator17, (java.lang.Object) fixedOrderComparator45);
        java.lang.Object[] obj_array55 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        collections.comparators.FixedOrderComparator fixedOrderComparator57 = new collections.comparators.FixedOrderComparator(obj_array55);
        fixedOrderComparator57.setUnknownObjectBehavior((int) (short) 0);
        int i60 = fixedOrderComparator57.getUnknownObjectBehavior();
        int i61 = fixedOrderComparator57.getUnknownObjectBehavior();
        int i62 = fixedOrderComparator57.getUnknownObjectBehavior();
        java.lang.Object[] obj_array69 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator70 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator71 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator72 = new collections.comparators.FixedOrderComparator(obj_array69);
        collections.comparators.FixedOrderComparator fixedOrderComparator73 = new collections.comparators.FixedOrderComparator(obj_array69);
        int i74 = fixedOrderComparator73.getUnknownObjectBehavior();
        int i75 = fixedOrderComparator73.getUnknownObjectBehavior();
        boolean b76 = fixedOrderComparator73.isLocked();
        boolean b77 = fixedOrderComparator73.isLocked();
        boolean b78 = fixedOrderComparator57.add((java.lang.Object) fixedOrderComparator73);
        int i79 = fixedOrderComparator57.getUnknownObjectBehavior();
        int i80 = fixedOrderComparator17.compare((java.lang.Object) 0, (java.lang.Object) i79);
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b6 == false);
        org.junit.Assert.assertTrue(i7 == 0);
        org.junit.Assert.assertTrue(i8 == 0);
        org.junit.Assert.assertTrue(i9 == 0);
        org.junit.Assert.assertNotNull(obj_array16);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(i20 == 2);
        org.junit.Assert.assertNotNull(obj_array27);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertTrue(i34 == 2);
        org.junit.Assert.assertTrue(i35 == 2);
        org.junit.Assert.assertTrue(b36 == false);
        org.junit.Assert.assertNotNull(obj_array43);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(i60 == 0);
        org.junit.Assert.assertTrue(i61 == 0);
        org.junit.Assert.assertTrue(i62 == 0);
        org.junit.Assert.assertNotNull(obj_array69);
        org.junit.Assert.assertTrue(i74 == 2);
        org.junit.Assert.assertTrue(i75 == 2);
        org.junit.Assert.assertTrue(b76 == false);
        org.junit.Assert.assertTrue(b77 == false);
        org.junit.Assert.assertTrue(b78 == true);
        org.junit.Assert.assertTrue(i79 == 0);
        org.junit.Assert.assertTrue(i80 == 0);
    }

    @Test
    public void test914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test914");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array10 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator13 = new collections.comparators.FixedOrderComparator(obj_array10);
        java.lang.Object[] obj_array20 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array20);
        java.lang.Object[] obj_array29 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array29);
        collections.comparators.FixedOrderComparator fixedOrderComparator31 = new collections.comparators.FixedOrderComparator(obj_array29);
        fixedOrderComparator31.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object[] obj_array40 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array40);
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array40);
        int i44 = fixedOrderComparator31.compare((java.lang.Object) fixedOrderComparator42, (java.lang.Object) (-1.0d));
        boolean b45 = fixedOrderComparator22.add((java.lang.Object) fixedOrderComparator31);
        boolean b46 = fixedOrderComparator31.isLocked();
        int i47 = fixedOrderComparator31.getUnknownObjectBehavior();
        int i48 = fixedOrderComparator0.compare((java.lang.Object) obj_array10, (java.lang.Object) fixedOrderComparator31);
        collections.comparators.FixedOrderComparator fixedOrderComparator49 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator50 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator51 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator52 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator53 = new collections.comparators.FixedOrderComparator(obj_array10);
        collections.comparators.FixedOrderComparator fixedOrderComparator54 = new collections.comparators.FixedOrderComparator(obj_array10);
        int i55 = fixedOrderComparator54.getUnknownObjectBehavior();
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertNotNull(obj_array10);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertNotNull(obj_array29);
        org.junit.Assert.assertNotNull(obj_array40);
        org.junit.Assert.assertTrue(i44 == 0);
        org.junit.Assert.assertTrue(b45 == true);
        org.junit.Assert.assertTrue(b46 == true);
        org.junit.Assert.assertTrue(i47 == 0);
        org.junit.Assert.assertTrue(i48 == 0);
        org.junit.Assert.assertTrue(i55 == 2);
    }

    @Test
    public void test915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test915");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        int i1 = fixedOrderComparator0.getUnknownObjectBehavior();
        java.lang.Object[] obj_array8 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator11 = new collections.comparators.FixedOrderComparator(obj_array8);
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator(obj_array8);
        boolean b13 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator12);
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        int i27 = fixedOrderComparator26.getUnknownObjectBehavior();
        int i28 = fixedOrderComparator26.getUnknownObjectBehavior();
        boolean b29 = fixedOrderComparator26.isLocked();
        int i30 = fixedOrderComparator26.getUnknownObjectBehavior();
        int i32 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator26, (java.lang.Object) 1L);
        java.lang.Object[] obj_array39 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array39);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array39);
        fixedOrderComparator41.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator41.setUnknownObjectBehavior(2);
        boolean b46 = fixedOrderComparator41.isLocked();
        boolean b47 = fixedOrderComparator26.add((java.lang.Object) fixedOrderComparator41);
        int i48 = fixedOrderComparator41.getUnknownObjectBehavior();
        org.junit.Assert.assertTrue(i1 == 2);
        org.junit.Assert.assertNotNull(obj_array8);
        org.junit.Assert.assertTrue(b13 == true);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(i27 == 2);
        org.junit.Assert.assertTrue(i28 == 2);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertTrue(i30 == 2);
        org.junit.Assert.assertTrue(i32 == 0);
        org.junit.Assert.assertNotNull(obj_array39);
        org.junit.Assert.assertTrue(b46 == false);
        org.junit.Assert.assertTrue(b47 == true);
        org.junit.Assert.assertTrue(i48 == 2);
    }

    @Test
    public void test916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test916");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator8.setUnknownObjectBehavior(2);
        boolean b13 = fixedOrderComparator8.isLocked();
        int i14 = fixedOrderComparator8.getUnknownObjectBehavior();
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(i14 == 2);
    }

    @Test
    public void test917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test917");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        java.lang.Object obj11 = null;
        boolean b12 = fixedOrderComparator8.add(obj11);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b12 == true);
    }

    @Test
    public void test918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test918");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b7 = fixedOrderComparator0.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array14);
        java.lang.Object[] obj_array17 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        boolean b19 = fixedOrderComparator16.add((java.lang.Object) obj_array17);
        boolean b20 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator16);
        int i21 = fixedOrderComparator0.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator();
        boolean b23 = fixedOrderComparator22.isLocked();
        boolean b25 = fixedOrderComparator22.add((java.lang.Object) 10.0d);
        java.lang.Object obj26 = null;
        boolean b27 = fixedOrderComparator22.add(obj26);
        boolean b28 = fixedOrderComparator22.isLocked();
        boolean b29 = fixedOrderComparator22.isLocked();
        java.lang.Object[] obj_array36 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array36);
        int i40 = fixedOrderComparator0.compare((java.lang.Object) fixedOrderComparator22, (java.lang.Object) obj_array36);
        collections.comparators.FixedOrderComparator fixedOrderComparator41 = new collections.comparators.FixedOrderComparator(obj_array36);
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertTrue(i21 == 0);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertTrue(b27 == true);
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertNotNull(obj_array36);
        org.junit.Assert.assertTrue(i40 == 0);
    }

    @Test
    public void test919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test919");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator9 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator10 = new collections.comparators.FixedOrderComparator(obj_array6);
        int i11 = fixedOrderComparator10.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator12 = new collections.comparators.FixedOrderComparator();
        int i13 = fixedOrderComparator12.getUnknownObjectBehavior();
        java.lang.Object[] obj_array20 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator21 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator22 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array20);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array20);
        boolean b25 = fixedOrderComparator12.add((java.lang.Object) fixedOrderComparator24);
        fixedOrderComparator12.setUnknownObjectBehavior(0);
        java.lang.Object[] obj_array34 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator39 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array34);
        java.lang.Object[] obj_array41 = new java.lang.Object[] { fixedOrderComparator12, obj_array34 };
        collections.comparators.FixedOrderComparator fixedOrderComparator42 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator44 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator45 = new collections.comparators.FixedOrderComparator(obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array34);
        boolean b47 = fixedOrderComparator10.add((java.lang.Object) obj_array34);
        collections.comparators.FixedOrderComparator fixedOrderComparator48 = new collections.comparators.FixedOrderComparator(obj_array34);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(i11 == 2);
        org.junit.Assert.assertTrue(i13 == 2);
        org.junit.Assert.assertNotNull(obj_array20);
        org.junit.Assert.assertTrue(b25 == true);
        org.junit.Assert.assertNotNull(obj_array34);
        org.junit.Assert.assertNotNull(obj_array41);
        org.junit.Assert.assertTrue(b47 == true);
    }

    @Test
    public void test920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test920");
        collections.comparators.FixedOrderComparator fixedOrderComparator0 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator0.setUnknownObjectBehavior(0);
        int i3 = fixedOrderComparator0.getUnknownObjectBehavior();
        fixedOrderComparator0.setUnknownObjectBehavior((int) (byte) 0);
        boolean b7 = fixedOrderComparator0.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        collections.comparators.FixedOrderComparator fixedOrderComparator16 = new collections.comparators.FixedOrderComparator(obj_array14);
        java.lang.Object[] obj_array17 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        boolean b19 = fixedOrderComparator16.add((java.lang.Object) obj_array17);
        boolean b20 = fixedOrderComparator0.add((java.lang.Object) fixedOrderComparator16);
        fixedOrderComparator16.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator16.setUnknownObjectBehavior((int) (short) 0);
        int i25 = fixedOrderComparator16.getUnknownObjectBehavior();
        boolean b26 = fixedOrderComparator16.isLocked();
        org.junit.Assert.assertTrue(i3 == 0);
        org.junit.Assert.assertTrue(b7 == true);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(b19 == true);
        org.junit.Assert.assertTrue(b20 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(b26 == false);
    }

    @Test
    public void test921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test921");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        boolean b9 = fixedOrderComparator7.add((java.lang.Object) (-1.0f));
        int i10 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array17 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator18 = new collections.comparators.FixedOrderComparator(obj_array17);
        collections.comparators.FixedOrderComparator fixedOrderComparator19 = new collections.comparators.FixedOrderComparator(obj_array17);
        fixedOrderComparator19.setUnknownObjectBehavior((int) (short) 0);
        int i22 = fixedOrderComparator19.getUnknownObjectBehavior();
        boolean b23 = fixedOrderComparator7.add((java.lang.Object) i22);
        int i24 = fixedOrderComparator7.getUnknownObjectBehavior();
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator();
        fixedOrderComparator25.setUnknownObjectBehavior(0);
        int i28 = fixedOrderComparator25.getUnknownObjectBehavior();
        fixedOrderComparator25.setUnknownObjectBehavior((int) (byte) 0);
        boolean b32 = fixedOrderComparator25.add((java.lang.Object) (short) 10);
        java.lang.Object[] obj_array39 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator40 = new collections.comparators.FixedOrderComparator(obj_array39);
        boolean b42 = fixedOrderComparator40.add((java.lang.Object) (-1.0f));
        collections.comparators.FixedOrderComparator fixedOrderComparator43 = new collections.comparators.FixedOrderComparator();
        int i44 = fixedOrderComparator43.getUnknownObjectBehavior();
        boolean b45 = fixedOrderComparator43.isLocked();
        fixedOrderComparator43.setUnknownObjectBehavior(0);
        int i48 = fixedOrderComparator25.compare((java.lang.Object) fixedOrderComparator40, (java.lang.Object) 0);
        java.lang.Object[] obj_array55 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator56 = new collections.comparators.FixedOrderComparator(obj_array55);
        fixedOrderComparator56.setUnknownObjectBehavior(0);
        boolean b59 = fixedOrderComparator40.add((java.lang.Object) fixedOrderComparator56);
        boolean b60 = fixedOrderComparator7.add((java.lang.Object) fixedOrderComparator40);
        java.lang.Object obj61 = null;
        boolean b62 = fixedOrderComparator40.add(obj61);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b9 == true);
        org.junit.Assert.assertTrue(i10 == 2);
        org.junit.Assert.assertNotNull(obj_array17);
        org.junit.Assert.assertTrue(i22 == 0);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue(i24 == 2);
        org.junit.Assert.assertTrue(i28 == 0);
        org.junit.Assert.assertTrue(b32 == true);
        org.junit.Assert.assertNotNull(obj_array39);
        org.junit.Assert.assertTrue(b42 == true);
        org.junit.Assert.assertTrue(i44 == 2);
        org.junit.Assert.assertTrue(b45 == false);
        org.junit.Assert.assertTrue(i48 == 0);
        org.junit.Assert.assertNotNull(obj_array55);
        org.junit.Assert.assertTrue(b59 == true);
        org.junit.Assert.assertTrue(b60 == true);
        org.junit.Assert.assertTrue(b62 == true);
    }

    @Test
    public void test922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test922");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        java.lang.Object[] obj_array14 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator15 = new collections.comparators.FixedOrderComparator(obj_array14);
        fixedOrderComparator15.setUnknownObjectBehavior(0);
        boolean b18 = fixedOrderComparator7.add((java.lang.Object) 0);
        fixedOrderComparator7.setUnknownObjectBehavior((int) (short) 0);
        boolean b21 = fixedOrderComparator7.isLocked();
        boolean b22 = fixedOrderComparator7.isLocked();
        boolean b23 = fixedOrderComparator7.isLocked();
        int i24 = fixedOrderComparator7.getUnknownObjectBehavior();
        int i25 = fixedOrderComparator7.getUnknownObjectBehavior();
        java.lang.Object[] obj_array32 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array32);
        fixedOrderComparator33.setUnknownObjectBehavior(0);
        boolean b37 = fixedOrderComparator33.add((java.lang.Object) 1.0f);
        java.lang.Object obj38 = null;
        java.lang.Object[] obj_array45 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator46 = new collections.comparators.FixedOrderComparator(obj_array45);
        fixedOrderComparator46.setUnknownObjectBehavior(0);
        boolean b50 = fixedOrderComparator46.add((java.lang.Object) 1.0f);
        int i51 = fixedOrderComparator46.getUnknownObjectBehavior();
        int i52 = fixedOrderComparator33.compare(obj38, (java.lang.Object) i51);
        java.lang.Object[] obj_array59 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator60 = new collections.comparators.FixedOrderComparator(obj_array59);
        collections.comparators.FixedOrderComparator fixedOrderComparator61 = new collections.comparators.FixedOrderComparator(obj_array59);
        java.lang.Object[] obj_array62 = new java.lang.Object[] {};
        collections.comparators.FixedOrderComparator fixedOrderComparator63 = new collections.comparators.FixedOrderComparator(obj_array62);
        boolean b64 = fixedOrderComparator61.add((java.lang.Object) obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator65 = new collections.comparators.FixedOrderComparator(obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator66 = new collections.comparators.FixedOrderComparator(obj_array62);
        collections.comparators.FixedOrderComparator fixedOrderComparator67 = new collections.comparators.FixedOrderComparator(obj_array62);
        boolean b68 = fixedOrderComparator7.addAsEqual((java.lang.Object) i51, (java.lang.Object) obj_array62);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array14);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertTrue(i24 == 0);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertNotNull(obj_array32);
        org.junit.Assert.assertTrue(b37 == true);
        org.junit.Assert.assertNotNull(obj_array45);
        org.junit.Assert.assertTrue(b50 == true);
        org.junit.Assert.assertTrue(i51 == 0);
        org.junit.Assert.assertTrue(i52 == (-1));
        org.junit.Assert.assertNotNull(obj_array59);
        org.junit.Assert.assertNotNull(obj_array62);
        org.junit.Assert.assertTrue(b64 == true);
        org.junit.Assert.assertTrue(b68 == true);
    }

    @Test
    public void test923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test923");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        collections.comparators.FixedOrderComparator fixedOrderComparator8 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator8.setUnknownObjectBehavior((int) (short) 0);
        fixedOrderComparator8.setUnknownObjectBehavior(2);
        java.lang.Object[] obj_array19 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator20 = new collections.comparators.FixedOrderComparator(obj_array19);
        fixedOrderComparator20.setUnknownObjectBehavior(0);
        boolean b24 = fixedOrderComparator20.add((java.lang.Object) 1.0f);
        int i25 = fixedOrderComparator20.getUnknownObjectBehavior();
        boolean b26 = fixedOrderComparator20.isLocked();
        java.lang.Object[] obj_array33 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array33);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array33);
        int i38 = fixedOrderComparator37.getUnknownObjectBehavior();
        boolean b39 = fixedOrderComparator37.isLocked();
        try {
            int i40 = fixedOrderComparator8.compare((java.lang.Object) fixedOrderComparator20, (java.lang.Object) b39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertNotNull(obj_array19);
        org.junit.Assert.assertTrue(b24 == true);
        org.junit.Assert.assertTrue(i25 == 0);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertNotNull(obj_array33);
        org.junit.Assert.assertTrue(i38 == 2);
        org.junit.Assert.assertTrue(b39 == false);
    }

    @Test
    public void test924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTestFixedOrderComparator26A0.test924");
        java.lang.Object[] obj_array6 = new java.lang.Object[] { 100.0d, 10.0f, 10.0d, 0.0d, (short) 0, 0 };
        collections.comparators.FixedOrderComparator fixedOrderComparator7 = new collections.comparators.FixedOrderComparator(obj_array6);
        fixedOrderComparator7.setUnknownObjectBehavior(0);
        boolean b11 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        boolean b13 = fixedOrderComparator7.add((java.lang.Object) 1.0f);
        fixedOrderComparator7.setUnknownObjectBehavior(1);
        java.lang.Object[] obj_array22 = new java.lang.Object[] { (short) 10, 10L, 1.0f, 0, (-1L), 1.0d };
        collections.comparators.FixedOrderComparator fixedOrderComparator23 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator24 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator25 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator26 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator27 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator28 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator29 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator30 = new collections.comparators.FixedOrderComparator(obj_array22);
        boolean b31 = fixedOrderComparator7.add((java.lang.Object) obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator32 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator33 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator34 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator35 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator36 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator37 = new collections.comparators.FixedOrderComparator(obj_array22);
        collections.comparators.FixedOrderComparator fixedOrderComparator38 = new collections.comparators.FixedOrderComparator(obj_array22);
        org.junit.Assert.assertNotNull(obj_array6);
        org.junit.Assert.assertTrue(b11 == true);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertNotNull(obj_array22);
        org.junit.Assert.assertTrue(b31 == true);
    }
}

